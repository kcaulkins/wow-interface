
HekiliDB = {
	["namespaces"] = {
		["LibDualSpec-1.0"] = {
		},
	},
	["profileKeys"] = {
		["Multage - Area 52"] = "Default",
		["Keziya - Area 52"] = "Default",
		["Rokiritan - Area 52"] = "Default",
		["Xenatu - Area 52"] = "Default",
		["Buttoucher - Bladefist"] = "Default",
		["Dekae - Area 52"] = "Default",
		["Mullton - Area 52"] = "Default",
		["Conforce - Area 52"] = "Default",
		["Xenatu - Bladefist"] = "Default",
		["Buttoucher - Area 52"] = "Default",
		["Artefakt - Area 52"] = "Default",
		["Adenydd - Area 52"] = "Default",
		["Nthng - Area 52"] = "Default",
		["Moltun - Area 52"] = "Default",
		["Kolefield - Area 52"] = "Default",
		["Conforse - Area 52"] = "Default",
		["Conforce - Illidan"] = "Default",
		["Vrill - Area 52"] = "Default",
		["Multen - Area 52"] = "Default",
		["Kessiya - Area 52"] = "Default",
		["Shrekt - Bladefist"] = "Default",
		["Moltun - Bladefist"] = "Default",
	},
	["profiles"] = {
		["Default"] = {
			["runOnce"] = {
				["forceReloadClassDefaultOptions_20220306_70"] = true,
				["forceReloadClassDefaultOptions_20220306_252"] = true,
				["forceReloadClassDefaultOptions_20220306_71"] = true,
				["forceReloadClassDefaultOptions_20220306_254"] = true,
				["forceReloadClassDefaultOptions_20220306_102"] = true,
				["forceReloadClassDefaultOptions_20220306_269"] = true,
				["forceReloadClassDefaultOptions_20220306_250"] = true,
				["updateMaxRefreshToNewSpecOptions_20220222"] = true,
				["forceReloadClassDefaultOptions_20220306_66"] = true,
				["forceReloadClassDefaultOptions_20220306_581"] = true,
				["forceReloadClassDefaultOptions_20220306_104"] = true,
				["forceReloadClassDefaultOptions_20220306_1467"] = true,
				["resetAberrantPackageDates_20190728_1"] = true,
				["forceReloadClassDefaultOptions_20220306_103"] = true,
				["forceSpellFlashBrightness_20221030"] = true,
				["forceReloadClassDefaultOptions_20220306_267"] = true,
				["forceReloadClassDefaultOptions_20220306_577"] = true,
				["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
				["forceReloadClassDefaultOptions_20220306_260"] = true,
				["forceReloadClassDefaultOptions_20220306_266"] = true,
				["forceReloadClassDefaultOptions_20220306_265"] = true,
				["forceReloadClassDefaultOptions_20220306_73"] = true,
				["forceReloadAllDefaultPriorities_20220228"] = true,
				["forceReloadClassDefaultOptions_20220306_268"] = true,
				["forceReloadClassDefaultOptions_20220306_258"] = true,
				["forceReloadClassDefaultOptions_20220306_261"] = true,
				["forceEnableAllClassesOnceDueToBug_20220225"] = true,
				["forceReloadClassDefaultOptions_20220306_251"] = true,
				["forceReloadClassDefaultOptions_20220306_259"] = true,
				["forceReloadClassDefaultOptions_20220306_72"] = true,
				["forceReloadClassDefaultOptions_20220306_62"] = true,
				["forceReloadClassDefaultOptions_20220306_63"] = true,
				["forceReloadClassDefaultOptions_20220306_64"] = true,
				["forceReloadClassDefaultOptions_20220306_263"] = true,
				["forceReloadClassDefaultOptions_20220306_262"] = true,
				["forceReloadClassDefaultOptions_20220306_255"] = true,
				["forceReloadClassDefaultOptions_20220306_253"] = true,
			},
			["specs"] = {
				[255] = {
					["settings"] = {
						["use_harpoon"] = true,
						["allow_focus_overcap"] = false,
					},
				},
				[262] = {
					["cycle"] = true,
					["settings"] = {
						["stack_buffer"] = 1.1,
					},
				},
				[263] = {
					["settings"] = {
						["pad_lava_lash"] = true,
						["filler_shock"] = true,
						["purge_icd"] = 12,
						["hostile_dispel"] = false,
						["pad_windstrike"] = true,
					},
				},
				[64] = {
					["settings"] = {
						["ignore_freezing_rain_st"] = true,
					},
				},
				[252] = {
					["settings"] = {
						["disable_iqd_execute"] = false,
					},
				},
				[63] = {
					["settings"] = {
						["pyroblast_pull"] = false,
						["prevent_hardcasts"] = false,
					},
				},
				[70] = {
					["settings"] = {
						["check_wake_range"] = false,
					},
				},
				[103] = {
					["settings"] = {
						["delay_berserking"] = false,
						["owlweave_cat"] = false,
						["filler_regrowth"] = false,
						["rip_duration"] = 9,
					},
				},
				[253] = {
					["settings"] = {
						["avoid_bw_overlap"] = false,
						["check_pet_range"] = true,
						["barbed_shot_grace_period"] = 0.5,
					},
				},
				[71] = {
					["settings"] = {
						["heroic_charge"] = false,
						["shockwave_interrupt"] = true,
					},
				},
				[265] = {
					["settings"] = {
						["manage_ds_ticks"] = false,
					},
				},
				[581] = {
					["settings"] = {
						["infernal_charges"] = 1,
					},
				},
				[577] = {
					["settings"] = {
						["recommend_movement"] = true,
						["unbound_movement"] = false,
						["demon_blades_acknowledged"] = false,
					},
				},
				[258] = {
					["settings"] = {
						["pad_void_bolt"] = true,
						["ignore_solvent"] = true,
						["stm_timer"] = 20,
						["pad_ascended_blast"] = true,
						["sw_death_protection"] = 50,
						["min_sear_ticks"] = 2,
					},
				},
				[266] = {
					["settings"] = {
						["dcon_imps"] = 0,
					},
				},
				[104] = {
					["settings"] = {
						["catweave_bear"] = false,
						["ironfur_damage_threshold"] = 5,
						["mangle_more"] = false,
						["maul_rage"] = 20,
						["owlweave_bear"] = false,
						["shift_for_convoke"] = false,
					},
				},
				[1467] = {
					["settings"] = {
						["use_deep_breath"] = true,
						["use_unravel"] = false,
					},
				},
				[259] = {
					["settings"] = {
						["solo_vanish"] = true,
						["mfd_points"] = 3,
						["priority_rotation"] = false,
						["envenom_pool_pct"] = 50,
					},
				},
				[267] = {
					["petbased"] = true,
					["settings"] = {
						["default_pet"] = "summon_sayaad",
						["fixed_aoe_3_plus"] = false,
					},
					["cycle_min"] = 10,
				},
				[250] = {
					["settings"] = {
						["save_blood_shield"] = true,
						["vb_damage"] = 50,
						["ibf_damage"] = 40,
						["blood_boil_drw"] = false,
					},
				},
				[254] = {
					["settings"] = {
						["eagletalon_swap"] = false,
						["prevent_hardcasts"] = false,
					},
				},
				[260] = {
					["settings"] = {
						["solo_vanish"] = true,
						["dirty_gouge"] = false,
						["ambush_anyway"] = false,
						["mfd_points"] = 3,
					},
				},
				[102] = {
					["settings"] = {
						["starlord_cancel"] = false,
						["delay_berserking"] = false,
					},
				},
				[73] = {
					["settings"] = {
						["rallying_cry_health"] = 50,
						["stack_shield_block"] = false,
						["stance_weaving"] = false,
						["last_stand_amount"] = 50,
						["last_stand_offensively"] = false,
						["free_revenge"] = true,
						["shield_wall_amount"] = 50,
						["rallying_cry_amount"] = 50,
						["shield_wall_condition"] = false,
						["shield_wall_health"] = 50,
						["heroic_charge"] = false,
						["reserve_rage"] = 35,
						["rallying_cry_condition"] = false,
						["shockwave_interrupt"] = true,
						["last_stand_health"] = 50,
						["last_stand_condition"] = false,
						["overlap_ignore_pain"] = false,
					},
				},
				[268] = {
					["settings"] = {
						["purify_stagger_maxhp"] = 6,
						["purify_for_celestial"] = true,
						["bof_percent"] = 50,
						["ox_walker"] = true,
						["eh_percent"] = 65,
						["purify_stagger_currhp"] = 12,
					},
				},
				[261] = {
					["settings"] = {
						["solo_vanish"] = true,
						["mfd_points"] = 3,
						["priority_rotation"] = false,
					},
				},
				[269] = {
					["settings"] = {
						["sef_one_charge"] = false,
						["tok_damage"] = 1,
						["check_wdp_range"] = false,
						["allow_fsk"] = false,
						["use_diffuse"] = false,
						["check_sck_range"] = false,
						["optimize_reverse_harm"] = false,
					},
				},
				[251] = {
					["settings"] = {
						["bos_rp"] = 50,
					},
				},
				[72] = {
					["settings"] = {
						["check_ww_range"] = false,
						["shockwave_interrupt"] = true,
						["heroic_charge"] = false,
					},
					["package"] = "Fury",
				},
			},
			["displays"] = {
				["Interrupts"] = {
					["rel"] = "CENTER",
					["y"] = -191.9999847412109,
					["x"] = -56.99962997436523,
				},
				["Cooldowns"] = {
					["rel"] = "CENTER",
					["numIcons"] = 3,
					["y"] = -135.9995574951172,
					["x"] = 101.0003890991211,
					["visibility"] = {
						["pve"] = {
							["hideMounted"] = true,
						},
						["advanced"] = true,
					},
					["delays"] = {
						["type"] = "ICON",
						["fade"] = true,
					},
				},
				["Primary"] = {
					["glow"] = {
						["queued"] = true,
					},
					["targets"] = {
						["fontSize"] = 19,
					},
					["rel"] = "CENTER",
					["captions"] = {
						["enabled"] = true,
						["queued"] = true,
					},
					["queue"] = {
						["width"] = 45,
						["height"] = 45,
					},
					["y"] = -191.9999847412109,
					["delays"] = {
						["type"] = "ICON",
					},
					["visibility"] = {
						["pve"] = {
							["hideMounted"] = true,
						},
						["advanced"] = true,
					},
					["keybindings"] = {
						["fontSize"] = 21,
					},
				},
				["AOE"] = {
					["rel"] = "CENTER",
					["y"] = -248.9995422363281,
					["x"] = 140.9999542236328,
					["visibility"] = {
						["pve"] = {
							["hideMounted"] = true,
						},
						["advanced"] = true,
					},
				},
				["Defensives"] = {
					["rel"] = "CENTER",
					["y"] = -191.9999847412109,
					["x"] = 160,
				},
			},
			["packs"] = {
				["Windwalker"] = {
					["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/profiles/PreRaids/PR_Monk_Windwalker.simc",
					["builtIn"] = true,
					["date"] = 20221202,
					["spec"] = 269,
					["desc"] = "",
					["lists"] = {
						["opener"] = {
							{
								["enabled"] = true,
								["description"] = "Opener",
								["criteria"] = "talent.chi_burst.enabled & chi.max - chi >= 3",
								["action"] = "expel_harm",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi = 2",
								["action"] = "chi_wave",
							}, -- [3]
							{
								["action"] = "expel_harm",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi >= ( 2 + buff.power_strikes.up )",
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
							}, -- [5]
						},
						["serenity"] = {
							{
								["enabled"] = true,
								["description"] = "Serenity Priority",
								["criteria"] = "active_enemies < 3",
								["action"] = "strike_of_the_windlord",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.remains < 1",
								["action"] = "fists_of_fury",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["action_name"] = "fists_of_fury",
								["action"] = "cancel_action",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & active_enemies = 3 & buff.teachings_of_the_monastery.stack = 2",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & ( active_enemies > 3 || active_enemies > 2 & spinning_crane_kick.modifier >= 2.3 )",
								["action"] = "spinning_crane_kick",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 3",
								["action"] = "strike_of_the_windlord",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & active_enemies > 1",
								["action"] = "spinning_crane_kick",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "whirling_dragon_punch",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 3 & cooldown.fists_of_fury.remains & talent.shadowboxing_treads.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! buff.rushing_jade_wind.up & active_enemies >= 3",
								["action"] = "rushing_jade_wind",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & buff.dance_of_chiji.up",
								["action"] = "spinning_crane_kick",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["action"] = "whirling_dragon_punch",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
							}, -- [16]
						},
						["cd_serenity"] = {
							{
								["enabled"] = true,
								["description"] = "Serenity Cooldowns",
								["criteria"] = "pet.xuen_the_white_tiger.active",
								["action"] = "summon_white_tiger_statue",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! variable.hold_xuen & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 || fight_remains < 25",
								["action"] = "invoke_xuen",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.hold_xuen & ! talent.bonedust_brew.enabled & ( cooldown.rising_sun_kick.remains < 2 ) || fight_remains < 25",
								["action"] = "invoke_xuen",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! buff.bonedust_brew.up & ( cooldown.serenity.up || cooldown.serenity.remains > 15 || fight_remains < 30 & fight_remains > 10 ) || fight_remains < 10",
								["action"] = "bonedust_brew",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 10 || ! talent.invoke_xuen_the_white_tiger.enabled || fight_remains < 15",
								["action"] = "serenity",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "touch_of_death",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "fight_remains > 90 || fight_remains < 10",
								["action"] = "touch_of_karma",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.up || fight_remains < 20",
								["action"] = "blood_fury",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.up || fight_remains < 20",
								["action"] = "berserking",
							}, -- [9]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.up || fight_remains < 20",
								["action"] = "fireblood",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.up || fight_remains < 20",
								["action"] = "ancestral_call",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.serenity.up || fight_remains < 20",
								["action"] = "bag_of_tricks",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled",
								["action"] = "use_items",
							}, -- [14]
						},
						["cd_sef"] = {
							{
								["enabled"] = true,
								["description"] = "Storm, Earth and Fire Cooldowns",
								["criteria"] = "pet.xuen_the_white_tiger.active",
								["action"] = "summon_white_tiger_statue",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! variable.hold_xuen & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 & ( active_enemies < 3 & chi >= 3 || active_enemies >= 3 & chi >= 2 ) || fight_remains < 25",
								["action"] = "invoke_xuen",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.hold_xuen & ! talent.bonedust_brew.enabled & ( cooldown.rising_sun_kick.remains < 2 ) & chi >= 3",
								["action"] = "invoke_xuen",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.bonedust_brew.enabled & ( fight_remains < 30 & cooldown.bonedust_brew.remains < 4 & chi >= 4 || buff.bonedust_brew.up || ! spinning_crane_kick.max & active_enemies >= 3 & cooldown.bonedust_brew.remains <= 2 & chi >= 2 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time )",
								["action"] = "storm_earth_and_fire",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! buff.bonedust_brew.up & buff.storm_earth_and_fire.up & buff.storm_earth_and_fire.remains < 11 & spinning_crane_kick.max ) || ( ! buff.bonedust_brew.up & fight_remains < 30 & fight_remains > 10 & spinning_crane_kick.max & chi >= 4 ) || fight_remains < 10",
								["action"] = "bonedust_brew",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! buff.bonedust_brew.up & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 2 & ( fight_remains > 60 & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 10 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 10 || variable.hold_xuen ) || ( ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 13 ) & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 13 || buff.storm_earth_and_fire.up ) ) )",
								["list_name"] = "bdb_setup",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "fight_remains < 20 || ( cooldown.storm_earth_and_fire.charges = 2 & cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time ) & cooldown.fists_of_fury.remains <= 9 & chi >= 2 & cooldown.whirling_dragon_punch.remains <= 12",
								["action"] = "storm_earth_and_fire",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "touch_of_death",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled",
								["action"] = "use_items",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "fight_remains > 159 || variable.hold_xuen",
								["action"] = "touch_of_karma",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || fight_remains < 20",
								["action"] = "blood_fury",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || fight_remains < 15",
								["action"] = "berserking",
							}, -- [12]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || fight_remains < 10",
								["action"] = "fireblood",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || fight_remains < 20",
								["action"] = "ancestral_call",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.storm_earth_and_fire.down",
								["action"] = "bag_of_tricks",
							}, -- [16]
						},
						["st_cleave"] = {
							{
								["enabled"] = true,
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
								["description"] = "ST Priority (<3 Targets)",
								["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & buff.dance_of_chiji.up",
								["action"] = "spinning_crane_kick",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.thunderfist.enabled",
								["action"] = "strike_of_the_windlord",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.stack = 2 & talent.shadowboxing_treads.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["action"] = "strike_of_the_windlord",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "fists_of_fury",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled & active_enemies > 1 || cooldown.rising_sun_kick.remains > 1 )",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 2",
								["action"] = "whirling_dragon_punch",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "( active_enemies = 1 || ! talent.shadowboxing_treads.enabled ) & cooldown.fists_of_fury.remains > 4 & talent.xuens_battlegear.enabled",
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & active_enemies = 2 & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "! buff.rushing_jade_wind.up & active_enemies = 2",
								["action"] = "rushing_jade_wind",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.bonedust_brew.up & combo_strike & ( active_enemies > 1 || spinning_crane_kick.modifier >= 2.7 )",
								["action"] = "spinning_crane_kick",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["action"] = "whirling_dragon_punch",
								["enabled"] = true,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! buff.rushing_jade_wind.up",
								["action"] = "rushing_jade_wind",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [18]
						},
						["precombat"] = {
							{
								["action"] = "summon_white_tiger_statue",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "chi < chi.max",
								["action"] = "expel_harm",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.faeline_stomp.enabled",
								["action"] = "chi_burst",
							}, -- [3]
							{
								["action"] = "chi_wave",
								["enabled"] = true,
							}, -- [4]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["description"] = "AoE Priority (3+ Targets)",
								["criteria"] = "combo_strike & buff.dance_of_chiji.up & active_enemies > 3",
								["action"] = "spinning_crane_kick",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.thunderfist.enabled & active_enemies > 3",
								["action"] = "strike_of_the_windlord",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 8",
								["action"] = "whirling_dragon_punch",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.bonedust_brew.up & combo_strike & active_enemies > 5 & spinning_crane_kick.modifier >= 3.2",
								["action"] = "spinning_crane_kick",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & buff.dance_of_chiji.up",
								["action"] = "spinning_crane_kick",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.thunderfist.enabled",
								["action"] = "strike_of_the_windlord",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 5",
								["action"] = "whirling_dragon_punch",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.up & ( buff.teachings_of_the_monastery.stack = 2 || active_enemies < 5 ) & talent.shadowboxing_treads.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["action"] = "whirling_dragon_punch",
								["enabled"] = true,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.bonedust_brew.up & combo_strike",
								["action"] = "spinning_crane_kick",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 3",
								["action"] = "fists_of_fury",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! buff.rushing_jade_wind.up & active_enemies > 3",
								["action"] = "rushing_jade_wind",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.teachings_of_the_monastery.up & active_enemies >= 5 & talent.shadowboxing_treads.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & ( active_enemies >= 7 || active_enemies = 6 & spinning_crane_kick.modifier >= 2.7 || active_enemies = 5 & spinning_crane_kick.modifier >= 2.9 )",
								["action"] = "spinning_crane_kick",
							}, -- [16]
							{
								["action"] = "strike_of_the_windlord",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & active_enemies >= 5 || active_enemies = 4 & spinning_crane_kick.modifier >= 2.5 || ! talent.shadowboxing_treads.enabled",
								["action"] = "spinning_crane_kick",
							}, -- [18]
							{
								["action"] = "fists_of_fury",
								["enabled"] = true,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "faeline_stomp",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "! buff.rushing_jade_wind.up",
								["action"] = "rushing_jade_wind",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["action"] = "whirling_dragon_punch",
								["enabled"] = true,
							}, -- [24]
						},
						["fallthru"] = {
							{
								["enabled"] = true,
								["description"] = "Fallthru",
								["criteria"] = "buff.the_emperors_capacitor.stack > 19 & energy.time_to_max > execute_time - 1 & cooldown.rising_sun_kick.remains > execute_time || buff.the_emperors_capacitor.stack > 14 & ( cooldown.serenity.remains < 5 & talent.serenity.enabled || fight_remains < 5 )",
								["action"] = "crackling_jade_lightning",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike",
								["action"] = "faeline_stomp",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi >= 1 & active_enemies > 2",
								["action"] = "expel_harm",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi >= 1 & active_enemies = 1 & raid_event.adds.in > 20 || chi.max - chi >= 2 & active_enemies >= 2",
								["action"] = "chi_burst",
							}, -- [5]
							{
								["action"] = "chi_wave",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi >= 1",
								["action"] = "expel_harm",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & buff.chi_energy.stack > 30 - 5 * active_enemies & buff.storm_earth_and_fire.down & ( cooldown.rising_sun_kick.remains > 2 & cooldown.fists_of_fury.remains > 2 || cooldown.rising_sun_kick.remains < 3 & cooldown.fists_of_fury.remains > 3 & chi > 3 || cooldown.rising_sun_kick.remains > 3 & cooldown.fists_of_fury.remains < 3 & chi > 4 || chi.max - chi <= 1 & energy.time_to_max < 2 ) || buff.chi_energy.stack > 10 & fight_remains < 7",
								["action"] = "spinning_crane_kick",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "chi.max - chi >= 1",
								["action"] = "arcane_torrent",
							}, -- [9]
							{
								["interrupt"] = "1",
								["action"] = "flying_serpent_kick",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "tiger_palm",
								["enabled"] = true,
							}, -- [11]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spear_hand_strike",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.invoke_xuen_the_white_tiger.enabled || cooldown.invoke_xuen_the_white_tiger.remains > fight_remains || fight_remains - cooldown.invoke_xuen_the_white_tiger.remains < 120 & ( ( talent.serenity.enabled & fight_remains > cooldown.serenity.remains & cooldown.serenity.remains > 10 ) || ( cooldown.storm_earth_and_fire.full_recharge_time < fight_remains & cooldown.storm_earth_and_fire.full_recharge_time > 15 ) || ( cooldown.storm_earth_and_fire.charges = 0 & cooldown.storm_earth_and_fire.remains < fight_remains ) )",
								["var_name"] = "hold_xuen",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Potion",
								["action"] = "potion",
								["criteria"] = "( buff.serenity.up || buff.storm_earth_and_fire.up ) & fight_remains <= 60",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Build Chi at the start of combat",
								["criteria"] = "time < 4 & chi < 5 & ! talent.serenity.enabled",
								["list_name"] = "opener",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "faeline_stomp",
								["cycle_targets"] = 1,
								["description"] = "Prioritize Faeline Stomp if playing with Faeline Harmony",
								["criteria"] = "combo_strike & talent.faeline_harmony.enabled & debuff.fae_exposure_damage.remains < 1",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
								["description"] = "TP if not overcapping Chi or TotM",
								["criteria"] = "! buff.serenity.up & buff.teachings_of_the_monastery.stack < 3 & combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up ) & ( ! talent.invoke_xuen_the_white_tiger.enabled & ! talent.serenity.enabled || ( ! talent.skyreach.enabled || time > 5 || pet.xuen_the_white_tiger.active ) )",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Use Chi Burst to reset Faeline Stomp",
								["criteria"] = "talent.faeline_stomp.enabled & cooldown.faeline_stomp.remains & ( chi.max - chi >= 1 & active_enemies = 1 || chi.max - chi >= 2 & active_enemies >= 2 )",
								["action"] = "chi_burst",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Cooldowns",
								["criteria"] = "! talent.serenity.enabled",
								["list_name"] = "cd_sef",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.serenity.enabled",
								["list_name"] = "cd_serenity",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Serenity / Default Priority",
								["criteria"] = "buff.serenity.up",
								["list_name"] = "serenity",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "active_enemies >= 3",
								["list_name"] = "aoe",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "active_enemies < 3",
								["list_name"] = "st_cleave",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "fallthru",
							}, -- [13]
						},
						["bdb_setup"] = {
							{
								["enabled"] = true,
								["description"] = "Bonedust Brew Setup",
								["criteria"] = "spinning_crane_kick.max & chi >= 4",
								["action"] = "bonedust_brew",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & ! talent.whirling_dragon_punch.enabled",
								["action"] = "blackout_kick",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & chi >= 5",
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & chi.max - chi >= 2",
								["action"] = "tiger_palm",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "combo_strike & active_enemies >= 2",
								["action"] = "rising_sun_kick",
								["cycle_targets"] = 1,
							}, -- [5]
						},
					},
					["version"] = 20221202,
					["warnings"] = "The import for 'serenity' required some automated changes.\nLine 10: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 16: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'cd_serenity' required some automated changes.\nLine 2: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 5: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 14: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 14: Converted operations in 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled' to 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled'.\n\nThe import for 'cd_sef' required some automated changes.\nLine 2: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 6: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 9: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 9: Converted operations in 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled' to 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled'.\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 4: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 5: Converted 'talent.faeline_harmony' to 'talent.faeline_harmony.enabled' (1x).\nLine 6: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 6: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 6: Converted 'talent.skyreach' to 'talent.skyreach.enabled' (1x).\nLine 7: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\nLine 8: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 9: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 5: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 7: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 9: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 15: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 18: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\n\nThe import for 'fallthru' required some automated changes.\nLine 1: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'st_cleave' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 3: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 5: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 8: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\n\nThe import for 'bdb_setup' required some automated changes.\nLine 2: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\n\nImported 10 action lists.\n",
					["author"] = "SimC",
					["profile"] = "actions.precombat+=/summon_white_tiger_statue\nactions.precombat+=/expel_harm,if=chi<chi.max\nactions.precombat+=/chi_burst,if=!talent.faeline_stomp\nactions.precombat+=/chi_wave\n\n# Executed every time the actor is available.\nactions=spear_hand_strike\nactions+=/variable,name=hold_xuen,op=set,value=!talent.invoke_xuen_the_white_tiger||cooldown.invoke_xuen_the_white_tiger.remains>fight_remains||fight_remains-cooldown.invoke_xuen_the_white_tiger.remains<120&((talent.serenity&fight_remains>cooldown.serenity.remains&cooldown.serenity.remains>10)||(cooldown.storm_earth_and_fire.full_recharge_time<fight_remains&cooldown.storm_earth_and_fire.full_recharge_time>15)||(cooldown.storm_earth_and_fire.charges=0&cooldown.storm_earth_and_fire.remains<fight_remains))\n# Potion\nactions+=/potion,if=(buff.serenity.up||buff.storm_earth_and_fire.up)&fight_remains<=60\n# Build Chi at the start of combat\nactions+=/call_action_list,name=opener,if=time<4&chi<5&!talent.serenity\n# Prioritize Faeline Stomp if playing with Faeline Harmony\nactions+=/faeline_stomp,cycle_targets=1,if=combo_strike&talent.faeline_harmony&debuff.fae_exposure_damage.remains<1\n# TP if not overcapping Chi or TotM\nactions+=/tiger_palm,cycle_targets=1,if=!buff.serenity.up&buff.teachings_of_the_monastery.stack<3&combo_strike&chi.max-chi>=(2+buff.power_strikes.up)&(!talent.invoke_xuen_the_white_tiger&!talent.serenity||(!talent.skyreach||time>5||pet.xuen_the_white_tiger.active))\n# Use Chi Burst to reset Faeline Stomp\nactions+=/chi_burst,if=talent.faeline_stomp&cooldown.faeline_stomp.remains&(chi.max-chi>=1&active_enemies=1||chi.max-chi>=2&active_enemies>=2)\n# Cooldowns\nactions+=/call_action_list,name=cd_sef,if=!talent.serenity\nactions+=/call_action_list,name=cd_serenity,if=talent.serenity\n# Serenity / Default Priority\nactions+=/call_action_list,name=serenity,if=buff.serenity.up\nactions+=/call_action_list,name=aoe,if=active_enemies>=3\nactions+=/call_action_list,name=st_cleave,if=active_enemies<3\nactions+=/call_action_list,name=fallthru\n\n# AoE Priority (3+ Targets)\nactions.aoe=spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&active_enemies>3\nactions.aoe+=/strike_of_the_windlord,if=talent.thunderfist&active_enemies>3\nactions.aoe+=/whirling_dragon_punch,if=active_enemies>8\nactions.aoe+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&active_enemies>5&spinning_crane_kick.modifier>=3.2\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.aoe+=/strike_of_the_windlord,if=talent.thunderfist\nactions.aoe+=/whirling_dragon_punch,if=active_enemies>5\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(buff.teachings_of_the_monastery.stack=2||active_enemies<5)&talent.shadowboxing_treads\nactions.aoe+=/whirling_dragon_punch\nactions.aoe+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike\nactions.aoe+=/fists_of_fury,if=active_enemies>3\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies>3\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&active_enemies>=5&talent.shadowboxing_treads\nactions.aoe+=/spinning_crane_kick,if=combo_strike&(active_enemies>=7||active_enemies=6&spinning_crane_kick.modifier>=2.7||active_enemies=5&spinning_crane_kick.modifier>=2.9)\nactions.aoe+=/strike_of_the_windlord\nactions.aoe+=/spinning_crane_kick,if=combo_strike&active_enemies>=5||active_enemies=4&spinning_crane_kick.modifier>=2.5||!talent.shadowboxing_treads\nactions.aoe+=/fists_of_fury\nactions.aoe+=/faeline_stomp,if=combo_strike\nactions.aoe+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.aoe+=/rising_sun_kick,cycle_targets=1\nactions.aoe+=/whirling_dragon_punch\n\n# Bonedust Brew Setup\nactions.bdb_setup=bonedust_brew,if=spinning_crane_kick.max&chi>=4\nactions.bdb_setup+=/blackout_kick,cycle_targets=1,if=combo_strike&!talent.whirling_dragon_punch\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&chi>=5\nactions.bdb_setup+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=2\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&active_enemies>=2\n\n# Storm, Earth and Fire Cooldowns\nactions.cd_sef=summon_white_tiger_statue,if=pet.xuen_the_white_tiger.active\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5&(active_enemies<3&chi>=3||active_enemies>=3&chi>=2)||fight_remains<25\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&!talent.bonedust_brew&(cooldown.rising_sun_kick.remains<2)&chi>=3\nactions.cd_sef+=/storm_earth_and_fire,if=talent.bonedust_brew&(fight_remains<30&cooldown.bonedust_brew.remains<4&chi>=4||buff.bonedust_brew.up||!spinning_crane_kick.max&active_enemies>=3&cooldown.bonedust_brew.remains<=2&chi>=2)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)\nactions.cd_sef+=/bonedust_brew,if=(!buff.bonedust_brew.up&buff.storm_earth_and_fire.up&buff.storm_earth_and_fire.remains<11&spinning_crane_kick.max)||(!buff.bonedust_brew.up&fight_remains<30&fight_remains>10&spinning_crane_kick.max&chi>=4)||fight_remains<10\nactions.cd_sef+=/call_action_list,name=bdb_setup,if=!buff.bonedust_brew.up&talent.bonedust_brew&cooldown.bonedust_brew.remains<=2&(fight_remains>60&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>10)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>10||variable.hold_xuen)||((pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>13)&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>13||buff.storm_earth_and_fire.up)))\nactions.cd_sef+=/storm_earth_and_fire,if=fight_remains<20||(cooldown.storm_earth_and_fire.charges=2&cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)&cooldown.fists_of_fury.remains<=9&chi>=2&cooldown.whirling_dragon_punch.remains<=12\nactions.cd_sef+=/touch_of_death,cycle_targets=1,if=combo_strike\nactions.cd_sef+=/use_items,if=cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger\nactions.cd_sef+=/touch_of_karma,if=fight_remains>159||variable.hold_xuen\nactions.cd_sef+=/blood_fury,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||fight_remains<20\nactions.cd_sef+=/berserking,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||fight_remains<15\nactions.cd_sef+=/lights_judgment\nactions.cd_sef+=/fireblood,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||fight_remains<10\nactions.cd_sef+=/ancestral_call,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||fight_remains<20\nactions.cd_sef+=/bag_of_tricks,if=buff.storm_earth_and_fire.down\n\n# Serenity Cooldowns\nactions.cd_serenity=summon_white_tiger_statue,if=pet.xuen_the_white_tiger.active\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5||fight_remains<25\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&!talent.bonedust_brew&(cooldown.rising_sun_kick.remains<2)||fight_remains<25\nactions.cd_serenity+=/bonedust_brew,if=!buff.bonedust_brew.up&(cooldown.serenity.up||cooldown.serenity.remains>15||fight_remains<30&fight_remains>10)||fight_remains<10\nactions.cd_serenity+=/serenity,if=pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>10||!talent.invoke_xuen_the_white_tiger||fight_remains<15\nactions.cd_serenity+=/touch_of_death,cycle_targets=1,if=combo_strike\nactions.cd_serenity+=/touch_of_karma,if=fight_remains>90||fight_remains<10\nactions.cd_serenity+=/blood_fury,if=buff.serenity.up||fight_remains<20\nactions.cd_serenity+=/berserking,if=buff.serenity.up||fight_remains<20\nactions.cd_serenity+=/lights_judgment\nactions.cd_serenity+=/fireblood,if=buff.serenity.up||fight_remains<20\nactions.cd_serenity+=/ancestral_call,if=buff.serenity.up||fight_remains<20\nactions.cd_serenity+=/bag_of_tricks,if=buff.serenity.up||fight_remains<20\nactions.cd_serenity+=/use_items,if=cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger\n\n# Fallthru\nactions.fallthru=crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&energy.time_to_max>execute_time-1&cooldown.rising_sun_kick.remains>execute_time||buff.the_emperors_capacitor.stack>14&(cooldown.serenity.remains<5&talent.serenity||fight_remains<5)\nactions.fallthru+=/faeline_stomp,if=combo_strike\nactions.fallthru+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1&active_enemies>2\nactions.fallthru+=/chi_burst,if=chi.max-chi>=1&active_enemies=1&raid_event.adds.in>20||chi.max-chi>=2&active_enemies>=2\nactions.fallthru+=/chi_wave\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1\nactions.fallthru+=/spinning_crane_kick,if=combo_strike&buff.chi_energy.stack>30-5*active_enemies&buff.storm_earth_and_fire.down&(cooldown.rising_sun_kick.remains>2&cooldown.fists_of_fury.remains>2||cooldown.rising_sun_kick.remains<3&cooldown.fists_of_fury.remains>3&chi>3||cooldown.rising_sun_kick.remains>3&cooldown.fists_of_fury.remains<3&chi>4||chi.max-chi<=1&energy.time_to_max<2)||buff.chi_energy.stack>10&fight_remains<7\nactions.fallthru+=/arcane_torrent,if=chi.max-chi>=1\nactions.fallthru+=/flying_serpent_kick,interrupt=1\nactions.fallthru+=/tiger_palm\n\n# Opener\nactions.opener=expel_harm,if=talent.chi_burst.enabled&chi.max-chi>=3\nactions.opener+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.opener+=/chi_wave,if=chi.max-chi=2\nactions.opener+=/expel_harm\nactions.opener+=/tiger_palm,cycle_targets=1,if=chi.max-chi>=(2+buff.power_strikes.up)\n\n# Serenity Priority\nactions.serenity=strike_of_the_windlord,if=active_enemies<3\nactions.serenity+=/fists_of_fury,if=buff.serenity.remains<1\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity+=/cancel_action,name=fists_of_fury\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies=3&buff.teachings_of_the_monastery.stack=2\nactions.serenity+=/spinning_crane_kick,if=combo_strike&(active_enemies>3||active_enemies>2&spinning_crane_kick.modifier>=2.3)\nactions.serenity+=/strike_of_the_windlord,if=active_enemies>=3\nactions.serenity+=/spinning_crane_kick,if=combo_strike&active_enemies>1\nactions.serenity+=/whirling_dragon_punch,if=active_enemies>1\nactions.serenity+=/blackout_kick,cycle_targets=1,if=active_enemies>=3&cooldown.fists_of_fury.remains&talent.shadowboxing_treads\nactions.serenity+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies>=3\nactions.serenity+=/rising_sun_kick,cycle_targets=1\nactions.serenity+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity+=/whirling_dragon_punch\nactions.serenity+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# ST Priority (<3 Targets)\nactions.st_cleave=blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.st_cleave+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.st_cleave+=/strike_of_the_windlord,if=talent.thunderfist\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=active_enemies=1&buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2&talent.shadowboxing_treads\nactions.st_cleave+=/strike_of_the_windlord\nactions.st_cleave+=/fists_of_fury\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads&active_enemies>1||cooldown.rising_sun_kick.remains>1)\nactions.st_cleave+=/whirling_dragon_punch,if=active_enemies=2\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=(active_enemies=1||!talent.shadowboxing_treads)&cooldown.fists_of_fury.remains>4&talent.xuens_battlegear\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies=2&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies=2\nactions.st_cleave+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&(active_enemies>1||spinning_crane_kick.modifier>=2.7)\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1\nactions.st_cleave+=/whirling_dragon_punch\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike",
				},
				["Beast Mastery"] = {
					["source"] = "# https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221130.1,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "counter_shot",
							}, -- [1]
							{
								["action"] = "tranquilizing_shot",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies < 2 || ! talent.beast_cleave.enabled & active_enemies < 3",
								["list_name"] = "st",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 2 || talent.beast_cleave.enabled & active_enemies > 1",
								["list_name"] = "cleave",
							}, -- [5]
						},
						["precombat"] = {
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "bottled_flayedwing_toxin",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["precast_time"] = "1.5",
								["action"] = "steel_trap",
								["criteria"] = "! talent.wailing_arrow.enabled & talent.steel_trap.enabled",
							}, -- [3]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.bestial_wrath.enabled || buff.bestial_wrath.up || boss & fight_remains < 16",
								["action"] = "berserking",
							}, -- [1]
							{
								["enabled"] = true,
								["slots"] = "trinket1",
								["action"] = "trinket1",
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 31",
							}, -- [2]
							{
								["enabled"] = true,
								["slots"] = "trinket2",
								["action"] = "trinket2",
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 31",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 16",
								["action"] = "blood_fury",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 16",
								["action"] = "ancestral_call",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 10",
								["action"] = "fireblood",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up & ( buff.bloodlust.up || target.health.pct < 20 ) ) || boss & fight_remains < 31",
								["action"] = "potion",
							}, -- [7]
						},
						["st"] = {
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || talent.scent_of_blood.enabled & buff.frenzy.stack < 3 & cooldown.bestial_wrath.ready",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max & talent.alpha_predator.enabled",
								["action"] = "kill_command",
							}, -- [2]
							{
								["action"] = "call_of_the_wild",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "bloodshed",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "stampede",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "a_murder_of_crows",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "explosive_shot",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "bestial_wrath",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "kill_command",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "talent.wild_instincts.enabled & buff.call_of_the_wild.up || talent.wild_call.enabled & charges_fractional > 1.4 || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains || talent.scent_of_blood.enabled & ( cooldown.bestial_wrath.remains < 12 + gcd.max || full_recharge_time + gcd.max < 8 & cooldown.bestial_wrath.remains < 24 + ( 8 - gcd.max ) + full_recharge_time ) || boss & fight_remains < 9",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["action"] = "dire_beast",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & target.time_to_die > duration",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["action"] = "kill_shot",
								["enabled"] = true,
							}, -- [15]
							{
								["action"] = "aspect_of_the_wild",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "cobra_shot",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.frenzy.remains > execute_time || boss & fight_remains < 5",
								["action"] = "wailing_arrow",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.bestial_wrath.down || boss & fight_remains < 5",
								["action"] = "bag_of_tricks",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.bestial_wrath.down || boss & fight_remains < 5",
								["action"] = "arcane_pulse",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "( focus + focus.regen + 15 ) < focus.max",
								["action"] = "arcane_torrent",
							}, -- [21]
						},
						["cleave"] = {
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "debuff.latent_poison.stack > 9 & ( buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || talent.scent_of_blood.enabled & cooldown.bestial_wrath.remains < 12 + gcd.max || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains )",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || talent.scent_of_blood.enabled & cooldown.bestial_wrath.remains < 12 + gcd.max || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.beast_cleave.remains < 0.25 + gcd.max",
								["action"] = "multishot",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max & talent.alpha_predator.enabled & talent.kill_cleave.enabled",
								["action"] = "kill_command",
							}, -- [4]
							{
								["action"] = "call_of_the_wild",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "explosive_shot",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.bestial_wrath.up || boss & fight_remains < 15",
								["action"] = "stampede",
							}, -- [7]
							{
								["action"] = "bloodshed",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "bestial_wrath",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "a_murder_of_crows",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "debuff.latent_poison.stack > 9 & ( talent.wild_instincts.enabled & buff.call_of_the_wild.up || boss & fight_remains < 9 || talent.wild_call.enabled & charges_fractional > 1.2 )",
								["cycle_targets"] = 1,
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "barbed_shot",
								["criteria"] = "talent.wild_instincts.enabled & buff.call_of_the_wild.up || boss & fight_remains < 9 || talent.wild_call.enabled & charges_fractional > 1.2",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["action"] = "kill_command",
								["enabled"] = true,
							}, -- [15]
							{
								["action"] = "dire_beast",
								["enabled"] = true,
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & target.time_to_die > duration",
								["cycle_targets"] = 1,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.frenzy.remains > execute_time",
								["action"] = "barrage",
							}, -- [18]
							{
								["action"] = "kill_shot",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "aspect_of_the_wild",
								["enabled"] = true,
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "focus.time_to_max < gcd.max * 2 || buff.aspect_of_the_wild.up & focus.time_to_max < gcd.max * 4",
								["action"] = "cobra_shot",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.frenzy.remains > execute_time || boss & fight_remains < 5",
								["action"] = "wailing_arrow",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.bestial_wrath.down || boss & fight_remains < 5",
								["action"] = "bag_of_tricks",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "( focus + focus.regen + 30 ) < focus.max",
								["action"] = "arcane_torrent",
							}, -- [24]
						},
					},
					["version"] = 20221130.1,
					["warnings"] = "The import for 'default' required some automated changes.\nLine 4: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\nLine 5: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.wailing_arrow' to 'talent.wailing_arrow.enabled' (1x).\nLine 3: Converted 'talent.steel_trap' to 'talent.steel_trap.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.bestial_wrath' to 'talent.bestial_wrath.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 5: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 6: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 7: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 1: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.stack' to 'buff.frenzy.stack' (1x).\nLine 2: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 12: Converted 'talent.wild_instincts' to 'talent.wild_instincts.enabled' (1x).\nLine 12: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 12: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 18: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 1: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 2: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 2: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 2: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 3: Converted 'pet.main.buff.beast_cleave.remains' to 'buff.beast_cleave.remains' (1x).\nLine 4: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 4: Converted 'talent.kill_cleave' to 'talent.kill_cleave.enabled' (1x).\nLine 13: Converted 'talent.wild_instincts' to 'talent.wild_instincts.enabled' (1x).\nLine 13: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 14: Converted 'talent.wild_instincts' to 'talent.wild_instincts.enabled' (1x).\nLine 14: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 18: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 22: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "actions.precombat+=/summon_pet\nactions.precombat+=/bottled_flayedwing_toxin\nactions.precombat+=/steel_trap,precast_time=1.5,if=!talent.wailing_arrow&talent.steel_trap\n\n# Executed every time the actor is available.\nactions=counter_shot\nactions+=/tranquilizing_shot\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<2||!talent.beast_cleave&active_enemies<3\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies>2||talent.beast_cleave&active_enemies>1\n\nactions.cds+=/berserking,if=!talent.bestial_wrath||buff.bestial_wrath.up||boss&fight_remains<16\nactions.cds+=/use_items,slots=trinket1,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<31\nactions.cds+=/use_items,slots=trinket2,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<31\nactions.cds+=/blood_fury,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<10\nactions.cds+=/potion,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up&(buff.bloodlust.up||target.health.pct<20))||boss&fight_remains<31\n\nactions.cleave+=/barbed_shot,cycle_targets=1,if=debuff.latent_poison.stack>9&(pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||talent.scent_of_blood&cooldown.bestial_wrath.remains<12+gcd||full_recharge_time<gcd&cooldown.bestial_wrath.remains)\nactions.cleave+=/barbed_shot,cycle_targets=1,if=pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||talent.scent_of_blood&cooldown.bestial_wrath.remains<12+gcd||full_recharge_time<gcd&cooldown.bestial_wrath.remains\nactions.cleave+=/multishot,if=pet.main.buff.beast_cleave.remains<0.25+gcd\nactions.cleave+=/kill_command,if=full_recharge_time<gcd&talent.alpha_predator&talent.kill_cleave\nactions.cleave+=/call_of_the_wild\nactions.cleave+=/explosive_shot\nactions.cleave+=/stampede,if=buff.bestial_wrath.up||boss&fight_remains<15\nactions.cleave+=/bloodshed\nactions.cleave+=/death_chakram\nactions.cleave+=/bestial_wrath\nactions.cleave+=/steel_trap\nactions.cleave+=/a_murder_of_crows\nactions.cleave+=/barbed_shot,cycle_targets=1,if=debuff.latent_poison.stack>9&(talent.wild_instincts&buff.call_of_the_wild.up||boss&fight_remains<9||talent.wild_call&charges_fractional>1.2)\nactions.cleave+=/barbed_shot,cycle_targets=1,if=talent.wild_instincts&buff.call_of_the_wild.up||boss&fight_remains<9||talent.wild_call&charges_fractional>1.2\nactions.cleave+=/kill_command\nactions.cleave+=/dire_beast\nactions.cleave+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>duration\nactions.cleave+=/barrage,if=pet.main.buff.frenzy.remains>execute_time\nactions.cleave+=/kill_shot\nactions.cleave+=/aspect_of_the_wild\nactions.cleave+=/cobra_shot,if=focus.time_to_max<gcd*2||buff.aspect_of_the_wild.up&focus.time_to_max<gcd*4\nactions.cleave+=/wailing_arrow,if=pet.main.buff.frenzy.remains>execute_time||boss&fight_remains<5\nactions.cleave+=/bag_of_tricks,if=buff.bestial_wrath.down||boss&fight_remains<5\nactions.cleave+=/arcane_torrent,if=(focus+focus.regen+30)<focus.max\n\nactions.st+=/barbed_shot,cycle_targets=1,if=pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||talent.scent_of_blood&pet.main.buff.frenzy.stack<3&cooldown.bestial_wrath.ready\nactions.st+=/kill_command,if=full_recharge_time<gcd&talent.alpha_predator\nactions.st+=/call_of_the_wild\nactions.st+=/death_chakram\nactions.st+=/bloodshed\nactions.st+=/stampede\nactions.st+=/a_murder_of_crows\nactions.st+=/steel_trap\nactions.st+=/explosive_shot\nactions.st+=/bestial_wrath\nactions.st+=/kill_command\nactions.st+=/barbed_shot,cycle_targets=1,if=talent.wild_instincts&buff.call_of_the_wild.up||talent.wild_call&charges_fractional>1.4||full_recharge_time<gcd&cooldown.bestial_wrath.remains||talent.scent_of_blood&(cooldown.bestial_wrath.remains<12+gcd||full_recharge_time+gcd<8&cooldown.bestial_wrath.remains<24+(8-gcd)+full_recharge_time)||boss&fight_remains<9\nactions.st+=/dire_beast\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>duration\nactions.st+=/kill_shot\nactions.st+=/aspect_of_the_wild\nactions.st+=/cobra_shot\nactions.st+=/wailing_arrow,if=pet.main.buff.frenzy.remains>execute_time||boss&fight_remains<5\nactions.st+=/bag_of_tricks,if=buff.bestial_wrath.down||boss&fight_remains<5\nactions.st+=/arcane_pulse,if=buff.bestial_wrath.down||boss&fight_remains<5\nactions.st+=/arcane_torrent,if=(focus+focus.regen+15)<focus.max",
					["spec"] = 253,
				},
				["Vengeance"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221104.1,
					["spec"] = 581,
					["desc"] = "",
					["profile"] = "actions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\n\nactions+=/disrupt\nactions+=/consume_magic\nactions+=/variable,name=brand_build,value=talent.agonizing_flames.enabled&talent.burning_alive.enabled&talent.charred_flesh.enabled\nactions+=/throw_glaive,if=buff.fel_bombardment.stack=5&(buff.immolation_aura.up||!buff.metamorphosis.up)\nactions+=/call_action_list,name=brand,if=variable.brand_build\nactions+=/call_action_list,name=defensives\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=normal\n\n# Fiery Brand Rotation\nactions.brand=fiery_brand\nactions.brand+=/immolation_aura,if=dot.fiery_brand.ticking\n\nactions.cooldowns=potion\n# Default fallback for usable items.\nactions.cooldowns+=/use_items\nactions.cooldowns+=/sinful_brand,if=!dot.sinful_brand.ticking\nactions.cooldowns+=/the_hunt\nactions.cooldowns+=/elysian_decree\n\n# Defensives\nactions.defensives=demon_spikes,if=tanking&(buff.demon_spikes.down||charges>1)\nactions.defensives+=/metamorphosis,if=!buff.metamorphosis.up&(!action.sinful_brand.known||!dot.sinful_brand.ticking)||target.time_to_die<15\nactions.defensives+=/fiery_brand\n\n# Normal Rotation\nactions.normal=infernal_strike\nactions.normal+=/bulk_extraction\nactions.normal+=/spirit_bomb,if=((buff.metamorphosis.up&talent.fracture.enabled&soul_fragments>=3)||soul_fragments>=4)\nactions.normal+=/fel_devastation\nactions.normal+=/soul_cleave,if=((talent.spirit_bomb.enabled&soul_fragments=0)||!talent.spirit_bomb.enabled)&((talent.fracture.enabled&fury>=55)||(!talent.fracture.enabled&fury>=70)||cooldown.fel_devastation.remains>target.time_to_die||(buff.metamorphosis.up&((talent.fracture.enabled&fury>=35)||(!talent.fracture.enabled&fury>=50))))\nactions.normal+=/immolation_aura,if=((variable.brand_build&cooldown.fiery_brand.remains>10)||!variable.brand_build)&fury<=90\nactions.normal+=/felblade,if=fury<=60\nactions.normal+=/fracture,if=((talent.spirit_bomb.enabled&soul_fragments<=3)||(!talent.spirit_bomb.enabled&((buff.metamorphosis.up&fury<=55)||(buff.metamorphosis.down&fury<=70))))\nactions.normal+=/sigil_of_flame,if=!(action.elysian_decree.known&runeforge.razelikhs_defilement)\nactions.normal+=/shear\nactions.normal+=/throw_glaive",
					["version"] = 20221104.1,
					["warnings"] = "The import for 'precombat' required some automated changes.\nLine 1: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 1: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nThe import for 'normal' required some automated changes.\nLine 9: Converted 'runeforge.razelikhs_defilement' to 'runeforge.razelikhs_defilement.enabled' (1x).\n\nImported 6 action lists.\n",
					["author"] = "SimC",
					["lists"] = {
						["brand"] = {
							{
								["enabled"] = true,
								["description"] = "Fiery Brand Rotation",
								["action"] = "fiery_brand",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.fiery_brand.ticking",
								["action"] = "immolation_aura",
							}, -- [2]
						},
						["default"] = {
							{
								["action"] = "disrupt",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "consume_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.agonizing_flames.enabled & talent.burning_alive.enabled & talent.charred_flesh.enabled",
								["var_name"] = "brand_build",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.fel_bombardment.stack = 5 & ( buff.immolation_aura.up || ! buff.metamorphosis.up )",
								["action"] = "throw_glaive",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "variable.brand_build",
								["list_name"] = "brand",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "defensives",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldowns",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "normal",
							}, -- [8]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [1]
						},
						["cooldowns"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Default fallback for usable items.",
								["action"] = "use_items",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! dot.sinful_brand.ticking",
								["action"] = "sinful_brand",
							}, -- [3]
							{
								["action"] = "the_hunt",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "elysian_decree",
								["enabled"] = true,
							}, -- [5]
						},
						["defensives"] = {
							{
								["enabled"] = true,
								["criteria"] = "tanking & ( buff.demon_spikes.down || charges > 1 )",
								["action"] = "demon_spikes",
								["description"] = "Defensives",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.metamorphosis.up & ( ! action.sinful_brand.known || ! dot.sinful_brand.ticking ) || target.time_to_die < 15",
								["action"] = "metamorphosis",
							}, -- [2]
							{
								["action"] = "fiery_brand",
								["enabled"] = true,
							}, -- [3]
						},
						["normal"] = {
							{
								["enabled"] = true,
								["description"] = "Normal Rotation",
								["action"] = "infernal_strike",
							}, -- [1]
							{
								["action"] = "bulk_extraction",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ( buff.metamorphosis.up & talent.fracture.enabled & soul_fragments >= 3 ) || soul_fragments >= 4 )",
								["action"] = "spirit_bomb",
							}, -- [3]
							{
								["action"] = "fel_devastation",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ( talent.spirit_bomb.enabled & soul_fragments = 0 ) || ! talent.spirit_bomb.enabled ) & ( ( talent.fracture.enabled & fury >= 55 ) || ( ! talent.fracture.enabled & fury >= 70 ) || cooldown.fel_devastation.remains > target.time_to_die || ( buff.metamorphosis.up & ( ( talent.fracture.enabled & fury >= 35 ) || ( ! talent.fracture.enabled & fury >= 50 ) ) ) )",
								["action"] = "soul_cleave",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( ( variable.brand_build & cooldown.fiery_brand.remains > 10 ) || ! variable.brand_build ) & fury <= 90",
								["action"] = "immolation_aura",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "fury <= 60",
								["action"] = "felblade",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( ( talent.spirit_bomb.enabled & soul_fragments <= 3 ) || ( ! talent.spirit_bomb.enabled & ( ( buff.metamorphosis.up & fury <= 55 ) || ( buff.metamorphosis.down & fury <= 70 ) ) ) )",
								["action"] = "fracture",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! ( action.elysian_decree.known & runeforge.razelikhs_defilement.enabled )",
								["action"] = "sigil_of_flame",
							}, -- [9]
							{
								["action"] = "shear",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "throw_glaive",
								["enabled"] = true,
							}, -- [11]
						},
					},
				},
				["Unholy"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["spec"] = 252,
					["desc"] = "",
					["lists"] = {
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.commander_of_the_dead_window.up || ! talent.commander_of_the_dead.enabled & runic_power > 40",
								["use_off_gcd"] = 1,
								["description"] = "Opener",
								["action"] = "summon_gargoyle",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( 30 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 )",
								["action"] = "potion",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.commander_of_the_dead_window.up || ! talent.commander_of_the_dead.enabled & debuff.festering_wound.stack >= 4",
								["action"] = "apocalypse",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.commander_of_the_dead.enabled & debuff.festering_wound.stack >= 4 || ! talent.commander_of_the_dead.enabled",
								["action"] = "dark_transformation",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack < 4",
								["action"] = "festering_strike",
								["cycle_targets"] = 1,
							}, -- [5]
						},
						["racials"] = {
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 20 & ( cooldown.summon_gargoyle.remains < gcd.max || ! talent.summon_gargoyle.enabled || pet.gargoyle.active & rune < 2 & debuff.festering_wound.stack < 1 )",
								["action"] = "arcane_torrent",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( buff.blood_fury.duration >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.blood_fury.duration || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.blood_fury.duration || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.blood_fury.duration",
								["action"] = "blood_fury",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( buff.berserking.duration >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.berserking.duration || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.berserking.duration || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.berserking.duration",
								["action"] = "berserking",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.unholy_strength.up & ( ! talent.festermight.enabled || buff.festermight.remains < target.time_to_die || buff.unholy_strength.remains < target.time_to_die )",
								["action"] = "lights_judgment",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( 15 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= 15 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 15 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= 15",
								["action"] = "ancestral_call",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 || ( rune.deficit >= 5 & runic_power.deficit >= 60 )",
								["action"] = "arcane_pulse",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( buff.fireblood.duration >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.fireblood.duration || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.fireblood.duration || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.fireblood.duration",
								["action"] = "fireblood",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & ( buff.unholy_strength.up || boss & fight_remains < 5 )",
								["action"] = "bag_of_tricks",
							}, -- [8]
						},
						["generic"] = {
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ( rune < 3 || pet.gargoyle.active || buff.sudden_doom.react || cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack > 3 || fight_remains < 10 )",
								["action"] = "death_coil",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & active_enemies >= 2 & death_knight.fwounded_targets >= cycle_enemies",
								["action"] = "any_dnd",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.pop_wounds || active_enemies >= 2 & death_and_decay.ticking",
								["action"] = "wound_spender",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pop_wounds",
								["action"] = "festering_strike",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["action"] = "death_coil",
								["enabled"] = true,
							}, -- [5]
						},
						["covenants"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & runic_power.deficit > 16 & ( cooldown.apocalypse.remains || ! talent.army_of_the_damned.enabled & cooldown.dark_transformation.remains ) || boss & fight_remains < 11",
								["action"] = "swarming_mist",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.apocalypse.remains & ( active_enemies >= 2 & active_enemies <= 5 & runic_power.deficit > 10 + ( active_enemies * 6 ) & variable.adds_remain || active_enemies > 5 & runic_power.deficit > 40 )",
								["action"] = "swarming_mist",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ! soulbind.lead_by_example.enabled & ( cooldown.apocalypse.remains || ! talent.army_of_the_damned.enabled & cooldown.dark_transformation.remains ) & rune.time_to_4 > buff.runic_corruption.remains || boss & fight_remains < 12 + ( soulbind.kevins_oozeling.enabled * 28 )",
								["action"] = "abomination_limb",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & soulbind.lead_by_example.enabled & ( dot.unholy_blight_dot.remains > 11 || ! talent.unholy_blight.enabled & cooldown.dark_transformation.remains )",
								["action"] = "abomination_limb",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & soulbind.kevins_oozeling.enabled & ( debuff.festering_wound.stack >= 4 & ! runeforge.abominations_frenzy.enabled || runeforge.abominations_frenzy.enabled & cooldown.apocalypse.remains )",
								["action"] = "abomination_limb",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain & rune.time_to_4 > buff.runic_corruption.remains",
								["action"] = "abomination_limb",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ( cooldown.apocalypse.remains > 10 || ! talent.army_of_the_damned.enabled & cooldown.dark_transformation.remains ) || boss & fight_remains < 15",
								["action"] = "shackle_the_unworthy",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain & ( death_and_decay.ticking || raid_event.adds.remains <= 14 )",
								["action"] = "shackle_the_unworthy",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [9]
						},
						["precombat"] = {
							{
								["action"] = "raise_dead",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "army_of_the_dead",
								["precombat_time"] = "2",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies > 2 || time > 10 || cooldown.apocalypse.remains || ! talent.apocalypse.enabled & ( cooldown.dark_transformation.remains || cooldown.summon_gargoyle.remains )",
								["var_name"] = "opener_done",
							}, -- [4]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( variable.adds_remain & ( talent.festermight.enabled & buff.festermight.remains < 3 || ! talent.festermight.enabled ) & ( death_knight.fwounded_targets >= cycle_enemies || death_knight.fwounded_targets = 8 || ! talent.bursting_sores.enabled & ! talent.vile_contagion.enabled || raid_event.adds.exists & raid_event.adds.remains <= 11 & raid_event.adds.remains > 5 || ( cooldown.vile_contagion.remains || ! talent.vile_contagion.enabled ) & buff.dark_transformation.up & talent.infected_claws.enabled & ( buff.empower_rune_weapon.up || buff.unholy_assault.up ) ) || fight_remains < 10 )",
								["action"] = "any_dnd",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.superstrain.enabled & talent.ebon_fever.enabled & talent.plaguebringer.enabled & buff.plaguebringer.remains < gcd.max",
								["action"] = "scourge_strike",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.bursting_sores.enabled & ! variable.pooling_runic_power & active_enemies >= 6",
								["action"] = "epidemic",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( active_dot.festering_wound < cycle_enemies || debuff.festering_wound.stack < 4 ) & ( cooldown.vile_contagion.remains < 5 || cooldown.apocalypse.ready & cooldown.any_dnd.remains )",
								["action"] = "festering_strike",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( cooldown.vile_contagion.remains > 5 || ! talent.vile_contagion.enabled )",
								["action"] = "festering_strike",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "death_and_decay.ticking",
								["action"] = "wound_spender",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
								["action"] = "death_coil",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power",
								["action"] = "epidemic",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.death_and_decay.remains > 10 || cooldown.death_and_decay.remains > 5 & death_knight.fwounded_targets >= cycle_enemies",
								["action"] = "wound_spender",
								["cycle_targets"] = 1,
							}, -- [9]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "gavel_of_the_first_arbiter",
								["action"] = "gavel_of_the_first_arbiter",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_1_sync",
								["value"] = "1",
								["value_else"] = "0.5",
								["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % 45 = 0 )",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_2_sync",
								["value"] = "1",
								["value_else"] = "0.5",
								["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % 45 = 0 )",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
								["var_name"] = "trinket_1_buffs",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
								["var_name"] = "trinket_2_buffs",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_priority",
								["value"] = "2",
								["value_else"] = "1",
								["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( ( ! talent.summon_gargoyle.enabled || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 90 || variable.trinket_priority = 2 & cooldown.summon_gargoyle.remains > 20 ) & ( pet.apoc_ghoul.active || buff.dark_transformation.up ) & ( variable.trinket_priority = 1 || trinket.t2.cooldown.remains ) ) || boss & trinket.t1.buff_duration >= fight_remains",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( ( ! talent.summon_gargoyle.enabled || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 90 || variable.trinket_priority = 1 & cooldown.summon_gargoyle.remains > 20 ) & ( pet.apoc_ghoul.active || buff.dark_transformation.up ) & ( variable.trinket_priority = 2 || trinket.t1.cooldown.remains ) ) || boss & trinket.t2.buff_duration >= fight_remains",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [10]
						},
						["default"] = {
							{
								["action"] = "mind_freeze",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "strangulate",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "opener_done",
								["value"] = "1",
								["value_else"] = "0",
								["criteria"] = "active_enemies >= 3 || cooldown.apocalypse.remains > 0 || time > 15 || ! talent.apocalypse.enabled",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "apoc_timing",
								["value"] = "10",
								["value_else"] = "2",
								["criteria"] = "cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack <= 4",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "garg_pooling",
								["value"] = "( ( ( cooldown.summon_gargoyle.remains + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( runic_power + 20 ) ) ) * 100",
								["value_else"] = "gcd.max",
								["criteria"] = "cooldown.summon_gargoyle.remains < gcd.max * 2",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "festermight_tracker",
								["value"] = "debuff.festering_wound.stack >= 1",
								["value_else"] = "debuff.festering_wound.stack >= ( 3 - talent.infected_claws.enabled )",
								["criteria"] = "! pet.gargoyle.active & talent.festermight.enabled & buff.festermight.up & ( buff.festermight.remains / ( 4 * gcd.max ) ) >= 1",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( cooldown.apocalypse.remains > variable.apoc_timing || ! talent.apocalypse.enabled ) & ( variable.festermight_tracker || debuff.festering_wound.stack >= 1 & ! talent.apocalypse.enabled || debuff.festering_wound.stack >= 1 & cooldown.unholy_assault.remains < 20 & talent.unholy_assault.enabled & ! talent.summon_gargoyle.enabled & variable.st_planning || debuff.festering_wound.stack > 4 )",
								["var_name"] = "pop_wounds",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.vile_contagion.enabled & cooldown.vile_contagion.remains < 3 & runic_power < 60 & ! variable.st_planning",
								["var_name"] = "pooling_runic_power",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies <= 3 & ( ! raid_event.adds.exists || raid_event.adds.in > 15 )",
								["var_name"] = "st_planning",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies >= 4 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 6 )",
								["var_name"] = "adds_remain",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.commander_of_the_dead.enabled & ( cooldown.dark_transformation.remains < 3 || buff.commander_of_the_dead_window.up ) || ! talent.commander_of_the_dead.enabled & talent.unholy_assault.enabled & cooldown.unholy_assault.remains < 10 || ! talent.unholy_assault.enabled & ! talent.commander_of_the_dead.enabled || boss & fight_remains <= 34",
								["action"] = "army_of_the_dead",
								["description"] = "Prioritize Army, Outbreak and Maintaining Plaguebringer",
							}, -- [11]
							{
								["enabled"] = true,
								["sec"] = "cooldown.apocalypse.remains",
								["action"] = "wait",
								["criteria"] = "cooldown.apocalypse.remains < gcd.max & buff.commander_of_the_dead_window.up",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "pet.gargoyle.active & buff.commander_of_the_dead_window.up & buff.commander_of_the_dead_window.remains > gcd.max & cooldown.apocalypse.remains < gcd.max || ( ! buff.commander_of_the_dead_window.up || buff.commander_of_the_dead_window.up & cooldown.apocalypse.remains > 5 ) & debuff.death_rot.up & debuff.death_rot.remains < gcd.max",
								["action"] = "death_coil",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_die > dot.virulent_plague.remains & ( ! buff.commander_of_the_dead_window.up || buff.commander_of_the_dead_window.up & cooldown.apocalypse.remains > 5 ) & ( dot.virulent_plague.refreshable || talent.superstrain.enabled & ( dot.frost_fever_superstrain.refreshable || dot.blood_plague_superstrain.refreshable ) ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.unholy_blight.remains > 15 / ( ( talent.superstrain.enabled * 3 ) + ( talent.plaguebringer.enabled * 2 ) ) )",
								["action"] = "outbreak",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "( ! buff.commander_of_the_dead_window.up || buff.commander_of_the_dead_window.up & cooldown.apocalypse.remains > 5 ) & cooldown.apocalypse.remains > variable.apoc_timing & talent.plaguebringer.enabled & talent.superstrain.enabled & buff.plaguebringer.remains < gcd.max",
								["action"] = "wound_spender",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! variable.opener_done",
								["list_name"] = "opener",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldowns",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "racials",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.none",
								["list_name"] = "covenants",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= 4",
								["list_name"] = "aoe",
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies <= 3",
								["list_name"] = "generic",
							}, -- [22]
						},
						["cooldowns"] = {
							{
								["enabled"] = true,
								["criteria"] = "( 30 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 ) || boss & fight_remains <= 30",
								["action"] = "potion",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.commander_of_the_dead_window.up || ! talent.commander_of_the_dead.enabled & runic_power >= 40",
								["action"] = "summon_gargoyle",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & debuff.festering_wound.stack >= 4 & cooldown.any_dnd.remains < 3",
								["action"] = "vile_contagion",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain || boss & fight_remains < 21",
								["action"] = "unholy_blight",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "rune < 2 & variable.adds_remain",
								["action"] = "abomination_limb",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! pet.ghoul.active",
								["action"] = "raise_dead",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ( talent.commander_of_the_dead.enabled & cooldown.apocalypse.remains < gcd.max * 2 || cooldown.apocalypse.remains > 30 || ! talent.commander_of_the_dead.enabled )",
								["action"] = "dark_transformation",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain & ( cooldown.any_dnd.remains < 10 & talent.infected_claws.enabled & ( ( cooldown.vile_contagion.remains || raid_event.adds.exists & raid_event.adds.in > 10 ) & death_knight.fwounded_targets < active_enemies || ! talent.vile_contagion.enabled ) & ( raid_event.adds.remains > 5 || ! raid_event.adds.exists ) || ! talent.infected_claws.enabled )",
								["action"] = "dark_transformation",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies <= 3 & ( buff.commander_of_the_dead_window.up || ! talent.commander_of_the_dead.enabled || cooldown.dark_transformation.remains > 30 )",
								["action"] = "apocalypse",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "debuff.festering_wound.up & variable.adds_remain & ( ! death_and_decay.ticking & cooldown.death_and_decay.remains & rune < 3 || death_and_decay.ticking & rune = 0 )",
								["action"] = "apocalypse",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ( pet.gargoyle.active & pet.apoc_ghoul.active || ! talent.summon_gargoyle.enabled & talent.army_of_the_damned.enabled & pet.army_ghoul.active & pet.apoc_ghoul.active || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_damned.enabled & buff.dark_transformation.up || ! talent.summon_gargoyle.enabled & ! talent.summon_gargoyle.enabled & buff.dark_transformation.up ) || boss & fight_remains <= 21",
								["action"] = "empower_rune_weapon",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain & buff.dark_transformation.up",
								["action"] = "empower_rune_weapon",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ( ( ! talent.apocalypse.enabled || cooldown.apocalypse.remains ) & talent.morbidity.enabled || ! talent.morbidity.enabled )",
								["action"] = "unholy_blight",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "rune < 3 & variable.st_planning",
								["action"] = "abomination_limb",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning",
								["action"] = "unholy_assault",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain & debuff.festering_wound.stack < 2",
								["action"] = "unholy_assault",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > 5 & ( ! buff.commander_of_the_dead_window.up || cooldown.apocalypse.remains > 3 )",
								["action"] = "soul_reaper",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
								["action"] = "soul_reaper",
								["cycle_targets"] = 1,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & ! buff.dark_transformation.up & cooldown.dark_transformation.remains > 6 || boss & fight_remains < gcd.max",
								["action"] = "sacrificial_pact",
							}, -- [19]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'opener' required some automated changes.\nLine 1: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 2: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 5: Converted operations in '(((cooldown.summon_gargoyle.remains+1)%gcd.max)%((rune+1)*(runic_power+20)))*100' to '(((cooldown.summon_gargoyle.remains+1)/gcd.max)/((rune+1)*(runic_power+20)))*100'.\nLine 6: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 6: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 6: Converted operations in '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains%(4*gcd.max))>=1' to '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains/(4*gcd.max))>=1'.\nLine 7: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 7: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 7: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 8: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 11: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 11: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 11: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 11: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 11: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 14: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 14: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 14: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 14: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 14: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 14: Converted operations in 'target.time_to_die>dot.virulent_plague.remains&(!buff.commander_of_the_dead_window.up||buff.commander_of_the_dead_window.up&cooldown.apocalypse.remains>5)&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15%((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)))' to 'target.time_to_die>dot.virulent_plague.remains&(!buff.commander_of_the_dead_window.up||buff.commander_of_the_dead_window.up&cooldown.apocalypse.remains>5)&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15/((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)))'.\nLine 15: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 15: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\n\nThe import for 'covenants' required some automated changes.\nLine 1: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 3: Converted 'soulbind.lead_by_example' to 'soulbind.lead_by_example.enabled' (1x).\nLine 3: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 3: Converted 'soulbind.kevins_oozeling' to 'soulbind.kevins_oozeling.enabled' (1x).\nLine 4: Converted 'soulbind.lead_by_example' to 'soulbind.lead_by_example.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 5: Converted 'soulbind.kevins_oozeling' to 'soulbind.kevins_oozeling.enabled' (1x).\nLine 5: Converted 'runeforge.abominations_frenzy' to 'runeforge.abominations_frenzy.enabled' (1x).\nLine 5: Converted 'runeforge.abominations_frenzy' to 'runeforge.abominations_frenzy.enabled' (1x).\nLine 7: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 9: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 9: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 1: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 1: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 1: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 2: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 2: Converted 'talent.ebon_fever' to 'talent.ebon_fever.enabled' (1x).\nLine 2: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 3: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 5: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 7: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%45=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%45=0)'.\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%45=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%45=0)'.\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 8: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 8: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 10: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 2: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 8: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 9: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 11: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 11: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 11: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 11: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 11: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 11: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 13: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 13: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 13: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 2: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nImported 9 action lists.\n",
					["profile"] = "actions.precombat+=/raise_dead\nactions.precombat+=/fleshcraft\nactions.precombat+=/army_of_the_dead,precombat_time=2\nactions.precombat+=/variable,name=opener_done,op=set,value=active_enemies>2||time>10||cooldown.apocalypse.remains||!talent.apocalypse&(cooldown.dark_transformation.remains||cooldown.summon_gargoyle.remains)\n\nactions+=/mind_freeze\nactions+=/strangulate\n## Variables\nactions+=/variable,name=opener_done,op=setif,value=1,value_else=0,condition=active_enemies>=3||cooldown.apocalypse.remains>0||time>15||!talent.apocalypse\nactions+=/variable,name=apoc_timing,op=setif,value=10,value_else=2,condition=cooldown.apocalypse.remains<10&debuff.festering_wound.stack<=4\nactions+=/variable,name=garg_pooling,op=setif,value=(((cooldown.summon_gargoyle.remains+1)%gcd)%((rune+1)*(runic_power+20)))*100,value_else=gcd,condition=cooldown.summon_gargoyle.remains<gcd*2\nactions+=/variable,name=festermight_tracker,op=setif,value=debuff.festering_wound.stack>=1,value_else=debuff.festering_wound.stack>=(3-talent.infected_claws),condition=!pet.gargoyle.active&talent.festermight&buff.festermight.up&(buff.festermight.remains%(4*gcd))>=1\nactions+=/variable,name=pop_wounds,value=(cooldown.apocalypse.remains>variable.apoc_timing||!talent.apocalypse)&(variable.festermight_tracker||debuff.festering_wound.stack>=1&!talent.apocalypse||debuff.festering_wound.stack>=1&cooldown.unholy_assault.remains<20&talent.unholy_assault&!talent.summon_gargoyle&variable.st_planning||debuff.festering_wound.stack>4)\nactions+=/variable,name=pooling_runic_power,value=talent.vile_contagion&cooldown.vile_contagion.remains<3&runic_power<60&!variable.st_planning\nactions+=/variable,name=st_planning,value=active_enemies<=3&(!raid_event.adds.exists||raid_event.adds.in>15)\nactions+=/variable,name=adds_remain,value=active_enemies>=4&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>6)\n## When using 'external_buffs.invoke', will use this lines logic to determine when to use Power Infusion.\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.st_planning&(pet.gargoyle.active&cooldown.apocalypse.remains||!talent.summon_gargoyle&talent.army_of_the_dead&pet.army_ghoul.active&pet.apoc_ghoul.active||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+5>cooldown.invoke_external_buff.duration)||fight_remains<=21\n# Prioritize Army, Outbreak and Maintaining Plaguebringer\nactions+=/army_of_the_dead,if=talent.commander_of_the_dead&(cooldown.dark_transformation.remains<3||buff.commander_of_the_dead_window.up)||!talent.commander_of_the_dead&talent.unholy_assault&cooldown.unholy_assault.remains<10||!talent.unholy_assault&!talent.commander_of_the_dead||boss&fight_remains<=34\nactions+=/wait,sec=cooldown.apocalypse.remains,if=cooldown.apocalypse.remains<gcd&buff.commander_of_the_dead_window.up\nactions+=/death_coil,if=pet.gargoyle.active&buff.commander_of_the_dead_window.up&buff.commander_of_the_dead_window.remains>gcd&cooldown.apocalypse.remains<gcd||(!buff.commander_of_the_dead_window.up||buff.commander_of_the_dead_window.up&cooldown.apocalypse.remains>5)&debuff.death_rot.up&debuff.death_rot.remains<gcd\nactions+=/outbreak,cycle_targets=1,if=target.time_to_die>dot.virulent_plague.remains&(!buff.commander_of_the_dead_window.up||buff.commander_of_the_dead_window.up&cooldown.apocalypse.remains>5)&(dot.virulent_plague.refreshable||talent.superstrain&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight||talent.unholy_blight&cooldown.unholy_blight.remains>15%((talent.superstrain*3)+(talent.plaguebringer*2)))\nactions+=/wound_spender,if=(!buff.commander_of_the_dead_window.up||buff.commander_of_the_dead_window.up&cooldown.apocalypse.remains>5)&cooldown.apocalypse.remains>variable.apoc_timing&talent.plaguebringer&talent.superstrain&buff.plaguebringer.remains<gcd\n## Call Action Lists\nactions+=/call_action_list,name=opener,if=!variable.opener_done\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=covenants,strict=1,if=!covenant.none\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=4\nactions+=/run_action_list,name=generic,strict=1,if=active_enemies<=3\n\n## AoE Action List\nactions.aoe=any_dnd,if=!death_and_decay.ticking&(variable.adds_remain&(talent.festermight&buff.festermight.remains<3||!talent.festermight)&(death_knight.fwounded_targets>=cycle_enemies||death_knight.fwounded_targets=8||!talent.bursting_sores&!talent.vile_contagion||raid_event.adds.exists&raid_event.adds.remains<=11&raid_event.adds.remains>5||(cooldown.vile_contagion.remains||!talent.vile_contagion)&buff.dark_transformation.up&talent.infected_claws&(buff.empower_rune_weapon.up||buff.unholy_assault.up))||fight_remains<10)\nactions.aoe+=/scourge_strike,if=talent.superstrain&talent.ebon_fever&talent.plaguebringer&buff.plaguebringer.remains<gcd\nactions.aoe+=/epidemic,if=!talent.bursting_sores&!variable.pooling_runic_power&active_enemies>=6\nactions.aoe+=/festering_strike,cycle_targets=1,if=!death_and_decay.ticking&(active_dot.festering_wound<cycle_enemies||debuff.festering_wound.stack<4)&(cooldown.vile_contagion.remains<5||cooldown.apocalypse.ready&cooldown.any_dnd.remains)\nactions.aoe+=/festering_strike,cycle_targets=1,if=!death_and_decay.ticking&(cooldown.vile_contagion.remains>5||!talent.vile_contagion)\nactions.aoe+=/wound_spender,cycle_targets=1,if=death_and_decay.ticking\nactions.aoe+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\nactions.aoe+=/epidemic,if=!variable.pooling_runic_power\nactions.aoe+=/wound_spender,cycle_targets=1,if=cooldown.death_and_decay.remains>10||cooldown.death_and_decay.remains>5&death_knight.fwounded_targets>=cycle_enemies\n\n## Potion\nactions.cooldowns=potion,if=(30>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30)||boss&fight_remains<=30\n## Cooldowns\nactions.cooldowns+=/summon_gargoyle,if=buff.commander_of_the_dead_window.up||!talent.commander_of_the_dead&runic_power>=40\nactions.cooldowns+=/vile_contagion,cycle_targets=1,if=active_enemies>=2&debuff.festering_wound.stack>=4&cooldown.any_dnd.remains<3\nactions.cooldowns+=/unholy_blight,if=variable.adds_remain||boss&fight_remains<21\nactions.cooldowns+=/abomination_limb,if=rune<2&variable.adds_remain\nactions.cooldowns+=/raise_dead,if=!pet.ghoul.active\nactions.cooldowns+=/dark_transformation,if=variable.st_planning&(talent.commander_of_the_dead&cooldown.apocalypse.remains<gcd*2||cooldown.apocalypse.remains>30||!talent.commander_of_the_dead)\nactions.cooldowns+=/dark_transformation,if=variable.adds_remain&(cooldown.any_dnd.remains<10&talent.infected_claws&((cooldown.vile_contagion.remains||raid_event.adds.exists&raid_event.adds.in>10)&death_knight.fwounded_targets<active_enemies||!talent.vile_contagion)&(raid_event.adds.remains>5||!raid_event.adds.exists)||!talent.infected_claws)\nactions.cooldowns+=/apocalypse,cycle_targets=1,if=active_enemies<=3&(buff.commander_of_the_dead_window.up||!talent.commander_of_the_dead||cooldown.dark_transformation.remains>30)\nactions.cooldowns+=/apocalypse,cycle_targets=1,if=debuff.festering_wound.up&variable.adds_remain&(!death_and_decay.ticking&cooldown.death_and_decay.remains&rune<3||death_and_decay.ticking&rune=0)\nactions.cooldowns+=/empower_rune_weapon,if=variable.st_planning&(pet.gargoyle.active&pet.apoc_ghoul.active||!talent.summon_gargoyle&talent.army_of_the_damned&pet.army_ghoul.active&pet.apoc_ghoul.active||!talent.summon_gargoyle&!talent.army_of_the_damned&buff.dark_transformation.up||!talent.summon_gargoyle&!talent.summon_gargoyle&buff.dark_transformation.up)||boss&fight_remains<=21\nactions.cooldowns+=/empower_rune_weapon,if=variable.adds_remain&buff.dark_transformation.up\nactions.cooldowns+=/unholy_blight,if=variable.st_planning&((!talent.apocalypse||cooldown.apocalypse.remains)&talent.morbidity||!talent.morbidity)\nactions.cooldowns+=/abomination_limb,if=rune<3&variable.st_planning\nactions.cooldowns+=/unholy_assault,cycle_targets=1,if=variable.st_planning\nactions.cooldowns+=/unholy_assault,cycle_targets=1,if=variable.adds_remain&debuff.festering_wound.stack<2\nactions.cooldowns+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>5&(!buff.commander_of_the_dead_window.up||cooldown.apocalypse.remains>3)\nactions.cooldowns+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.cooldowns+=/sacrificial_pact,if=active_enemies>=2&!buff.dark_transformation.up&cooldown.dark_transformation.remains>6||boss&fight_remains<gcd\n\n## Covenant Abilities\nactions.covenants+=/swarming_mist,if=variable.st_planning&runic_power.deficit>16&(cooldown.apocalypse.remains||!talent.army_of_the_damned&cooldown.dark_transformation.remains)||boss&fight_remains<11\nactions.covenants+=/swarming_mist,if=cooldown.apocalypse.remains&(active_enemies>=2&active_enemies<=5&runic_power.deficit>10+(active_enemies*6)&variable.adds_remain||active_enemies>5&runic_power.deficit>40)\nactions.covenants+=/abomination_limb,if=variable.st_planning&!soulbind.lead_by_example&(cooldown.apocalypse.remains||!talent.army_of_the_damned&cooldown.dark_transformation.remains)&rune.time_to_4>buff.runic_corruption.remains||boss&fight_remains<12+(soulbind.kevins_oozeling*28)\nactions.covenants+=/abomination_limb,if=variable.st_planning&soulbind.lead_by_example&(dot.unholy_blight_dot.remains>11||!talent.unholy_blight&cooldown.dark_transformation.remains)\nactions.covenants+=/abomination_limb,if=variable.st_planning&soulbind.kevins_oozeling&(debuff.festering_wound.stack>=4&!runeforge.abominations_frenzy||runeforge.abominations_frenzy&cooldown.apocalypse.remains)\nactions.covenants+=/abomination_limb,if=variable.adds_remain&rune.time_to_4>buff.runic_corruption.remains\nactions.covenants+=/shackle_the_unworthy,if=variable.st_planning&(cooldown.apocalypse.remains>10||!talent.army_of_the_damned&cooldown.dark_transformation.remains)||boss&fight_remains<15\nactions.covenants+=/shackle_the_unworthy,if=variable.adds_remain&(death_and_decay.ticking||raid_event.adds.remains<=14)\nactions.covenants+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n\n## Generic\nactions.generic+=/death_coil,if=!variable.pooling_runic_power&(rune<3||pet.gargoyle.active||buff.sudden_doom.react||cooldown.apocalypse.remains<10&debuff.festering_wound.stack>3||fight_remains<10)\nactions.generic+=/any_dnd,if=!death_and_decay.ticking&active_enemies>=2&death_knight.fwounded_targets>=cycle_enemies\nactions.generic+=/wound_spender,cycle_targets=1,if=variable.pop_wounds||active_enemies>=2&death_and_decay.ticking\nactions.generic+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds\nactions.generic+=/death_coil\n\n# Opener\nactions.opener+=/summon_gargoyle,use_off_gcd=1,if=buff.commander_of_the_dead_window.up||!talent.commander_of_the_dead&runic_power>40\nactions.opener+=/potion,if=(30>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30)\nactions.opener+=/apocalypse,if=buff.commander_of_the_dead_window.up||!talent.commander_of_the_dead&debuff.festering_wound.stack>=4\nactions.opener+=/dark_transformation,if=talent.commander_of_the_dead&debuff.festering_wound.stack>=4||!talent.commander_of_the_dead\nactions.opener+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack<4\n\n## Racials\nactions.racials=arcane_torrent,if=runic_power.deficit>20&(cooldown.summon_gargoyle.remains<gcd||!talent.summon_gargoyle.enabled||pet.gargoyle.active&rune<2&debuff.festering_wound.stack<1)\nactions.racials+=/blood_fury,if=(buff.blood_fury.duration>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.blood_fury.duration||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.blood_fury.duration||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.blood_fury.duration\nactions.racials+=/berserking,if=(buff.berserking.duration>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.berserking.duration||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.berserking.duration||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.berserking.duration\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up&(!talent.festermight||buff.festermight.remains<target.time_to_die||buff.unholy_strength.remains<target.time_to_die)\nactions.racials+=/ancestral_call,if=(15>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=15||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=15||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=15\nactions.racials+=/arcane_pulse,if=active_enemies>=2||(rune.deficit>=5&runic_power.deficit>=60)\nactions.racials+=/fireblood,if=(buff.fireblood.duration>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.fireblood.duration||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.fireblood.duration||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.fireblood.duration\nactions.racials+=/bag_of_tricks,if=active_enemies=1&(buff.unholy_strength.up||boss&fight_remains<5)\n\n## Trinkets\nactions.trinkets=use_item,name=gavel_of_the_first_arbiter\nactions.trinkets+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%45=0)\nactions.trinkets+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%45=0)\nactions.trinkets+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.trinkets+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.trinkets+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.trinkets+=/use_item,slot=trinket1,if=((!talent.summon_gargoyle||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>90||variable.trinket_priority=2&cooldown.summon_gargoyle.remains>20)&(pet.apoc_ghoul.active||buff.dark_transformation.up)&(variable.trinket_priority=1||trinket.2.cooldown.remains))||boss&trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,slot=trinket2,if=((!talent.summon_gargoyle||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>90||variable.trinket_priority=1&cooldown.summon_gargoyle.remains>20)&(pet.apoc_ghoul.active||buff.dark_transformation.up)&(variable.trinket_priority=2||trinket.1.cooldown.remains))||boss&trinket.2.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15",
					["author"] = "SimulationCraft",
				},
				["Shadow"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221120,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["main"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.boon_of_the_ascended.up",
								["action"] = "call_action_list",
								["list_name"] = "boon",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.fiend.active & variable.sfp & ( pet.fiend.remains <= gcd.max || target.health.pct < 20 ) & spell_targets.mind_sear <= 7",
								["action"] = "shadow_word_death",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( cooldown.mind_blast.full_recharge_time <= gcd.max || pet.fiend.remains <= cast_time + gcd.max ) & pet.fiend.active & variable.sfp & pet.fiend.remains > cast_time & spell_targets.mind_sear <= 7",
								["action"] = "mind_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "damnation",
								["criteria"] = "dot.vampiric_touch.refreshable & variable.is_vt_possible || dot.shadow_word_pain.refreshable",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.dots_up & insanity <= 85",
								["action"] = "void_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "mind_sear",
								["cycle_targets"] = 1,
								["criteria"] = "( spell_targets.mind_sear > 1 || buff.voidform.up ) & buff.mind_devourer.up",
								["description"] = "Use Mind Devourer Procs on Mind Sear when facing 2 or more targets or Voidform is active.",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "mind_sear",
								["cycle_targets"] = 1,
								["interrupt_if"] = "ticks>=2",
								["interrupt_immediate"] = "1",
								["criteria"] = "spell_targets.mind_sear > variable.mind_sear_cutoff",
								["chain"] = "1",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable & ! variable.pool_for_cds || insanity > 75 || talent.void_torrent.enabled & cooldown.void_torrent.remains <= 3 * gcd.max || buff.mind_devourer.up & cooldown.mind_blast.full_recharge_time <= 2 * gcd.max & ! cooldown.void_eruption.up & talent.void_eruption.enabled ) & variable.dp_cutoff",
								["action"] = "devouring_plague",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "shadow_word_death",
								["criteria"] = "( target.health.pct < 20 & spell_targets.mind_sear < 4 ) & ( ! variable.sfp || cooldown.fiend.remains >= 10 ) || ( pet.fiend.active & variable.sfp & spell_targets.mind_sear <= 7 ) || buff.deathspeaker.up & ( cooldown.fiend.remains + gcd.max ) > buff.deathspeaker.remains",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "vampiric_touch",
								["criteria"] = "( refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.vts_applied ) & variable.max_vts > 0 || ( talent.misery.enabled & dot.shadow_word_pain.refreshable ) ) & cooldown.shadow_crash.remains >= dot.vampiric_touch.remains & ! action.shadow_crash.in_flight",
								["cycle_targets"] = 1,
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "shadow_word_pain",
								["criteria"] = "refreshable & target.time_to_die >= 18 & ! talent.misery.enabled",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "variable.vts_applied & ( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
								["action"] = "mind_blast",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.mind_sear < 5 & variable.all_dots_up",
								["action"] = "mindgames",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 10",
								["action"] = "shadow_crash",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 20",
								["action"] = "dark_void",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up & variable.dots_up & variable.dp_cutoff",
								["action"] = "devouring_plague",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "variable.dots_up",
								["action"] = "void_torrent",
								["cycle_targets"] = 1,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.movement.in > cast_time + 0.5 & ( ! variable.sfp || ! cooldown.fiend.up & variable.sfp || variable.vts_applied )",
								["action"] = "mind_blast",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.unfurling_darkness.up",
								["action"] = "vampiric_touch",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.mind_flay_insanity.up & variable.dots_up & ( ! buff.surge_of_darkness.up || talent.screams_of_the_void.enabled )",
								["action"] = "mind_flay",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 20 & ( spell_targets.halo > 1 || ( variable.all_dots_up & ! buff.voidform.up ) )",
								["action"] = "halo",
								["description"] = "Use Halo if all DoTS are active and you are not in Voidform or it will hit at least 2 targets. Save up to 20s if adds are coming soon.",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.divine_star > 1",
								["action"] = "divine_star",
								["description"] = "Use when it will hit at least 2 targets.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.lights_judgment >= 2 || ( ! raid_event.adds.exists || raid_event.adds.in > 75 )",
								["action"] = "lights_judgment",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.surge_of_darkness.up || ! conduit.dissonant_echoes.enabled & ( ! talent.mental_decay.enabled || dot.vampiric_touch.remains >= ( cooldown.shadow_crash.remains + action.shadow_crash.travel_time ) ) & ( talent.mind_melt.enabled || ! talent.idol_of_cthun.enabled )",
								["action"] = "mind_spike",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "mind_flay",
								["interrupt_if"] = "ticks>=2",
								["interrupt_immediate"] = "1",
								["chain"] = "1",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 30",
								["action"] = "shadow_crash",
								["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not come in 30 seconds.",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "shadow_word_death",
								["cycle_targets"] = 1,
								["criteria"] = "target.health.pct < 20",
								["description"] = "Use Shadow Word: Death while moving as a low-priority action in execute",
							}, -- [28]
							{
								["enabled"] = true,
								["description"] = "Use Divine Star while moving as a low-priority action",
								["action"] = "divine_star",
							}, -- [29]
							{
								["enabled"] = true,
								["description"] = "Use Shadow Word: Death while moving as a low-priority action",
								["action"] = "shadow_word_death",
							}, -- [30]
							{
								["enabled"] = true,
								["description"] = "Use Shadow Word: Pain while moving as a low-priority action",
								["action"] = "shadow_word_pain",
							}, -- [31]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatilall_dots_upe_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.shadowform.up",
								["action"] = "shadowform",
							}, -- [2]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "2",
								["var_name"] = "mind_sear_cutoff",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_crash.enabled",
								["action"] = "shadow_crash",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.damnation.enabled & ! talent.shadow_crash.enabled",
								["action"] = "mind_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! talent.damnation.enabled & ! talent.shadow_crash.enabled",
								["action"] = "vampiric_touch",
							}, -- [8]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "( ! buff.scars_of_fraternal_strife_4.up & time > 1 ) || ( buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || cooldown.void_eruption.remains > 10 )",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "cooldown.void_eruption.remains > 10 || cooldown.dark_ascension.remains > 10",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || cooldown.void_eruption.remains > 10",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
								["description"] = "Use this on CD for max CDR",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || cooldown.void_eruption.remains > 10",
								["action"] = "use_items",
								["description"] = "Default fallback for usable items: Use on cooldown in order by trinket slot.",
							}, -- [5]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "( buff.voidform.up || buff.dark_ascension.up )",
								["action"] = "power_infusion",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! cooldown.fiend.up & ( pet.fiend.active || ! talent.mindbender.enabled || action.fae_guardians.known ) & ( cooldown.mind_blast.charges = 0 || time > 15 || buff.shadowy_insight.up & cooldown.mind_blast.charges = buff.shadowy_insight.stack )",
								["action"] = "void_eruption",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.fiend.active & cooldown.mind_blast.charges < 2 || ! talent.mindbender.enabled & ! cooldown.fiend.up || action.fae_guardians.known & cooldown.fiend.remains >= 15 & cooldown.fae_guardians.remains >= 4 * gcd.max",
								["action"] = "dark_ascension",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! buff.voidform.up & ! cooldown.void_eruption.up & spell_targets.mind_sear > 1 & ! talent.searing_nightmare.enabled || ( buff.voidform.up & spell_targets.mind_sear < 2 & ! talent.searing_nightmare.enabled & ( prev_gcd.1.void_bolt || equipped.empyreal_ordnance & cooldown.empyreal_ordnance.remains <= 162 ) ) || ( buff.voidform.up & talent.searing_nightmare.enabled )",
								["action"] = "boon_of_the_ascended",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight",
								["action"] = "unholy_nova",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight ) & ( ! talent.void_eruption.enabled || buff.voidform.up & ! cooldown.void_bolt.up & cooldown.mind_blast.full_recharge_time > gcd.max || ! cooldown.void_eruption.up )",
								["action"] = "fae_guardians",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight )",
								["action"] = "mindbender",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "health.pct <= 75",
								["action"] = "desperate_prayer",
							}, -- [9]
						},
						["boon"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.mind_sear <= 3",
								["action"] = "ascended_blast",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.ascended_nova > 1 & spell_targets.mind_sear > 1",
								["action"] = "ascended_nova",
							}, -- [2]
						},
						["default"] = {
							{
								["action"] = "silence",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up",
								["action"] = "potion",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "target.time_to_die < 8 || dot.shadow_word_pain.ticking & dot.vampiric_touch.ticking",
								["var_name"] = "dots_up",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "target.time_to_die < 8 || dot.shadow_word_pain.ticking & dot.vampiric_touch.ticking & dot.devouring_plague.ticking",
								["var_name"] = "all_dots_up",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.vampiric_touch",
								["default"] = "1",
								["var_name"] = "max_vts",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( spell_targets.mind_sear <= 5 ) * spell_targets.mind_sear",
								["criteria"] = "buff.voidform.up",
								["var_name"] = "max_vts",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["default"] = "1",
								["var_name"] = "is_vt_possible",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1",
								["criteria"] = "active_dot.vampiric_touch < cycle_enemies || dot.vampiric_touch.refreshable & target.time_to_die >= 18",
								["var_name"] = "is_vt_possible",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.vampiric_touch >= variable.max_vts || ! variable.is_vt_possible",
								["var_name"] = "vts_applied",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.shadowflame_prism.equipped || talent.inescapable_torment.enabled",
								["var_name"] = "sfp",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled )",
								["var_name"] = "pool_for_cds",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.mind_sear.enabled || ( spell_targets.mind_sear <= variable.mind_sear_cutoff & ( ! buff.mind_devourer.up || spell_targets.mind_sear = 1 ) )",
								["var_name"] = "dp_cutoff",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 8",
								["action"] = "fireblood",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 12",
								["action"] = "berserking",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
								["action"] = "blood_fury",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
								["action"] = "ancestral_call",
							}, -- [16]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "60",
								["var_name"] = "pool_amount",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "main",
							}, -- [18]
						},
					},
					["version"] = 20221120,
					["warnings"] = "The import for 'default' required some automated changes.\nLine 10: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 11: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 11: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 12: Converted 'talent.mind_sear' to 'talent.mind_sear.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 1: Converted 'soulbind.volatilall_dots_upe_solvent' to 'soulbind.volatilall_dots_upe_solvent.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 2: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 3: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 4: Converted 'trinket.empyreal_ordnance.cooldown.remains' to 'cooldown.empyreal_ordnance.remains'.\nLine 7: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\n\nThe import for 'main' required some automated changes.\nLine 9: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 9: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 13: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 21: Converted 'talent.screams_of_the_void' to 'talent.screams_of_the_void.enabled' (1x).\nLine 25: Converted 'conduit.dissonant_echoes' to 'conduit.dissonant_echoes.enabled' (1x).\nLine 25: Converted 'talent.mental_decay' to 'talent.mental_decay.enabled' (1x).\nLine 25: Converted 'talent.mind_melt' to 'talent.mind_melt.enabled' (1x).\nLine 25: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\n\nImported 6 action lists.\n",
					["profile"] = "actions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatilall_dots_upe_solvent\nactions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/arcane_torrent\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/variable,name=mind_sear_cutoff,op=set,value=2\nactions.precombat+=/shadow_crash,if=talent.shadow_crash.enabled\nactions.precombat+=/mind_blast,if=talent.damnation.enabled&!talent.shadow_crash.enabled\nactions.precombat+=/vampiric_touch,if=!talent.damnation.enabled&!talent.shadow_crash.enabled\n\nactions+=/silence\nactions+=/potion,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up\nactions+=/variable,name=dots_up,op=set,value=target.time_to_die<8||dot.shadow_word_pain.ticking&dot.vampiric_touch.ticking\nactions+=/variable,name=all_dots_up,op=set,value=target.time_to_die<8||dot.shadow_word_pain.ticking&dot.vampiric_touch.ticking&dot.devouring_plague.ticking\nactions+=/variable,name=max_vts,op=set,default=1,value=spell_targets.vampiric_touch\nactions+=/variable,name=max_vts,op=set,value=(spell_targets.mind_sear<=5)*spell_targets.mind_sear,if=buff.voidform.up\nactions+=/variable,name=is_vt_possible,op=set,value=0,default=1\nactions+=/variable,name=is_vt_possible,op=set,value=1,if=active_dot.vampiric_touch<cycle_enemies||dot.vampiric_touch.refreshable&target.time_to_die>=18\nactions+=/variable,name=vts_applied,op=set,value=active_dot.vampiric_touch>=variable.max_vts||!variable.is_vt_possible\nactions+=/variable,name=sfp,op=set,value=runeforge.shadowflame_prism.equipped||talent.inescapable_torment\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)\nactions+=/variable,name=dp_cutoff,op=set,value=!talent.mind_sear||(spell_targets.mind_sear<=variable.mind_sear_cutoff&(!buff.mind_devourer.up||spell_targets.mind_sear=1))\nactions+=/fireblood,if=buff.power_infusion.up||boss&fight_remains<=8\nactions+=/berserking,if=buff.power_infusion.up||boss&fight_remains<=12\nactions+=/blood_fury,if=buff.power_infusion.up||boss&fight_remains<=15\nactions+=/ancestral_call,if=buff.power_infusion.up||boss&fight_remains<=15\nactions+=/variable,name=pool_amount,op=set,value=60\nactions+=/run_action_list,name=main\n\nactions.boon=ascended_blast,if=spell_targets.mind_sear<=3\nactions.boon+=/ascended_nova,if=spell_targets.ascended_nova>1&spell_targets.mind_sear>1\n\nactions.cds=power_infusion,if=(buff.voidform.up||buff.dark_ascension.up)\nactions.cds+=/void_eruption,if=!cooldown.fiend.up&(pet.fiend.active||!talent.mindbender||action.fae_guardians.known)&(cooldown.mind_blast.charges=0||time>15||buff.shadowy_insight.up&cooldown.mind_blast.charges=buff.shadowy_insight.stack)\nactions.cds+=/dark_ascension,if=pet.fiend.active&cooldown.mind_blast.charges<2||!talent.mindbender&!cooldown.fiend.up||action.fae_guardians.known&cooldown.fiend.remains>=15&cooldown.fae_guardians.remains>=4*gcd.max\nactions.cds+=/boon_of_the_ascended,if=!buff.voidform.up&!cooldown.void_eruption.up&spell_targets.mind_sear>1&!talent.searing_nightmare.enabled||(buff.voidform.up&spell_targets.mind_sear<2&!talent.searing_nightmare.enabled&(prev_gcd.1.void_bolt||equipped.empyreal_ordnance&trinket.empyreal_ordnance.cooldown.remains<=162))||(buff.voidform.up&talent.searing_nightmare.enabled)\nactions.cds+=/call_action_list,name=trinkets\nactions.cds+=/unholy_nova,if=dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight\nactions.cds+=/fae_guardians,if=(dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight)&(!talent.void_eruption||buff.voidform.up&!cooldown.void_bolt.up&cooldown.mind_blast.full_recharge_time>gcd.max||!cooldown.void_eruption.up)\nactions.cds+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight)\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\nactions.main+=/call_action_list,name=boon,if=buff.boon_of_the_ascended.up\nactions.main+=/call_action_list,name=cds\nactions.main+=/shadow_word_death,if=pet.fiend.active&variable.sfp&(pet.fiend.remains<=gcd||target.health.pct<20)&spell_targets.mind_sear<=7\nactions.main+=/mind_blast,if=(cooldown.mind_blast.full_recharge_time<=gcd.max||pet.fiend.remains<=cast_time+gcd.max)&pet.fiend.active&variable.sfp&pet.fiend.remains>cast_time&spell_targets.mind_sear<=7\nactions.main+=/damnation,cycle_targets=1,if=dot.vampiric_touch.refreshable&variable.is_vt_possible||dot.shadow_word_pain.refreshable\nactions.main+=/void_bolt,if=variable.dots_up&insanity<=85\n# Use Mind Devourer Procs on Mind Sear when facing 2 or more targets or Voidform is active.\nactions.main+=/mind_sear,cycle_targets=1,if=(spell_targets.mind_sear>1||buff.voidform.up)&buff.mind_devourer.up\nactions.main+=/mind_sear,cycle_targets=1,if=spell_targets.mind_sear>variable.mind_sear_cutoff,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\nactions.main+=/devouring_plague,if=(refreshable&!variable.pool_for_cds||insanity>75||talent.void_torrent&cooldown.void_torrent.remains<=3*gcd||buff.mind_devourer.up&cooldown.mind_blast.full_recharge_time<=2*gcd.max&!cooldown.void_eruption.up&talent.void_eruption)&variable.dp_cutoff\nactions.main+=/shadow_word_death,cycle_targets=1,if=(target.health.pct<20&spell_targets.mind_sear<4)&(!variable.sfp||cooldown.fiend.remains>=10)||(pet.fiend.active&variable.sfp&spell_targets.mind_sear<=7)||buff.deathspeaker.up&(cooldown.fiend.remains+gcd.max)>buff.deathspeaker.remains\nactions.main+=/vampiric_touch,cycle_targets=1,if=(refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.vts_applied)&variable.max_vts>0||(talent.misery.enabled&dot.shadow_word_pain.refreshable))&cooldown.shadow_crash.remains>=dot.vampiric_touch.remains&!action.shadow_crash.in_flight\nactions.main+=/shadow_word_pain,cycle_targets=1,if=refreshable&target.time_to_die>=18&!talent.misery.enabled\nactions.main+=/mind_blast,if=variable.vts_applied&(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\nactions.main+=/mindgames,if=spell_targets.mind_sear<5&variable.all_dots_up\nactions.main+=/shadow_crash,if=raid_event.adds.in>10\nactions.main+=/dark_void,if=raid_event.adds.in>20\nactions.main+=/devouring_plague,if=buff.voidform.up&variable.dots_up&variable.dp_cutoff\nactions.main+=/void_torrent,if=insanity<=35,cycle_targets=1,if=variable.dots_up\nactions.main+=/mind_blast,if=raid_event.movement.in>cast_time+0.5&(!variable.sfp||!cooldown.fiend.up&variable.sfp||variable.vts_applied)\nactions.main+=/vampiric_touch,if=buff.unfurling_darkness.up\nactions.main+=/mind_flay,if=buff.mind_flay_insanity.up&variable.dots_up&(!buff.surge_of_darkness.up||talent.screams_of_the_void)\n# Use Halo if all DoTS are active and you are not in Voidform or it will hit at least 2 targets. Save up to 20s if adds are coming soon.\nactions.main+=/halo,if=raid_event.adds.in>20&(spell_targets.halo>1||(variable.all_dots_up&!buff.voidform.up))\n# Use when it will hit at least 2 targets.\nactions.main+=/divine_star,if=spell_targets.divine_star>1\nactions.main+=/lights_judgment,if=spell_targets.lights_judgment>=2||(!raid_event.adds.exists||raid_event.adds.in>75)\nactions.main+=/mind_spike,if=buff.surge_of_darkness.up||!conduit.dissonant_echoes&(!talent.mental_decay||dot.vampiric_touch.remains>=(cooldown.shadow_crash.remains+action.shadow_crash.travel_time))&(talent.mind_melt||!talent.idol_of_cthun)\nactions.main+=/mind_flay,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\n# Use Shadow Crash while moving as a low-priority action when adds will not come in 30 seconds.\nactions.main+=/shadow_crash,if=raid_event.adds.in>30\n# Use Shadow Word: Death while moving as a low-priority action in execute\nactions.main+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Divine Star while moving as a low-priority action\nactions.main+=/divine_star\n# Use Shadow Word: Death while moving as a low-priority action\nactions.main+=/shadow_word_death\n# Use Shadow Word: Pain while moving as a low-priority action\nactions.main+=/shadow_word_pain\n\nactions.trinkets=use_item,name=scars_of_fraternal_strife,if=(!buff.scars_of_fraternal_strife_4.up&time>1)||(buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||cooldown.void_eruption.remains>10)\nactions.trinkets+=/use_item,name=macabre_sheet_music,if=cooldown.void_eruption.remains>10||cooldown.dark_ascension.remains>10\nactions.trinkets+=/use_item,name=soulletting_ruby,cycle_targets=1,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||cooldown.void_eruption.remains>10\n# Use this on CD for max CDR\nactions.trinkets+=/use_item,name=architects_ingenuity_core\n# Default fallback for usable items: Use on cooldown in order by trinket slot.\nactions.trinkets+=/use_items,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||cooldown.void_eruption.remains>10",
					["spec"] = 258,
				},
				["Assassination"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221211,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["stealthed"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.fan_of_knives > desired_targets || spell_targets.fan_of_knives > 1 & raid_event.adds.in > 60",
								["action"] = "indiscriminate_carnage",
								["description"] = "Stealthed Actions",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "garrote",
								["cycle_targets"] = 1,
								["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes",
								["criteria"] = "stealthed.improved_garrote & ! will_lose_exsanguinate & ( remains < 12 / exsanguinated_rate || pmultiplier <= 1 ) & target.time_to_die - remains > 2",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.exsanguinate.enabled & stealthed.improved_garrote & active_enemies = 1 & ! will_lose_exsanguinate & improved_garrote_remains < 1.3",
								["action"] = "garrote",
								["description"] = "Improved Garrote + Exsg on 1T: Refresh Garrote at the end of stealth to get max duration before Exsanguinate",
							}, -- [3]
						},
						["vanish"] = {
							{
								["enabled"] = true,
								["description"] = "Vanish  Vanish Sync for Improved Garrote with Deathmark",
								["for_next"] = 1,
								["extra_amount"] = "45",
								["action"] = "pool_resource",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ! debuff.garrote.exsanguinated & dot.garrote.pmultiplier <= 1 & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
								["action"] = "vanish",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ! debuff.garrote.exsanguinated & dot.garrote.pmultiplier <= 1 & spell_targets.fan_of_knives > ( 3 - talent.indiscriminate_carnage.enabled ) & ( ! talent.indiscriminate_carnage.enabled || cooldown.indiscriminate_carnage.ready )",
								["action"] = "vanish",
								["description"] = "Vanish for Indiscriminate Carnage or Improved Garrote at 2-3+ targets",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & debuff.deathmark.up & ( debuff.shiv.up || debuff.deathmark.remains < 4 || dot.sepsis.ticking ) & dot.sepsis.remains < 3",
								["action"] = "vanish",
								["description"] = "Vanish with Master Assassin: Rupture+Garrote not in refresh range, during Deathmark+Shiv. Sync with Sepsis final hit if possible.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ! debuff.garrote.exsanguinated & dot.garrote.pmultiplier <= 1 & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 || cooldown.deathmark.remains > 60 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
								["action"] = "shadow_dance",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & ( debuff.deathmark.up || cooldown.deathmark.remains > 60 ) & ( debuff.shiv.up || debuff.deathmark.remains < 4 || dot.sepsis.ticking ) & dot.sepsis.remains < 3",
								["action"] = "shadow_dance",
								["description"] = "Shadow Dance with Master Assassin: Rupture+Garrote not in refresh range, during Deathmark+Shiv. Sync with Sepsis final hit if possible.",
							}, -- [6]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Restealth if possible (no vulnerable enemies in combat)",
								["action"] = "stealth",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! stealthed.all",
								["action"] = "kick",
								["description"] = "Interrupt on cooldown to allow simming interactions with that",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.fan_of_knives < 2",
								["var_name"] = "single_target",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "energy.regen_combined > 35",
								["var_name"] = "regen_saturated",
								["description"] = "Combined Energy Regen needed to saturate",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "stealthed.rogue || stealthed.improved_garrote",
								["list_name"] = "stealthed",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! buff.slice_and_dice.up & combo_points >= 2 || ! talent.cut_to_the_chase.enabled & refreshable & combo_points >= 4",
								["action"] = "slice_and_dice",
								["description"] = "Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.cut_to_the_chase.enabled & buff.slice_and_dice.up & buff.slice_and_dice.remains < 5 & combo_points >= 4",
								["action"] = "envenom",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "dot",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "direct",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
								["action"] = "arcane_torrent",
							}, -- [11]
							{
								["action"] = "arcane_pulse",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [14]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["action"] = "apply_poison",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15",
								["action"] = "marked_for_death",
								["precombat_seconds"] = "10",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "trinket_sync_slot",
								["value"] = "1",
								["description"] = "Determine which (if any) stat buff trinket we want to attempt to sync with Deathmark.",
								["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "2",
								["var_name"] = "trinket_sync_slot",
								["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cp_max_spend <? ( talent.resounding_clarity.enabled * 7 )",
								["var_name"] = "exsanguinate_rupture_cp",
								["description"] = "Determine if we should be be casting our pre-Exsanguinate Rupture with Echoing Reprimand CP",
							}, -- [5]
							{
								["action"] = "stealth",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "slice_and_dice",
								["precombat_seconds"] = "1",
							}, -- [7]
						},
						["direct"] = {
							{
								["enabled"] = true,
								["criteria"] = "effective_combo_points >= 4 + talent.deeper_stratagem.enabled & ( debuff.deathmark.up || debuff.shiv.up || debuff.amplifying_poison.stack >= 10 || energy.deficit <= 25 + energy.regen_combined || ! variable.single_target || effective_combo_points > cp_max_spend ) & ( ! talent.exsanguinate.enabled || cooldown.exsanguinate.remains > 2 || talent.resounding_clarity.enabled & ( cooldown.echoing_reprimand.ready & combo_points > 2 || effective_combo_points > 5 ) )",
								["action"] = "envenom",
								["description"] = "Direct damage abilities  Envenom at 4+ (5+ with DS) CP. Immediately on 2+ targets, with Deathmark, or with TB, otherwise wait for some energy. Also wait if Exsg combo is coming up.",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "combo_points.deficit > 1 || energy.deficit <= 25 + energy.regen_combined || ! variable.single_target",
								["var_name"] = "use_filler",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler & ! dot.serrated_bone_spike_dot.ticking",
								["action"] = "serrated_bone_spike",
								["description"] = "Apply SBS to all targets without a debuff as priority, preferring targets dying sooner after the primary target",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler & ! dot.serrated_bone_spike_dot.ticking",
								["action"] = "serrated_bone_spike",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler & master_assassin_remains < 0.8 & ( boss & fight_remains <= 5 || cooldown.serrated_bone_spike.max_charges - charges_fractional <= 0.25 )",
								["action"] = "serrated_bone_spike",
								["description"] = "Keep from capping charges or burn at the end of fights",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler & master_assassin_remains < 0.8 & ! variable.single_target & debuff.shiv.up",
								["action"] = "serrated_bone_spike",
								["description"] = "When MA is not at high duration, sync with Shiv",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler & ( ! priority_rotation & spell_targets.fan_of_knives >= 3 + stealthed.rogue + talent.dragontempered_blades.enabled )",
								["action"] = "fan_of_knives",
								["description"] = "Fan of Knives at 19+ stacks of Hidden Blades or against 4+ targets.",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "fan_of_knives",
								["cycle_targets"] = 1,
								["description"] = "Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T",
								["criteria"] = "variable.use_filler & spell_targets.fan_of_knives >= 3 & ! dot.deadly_poison_dot.ticking & ( ! priority_rotation || dot.garrote.ticking || dot.rupture.ticking )",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.exsanguinate.enabled || ! talent.resounding_clarity.enabled ) & variable.use_filler & cooldown.deathmark.remains > 10 || boss & fight_remains < 20",
								["action"] = "echoing_reprimand",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler",
								["action"] = "ambush",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "mutilate",
								["cycle_targets"] = 1,
								["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets",
								["criteria"] = "! dot.deadly_poison_dot.ticking & ! debuff.amplifying_poison.up & variable.use_filler & spell_targets.fan_of_knives = 2",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_filler",
								["action"] = "mutilate",
							}, -- [12]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "marked_for_death",
								["line_cd"] = "1.5",
								["description"] = "Cooldowns  If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or without any CP.",
								["criteria"] = "raid_event.adds.up & ( ! variable.single_target || boss & fight_remains < 30 ) & ( target.time_to_die < combo_points.deficit * 1.5 || combo_points.deficit >= cp_max_spend )",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 30 - raid_event.adds.duration & combo_points.deficit >= cp_max_spend",
								["action"] = "marked_for_death",
								["description"] = "If no adds will die within the next 30s, use MfD for max CP.",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.exsanguinate.enabled || cooldown.exsanguinate.remains > 15 || debuff.rupture.exsanguinated || debuff.garrote.exsanguinated",
								["var_name"] = "deathmark_exsanguinate_condition",
								["description"] = "Sync Deathmark window with Exsanguinate if applicable",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
								["var_name"] = "deathmark_ma_condition",
								["description"] = "Wait on Deathmark for Garrote with MA",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! stealthed.rogue & dot.garrote.ticking & ( target.time_to_die > 10 || boss & fight_remains < 10 )",
								["action"] = "sepsis",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! stealthed.rogue & dot.rupture.ticking & ! debuff.deathmark.up & variable.deathmark_exsanguinate_condition & variable.deathmark_ma_condition",
								["var_name"] = "deathmark_condition",
								["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Sync the priority stat buff trinket with Deathmark, otherwise use on cooldown",
								["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
								["slots"] = "trinket1",
								["action"] = "trinket1",
							}, -- [7]
							{
								["enabled"] = true,
								["slots"] = "trinket2",
								["action"] = "trinket2",
								["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.deathmark_condition",
								["action"] = "deathmark",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking )",
								["action"] = "kingsbane",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.exsanguinate.enabled & ! stealthed.rogue & ! stealthed.improved_garrote & ! dot.deathmark.ticking & target.time_to_die > cooldown.exsanguinate.remains + 4",
								["var_name"] = "exsanguinate_condition",
								["description"] = "Exsanguinate when not stealthed and both Rupture and Garrote are up for long enough. Attempt to sync with Echoing Reprimand if using Resounding Clarity.",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.exsanguinate.enabled & talent.resounding_clarity.enabled & ( variable.exsanguinate_condition & combo_points <= 2 & cooldown.exsanguinate.remains <= 2 & ! dot.garrote.refreshable & dot.rupture.remains > 9.6 || cooldown.exsanguinate.remains > 40 )",
								["action"] = "echoing_reprimand",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "variable.exsanguinate_condition & ( ! dot.garrote.refreshable & dot.rupture.remains > 4 + 4 * variable.exsanguinate_rupture_cp || dot.rupture.remains * 0.5 > target.time_to_die )",
								["action"] = "exsanguinate",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "talent.kingsbane.enabled & ! debuff.shiv.up & dot.kingsbane.ticking & dot.garrote.ticking & dot.rupture.ticking & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking )",
								["action"] = "shiv",
								["description"] = "Shiv if DoTs are up, Always Shiv with Kingsbane, otherwise attempt to sync with Sepsis or Deathmark if we won't waste more than half Shiv's cooldown",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! talent.kingsbane.enabled & ! talent.sepsis.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking )",
								["action"] = "shiv",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "! talent.kingsbane.enabled & talent.sepsis.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( ( cooldown.sepsis.ready || cooldown.sepsis.remains > 12 ) + ( cooldown.deathmark.ready || cooldown.deathmark.remains > 12 ) = 2 )",
								["action"] = "shiv",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! buff.thistle_tea.up & ( energy.deficit >= 100 || charges = 3 & ( dot.kingsbane.ticking || debuff.deathmark.up ) || boss & fight_remains < charges * 6 )",
								["action"] = "thistle_tea",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( spell_targets.fan_of_knives > desired_targets || spell_targets.fan_of_knives > 1 & raid_event.adds.in > 60 ) & ( ! talent.improved_garrote.enabled || cooldown.vanish.remains > 45 )",
								["action"] = "indiscriminate_carnage",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
								["action"] = "potion",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "debuff.deathmark.up",
								["action"] = "blood_fury",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "debuff.deathmark.up",
								["action"] = "berserking",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "debuff.deathmark.up",
								["action"] = "fireblood",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "debuff.deathmark.up",
								["action"] = "ancestral_call",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! stealthed.all & master_assassin_remains = 0",
								["list_name"] = "vanish",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "combo_points >= 4",
								["action"] = "cold_blood",
							}, -- [25]
						},
						["dot"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "priority_rotation & ( dot.garrote.remains < cooldown.garrote.duration || variable.regen_saturated )",
								["var_name"] = "skip_cycle_garrote",
								["description"] = "Damage over time abilities  Limit secondary Garrotes for priority rotation if we have 35 energy regen or Garrote will expire on the primary target",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "priority_rotation & ( debuff.shiv.up & spell_targets.fan_of_knives > 2 || variable.regen_saturated )",
								["var_name"] = "skip_cycle_rupture",
								["description"] = "Limit secondary Ruptures for priority rotation if we have 35 energy regen or Shiv is up on 2T+",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "skip_rupture",
								["description"] = "Limit Ruptures when appropriate, not currently used",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.exsanguinate.enabled & ! will_lose_exsanguinate & dot.garrote.pmultiplier <= 1 & cooldown.exsanguinate.remains < 2 & spell_targets.fan_of_knives = 1 & raid_event.adds.in > 6 & dot.garrote.remains * 0.5 < target.time_to_die",
								["action"] = "garrote",
								["description"] = "Special Garrote and Rupture setup prior to Exsanguinate cast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.exsanguinate.enabled & ! will_lose_exsanguinate & dot.rupture.pmultiplier <= 1 & cooldown.exsanguinate.remains < 1 & effective_combo_points >= variable.exsanguinate_rupture_cp & dot.rupture.remains * 0.5 < target.time_to_die",
								["action"] = "rupture",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( ! will_lose_exsanguinate || remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
								["action"] = "garrote",
								["description"] = "Garrote upkeep, also tries to use it as a special generator for the last CP before a finisher",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.skip_cycle_garrote & refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( ! will_lose_exsanguinate || remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 12 & master_assassin_remains = 0",
								["action"] = "garrote",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "crimson_tempest",
								["cycle_targets"] = 1,
								["description"] = "Crimson Tempest on multiple targets at 4+ CP when running out in 2-5s as long as we have enough regen and aren't setting up for Deathmark",
								["criteria"] = "spell_targets >= 2 & effective_combo_points >= 4 & energy.regen_combined > 20 & ( ! cooldown.deathmark.ready || dot.rupture.ticking ) & remains < ( 2 + 3 * ( spell_targets >= 4 ) )",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! variable.skip_rupture & effective_combo_points >= 4 & refreshable & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( ! will_lose_exsanguinate || remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( talent.doomblade.enabled * 5 ) + ( variable.regen_saturated * 6 ) )",
								["action"] = "rupture",
								["description"] = "Keep up Rupture at 4+ on all targets (when living long enough and not snapshot)",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! variable.skip_cycle_rupture & ! variable.skip_rupture & effective_combo_points >= 4 & refreshable & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( ! will_lose_exsanguinate || remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( talent.doomblade.enabled * 5 ) + ( variable.regen_saturated * 6 ) )",
								["action"] = "rupture",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets >= 2 & effective_combo_points >= 4 & remains < 2 + 3 * ( spell_targets >= 4 )",
								["action"] = "crimson_tempest",
								["description"] = "Fallback AoE Crimson Tempest with the same logic as above, but ignoring the energy conditions if we aren't using Rupture",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets = 1 & ! talent.dashing_scoundrel.enabled & effective_combo_points >= ( cp_max_spend - 1 ) & refreshable & ! will_lose_exsanguinate & ! debuff.shiv.up & debuff.amplifying_poison.stack < 15 & target.time_to_die - remains > 4",
								["action"] = "crimson_tempest",
								["description"] = "Crimson Tempest on ST if in pandemic and nearly max energy and if Envenom won't do more damage due to TB/MA",
							}, -- [12]
						},
					},
					["version"] = 20221211,
					["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted operations in 'stealthed.improved_garrote&!will_lose_exsanguinate&(remains<12%exsanguinated_rate||pmultiplier<=1)&target.time_to_die-remains>2' to 'stealthed.improved_garrote&!will_lose_exsanguinate&(remains<12/exsanguinated_rate||pmultiplier<=1)&target.time_to_die-remains>2'.\n\nThe import for 'vanish' required some automated changes.\nLine 2: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 2: Converted 'exsanguinated.garrote' to 'debuff.garrote.exsanguinated' (1x).\nLine 3: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 3: Converted 'exsanguinated.garrote' to 'debuff.garrote.exsanguinated' (1x).\nLine 3: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 3: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 4: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 4: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 5: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 5: Converted 'exsanguinated.garrote' to 'debuff.garrote.exsanguinated' (1x).\nLine 6: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 7: Converted 'talent.cut_to_the_chase' to 'talent.cut_to_the_chase.enabled' (1x).\nLine 8: Converted 'talent.cut_to_the_chase' to 'talent.cut_to_the_chase.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'talent.resounding_clarity' to 'talent.resounding_clarity.enabled' (1x).\n\nThe import for 'direct' required some automated changes.\nLine 1: Converted 'talent.resounding_clarity' to 'talent.resounding_clarity.enabled' (1x).\nLine 7: Converted 'talent.dragontempered_blades' to 'talent.dragontempered_blades.enabled' (1x).\nLine 9: Converted 'talent.exsanguinate' to 'talent.exsanguinate.enabled' (1x).\nLine 9: Converted 'talent.resounding_clarity' to 'talent.resounding_clarity.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 3: Converted 'talent.exsanguinate' to 'talent.exsanguinate.enabled' (1x).\nLine 3: Converted 'exsanguinated.rupture' to 'debuff.rupture.exsanguinated' (1x).\nLine 3: Converted 'exsanguinated.garrote' to 'debuff.garrote.exsanguinated' (1x).\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 11: Converted 'talent.exsanguinate' to 'talent.exsanguinate.enabled' (1x).\nLine 12: Converted 'talent.exsanguinate' to 'talent.exsanguinate.enabled' (1x).\nLine 12: Converted 'talent.resounding_clarity' to 'talent.resounding_clarity.enabled' (1x).\nLine 14: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 15: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 15: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 16: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 16: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 18: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\n\nThe import for 'dot' required some automated changes.\nLine 9: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 9: Converted 'talent.doomblade' to 'talent.doomblade.enabled' (1x).\nLine 10: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 10: Converted 'talent.doomblade' to 'talent.doomblade.enabled' (1x).\nLine 12: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nImported 7 action lists.\n",
					["spec"] = 259,
					["profile"] = "# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=apply_poison\nactions.precombat+=/marked_for_death,precombat_seconds=10,if=raid_event.adds.in>15\n# Determine which (if any) stat buff trinket we want to attempt to sync with Deathmark.\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\n# Determine if we should be be casting our pre-Exsanguinate Rupture with Echoing Reprimand CP\nactions.precombat+=/variable,name=exsanguinate_rupture_cp,value=cp_max_spend<?(talent.resounding_clarity*7)\nactions.precombat+=/stealth\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Executed every time the actor is available.\n# Restealth if possible (no vulnerable enemies in combat)\nactions=stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick,if=!stealthed.all\nactions+=/variable,name=single_target,value=spell_targets.fan_of_knives<2\n# Combined Energy Regen needed to saturate\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>35\nactions+=/call_action_list,name=stealthed,if=stealthed.rogue||stealthed.improved_garrote\nactions+=/call_action_list,name=cds\n# Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration\nactions+=/slice_and_dice,if=!buff.slice_and_dice.up&combo_points>=2||!talent.cut_to_the_chase&refreshable&combo_points>=4\nactions+=/envenom,if=talent.cut_to_the_chase&buff.slice_and_dice.up&buff.slice_and_dice.remains<5&combo_points>=4\nactions+=/call_action_list,name=dot\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Cooldowns  If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or without any CP.\nactions.cds=marked_for_death,line_cd=1.5,cycle_targets=1,if=raid_event.adds.up&(!variable.single_target||boss&fight_remains<30)&(target.time_to_die<combo_points.deficit*1.5||combo_points.deficit>=cp_max_spend)\n# If no adds will die within the next 30s, use MfD for max CP.\nactions.cds+=/marked_for_death,if=raid_event.adds.in>30-raid_event.adds.duration&combo_points.deficit>=cp_max_spend\n# Sync Deathmark window with Exsanguinate if applicable\nactions.cds+=/variable,name=deathmark_exsanguinate_condition,value=!talent.exsanguinate||cooldown.exsanguinate.remains>15||exsanguinated.rupture||exsanguinated.garrote\n# Wait on Deathmark for Garrote with MA\nactions.cds+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions.cds+=/sepsis,if=!stealthed.rogue&dot.garrote.ticking&(target.time_to_die>10||boss&fight_remains<10)\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions.cds+=/variable,name=deathmark_condition,value=!stealthed.rogue&dot.rupture.ticking&!debuff.deathmark.up&variable.deathmark_exsanguinate_condition&variable.deathmark_ma_condition\n# Sync the priority stat buff trinket with Deathmark, otherwise use on cooldown\nactions.cds+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\nactions.cds+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\nactions.cds+=/deathmark,if=variable.deathmark_condition\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&buff.envenom.up&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)\n# Exsanguinate when not stealthed and both Rupture and Garrote are up for long enough. Attempt to sync with Echoing Reprimand if using Resounding Clarity.\nactions.cds+=/variable,name=exsanguinate_condition,value=talent.exsanguinate&!stealthed.rogue&!stealthed.improved_garrote&!dot.deathmark.ticking&target.time_to_die>cooldown.exsanguinate.remains+4\nactions.cds+=/echoing_reprimand,if=talent.exsanguinate&talent.resounding_clarity&(variable.exsanguinate_condition&combo_points<=2&cooldown.exsanguinate.remains<=2&!dot.garrote.refreshable&dot.rupture.remains>9.6||cooldown.exsanguinate.remains>40)\nactions.cds+=/exsanguinate,if=variable.exsanguinate_condition&(!dot.garrote.refreshable&dot.rupture.remains>4+4*variable.exsanguinate_rupture_cp||dot.rupture.remains*0.5>target.time_to_die)\n# Shiv if DoTs are up; Always Shiv with Kingsbane, otherwise attempt to sync with Sepsis or Deathmark if we won't waste more than half Shiv's cooldown\nactions.cds+=/shiv,if=talent.kingsbane&!debuff.shiv.up&dot.kingsbane.ticking&dot.garrote.ticking&dot.rupture.ticking&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)\nactions.cds+=/shiv,if=!talent.kingsbane&!talent.sepsis&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)\nactions.cds+=/shiv,if=!talent.kingsbane&talent.sepsis&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&((cooldown.sepsis.ready||cooldown.sepsis.remains>12)+(cooldown.deathmark.ready||cooldown.deathmark.remains>12)=2)\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.deficit>=100||charges=3&(dot.kingsbane.ticking||debuff.deathmark.up)||boss&fight_remains<charges*6)\nactions.cds+=/indiscriminate_carnage,if=(spell_targets.fan_of_knives>desired_targets||spell_targets.fan_of_knives>1&raid_event.adds.in>60)&(!talent.improved_garrote||cooldown.vanish.remains>45)\nactions.cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\nactions.cds+=/blood_fury,if=debuff.deathmark.up\nactions.cds+=/berserking,if=debuff.deathmark.up\nactions.cds+=/fireblood,if=debuff.deathmark.up\nactions.cds+=/ancestral_call,if=debuff.deathmark.up\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\nactions.cds+=/cold_blood,if=combo_points>=4\n\n# Direct damage abilities  Envenom at 4+ (5+ with DS) CP. Immediately on 2+ targets, with Deathmark, or with TB; otherwise wait for some energy. Also wait if Exsg combo is coming up.\nactions.direct+=/envenom,if=effective_combo_points>=4+talent.deeper_stratagem.enabled&(debuff.deathmark.up||debuff.shiv.up||debuff.amplifying_poison.stack>=10||energy.deficit<=25+energy.regen_combined||!variable.single_target||effective_combo_points>cp_max_spend)&(!talent.exsanguinate.enabled||cooldown.exsanguinate.remains>2||talent.resounding_clarity&(cooldown.echoing_reprimand.ready&combo_points>2||effective_combo_points>5))\nactions.direct+=/variable,name=use_filler,value=combo_points.deficit>1||energy.deficit<=25+energy.regen_combined||!variable.single_target\n# Apply SBS to all targets without a debuff as priority, preferring targets dying sooner after the primary target\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&!dot.serrated_bone_spike_dot.ticking\nactions.direct+=/serrated_bone_spike,cycle_targets=1,if=variable.use_filler&!dot.serrated_bone_spike_dot.ticking\n# Keep from capping charges or burn at the end of fights\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&master_assassin_remains<0.8&(boss&fight_remains<=5||cooldown.serrated_bone_spike.max_charges-charges_fractional<=0.25)\n# When MA is not at high duration, sync with Shiv\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&master_assassin_remains<0.8&!variable.single_target&debuff.shiv.up\n# Fan of Knives at 19+ stacks of Hidden Blades or against 4+ targets.\nactions.direct+=/fan_of_knives,if=variable.use_filler&(!priority_rotation&spell_targets.fan_of_knives>=3+stealthed.rogue+talent.dragontempered_blades)\n# Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T\nactions.direct+=/fan_of_knives,cycle_targets=1,if=variable.use_filler&spell_targets.fan_of_knives>=3&!dot.deadly_poison_dot.ticking&(!priority_rotation||dot.garrote.ticking||dot.rupture.ticking)\nactions.direct+=/echoing_reprimand,if=(!talent.exsanguinate||!talent.resounding_clarity)&variable.use_filler&cooldown.deathmark.remains>10||boss&fight_remains<20\nactions.direct+=/ambush,if=variable.use_filler\n# Tab-Mutilate to apply Deadly Poison at 2 targets\nactions.direct+=/mutilate,cycle_targets=1,if=!dot.deadly_poison_dot.ticking&!debuff.amplifying_poison.up&variable.use_filler&spell_targets.fan_of_knives=2\nactions.direct+=/mutilate,if=variable.use_filler\n\n# Damage over time abilities  Limit secondary Garrotes for priority rotation if we have 35 energy regen or Garrote will expire on the primary target\nactions.dot+=/variable,name=skip_cycle_garrote,value=priority_rotation&(dot.garrote.remains<cooldown.garrote.duration||variable.regen_saturated)\n# Limit secondary Ruptures for priority rotation if we have 35 energy regen or Shiv is up on 2T+\nactions.dot+=/variable,name=skip_cycle_rupture,value=priority_rotation&(debuff.shiv.up&spell_targets.fan_of_knives>2||variable.regen_saturated)\n# Limit Ruptures when appropriate, not currently used\nactions.dot+=/variable,name=skip_rupture,value=0\n# Special Garrote and Rupture setup prior to Exsanguinate cast\nactions.dot+=/garrote,if=talent.exsanguinate.enabled&!will_lose_exsanguinate&dot.garrote.pmultiplier<=1&cooldown.exsanguinate.remains<2&spell_targets.fan_of_knives=1&raid_event.adds.in>6&dot.garrote.remains*0.5<target.time_to_die\nactions.dot+=/rupture,if=talent.exsanguinate.enabled&!will_lose_exsanguinate&dot.rupture.pmultiplier<=1&cooldown.exsanguinate.remains<1&effective_combo_points>=variable.exsanguinate_rupture_cp&dot.rupture.remains*0.5<target.time_to_die\n## actions.dot+=/pool_resource,for_next=1\n# Garrote upkeep, also tries to use it as a special generator for the last CP before a finisher\nactions.dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(!will_lose_exsanguinate||remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n## actions.dot+=/pool_resource,for_next=1\nactions.dot+=/garrote,cycle_targets=1,if=!variable.skip_cycle_garrote&refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(!will_lose_exsanguinate||remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>12&master_assassin_remains=0\n# Crimson Tempest on multiple targets at 4+ CP when running out in 2-5s as long as we have enough regen and aren't setting up for Deathmark\nactions.dot+=/crimson_tempest,cycle_targets=1,if=spell_targets>=2&effective_combo_points>=4&energy.regen_combined>20&(!cooldown.deathmark.ready||dot.rupture.ticking)&remains<(2+3*(spell_targets>=4))\n# Keep up Rupture at 4+ on all targets (when living long enough and not snapshot)\nactions.dot+=/rupture,if=!variable.skip_rupture&effective_combo_points>=4&refreshable&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(!will_lose_exsanguinate||remains<=tick_time*2&spell_targets.fan_of_knives>=3)&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(talent.doomblade*5)+(variable.regen_saturated*6))\nactions.dot+=/rupture,cycle_targets=1,if=!variable.skip_cycle_rupture&!variable.skip_rupture&effective_combo_points>=4&refreshable&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(!will_lose_exsanguinate||remains<=tick_time*2&spell_targets.fan_of_knives>=3)&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(talent.doomblade*5)+(variable.regen_saturated*6))\n# Fallback AoE Crimson Tempest with the same logic as above, but ignoring the energy conditions if we aren't using Rupture\nactions.dot+=/crimson_tempest,if=spell_targets>=2&effective_combo_points>=4&remains<2+3*(spell_targets>=4)\n# Crimson Tempest on ST if in pandemic and nearly max energy and if Envenom won't do more damage due to TB/MA\nactions.dot+=/crimson_tempest,if=spell_targets=1&!talent.dashing_scoundrel&effective_combo_points>=(cp_max_spend-1)&refreshable&!will_lose_exsanguinate&!debuff.shiv.up&debuff.amplifying_poison.stack<15&target.time_to_die-remains>4\n\n# Stealthed Actions\nactions.stealthed+=/indiscriminate_carnage,if=spell_targets.fan_of_knives>desired_targets||spell_targets.fan_of_knives>1&raid_event.adds.in>60\n## actions.stealthed+=/pool_resource,for_next=1\n# Improved Garrote: Apply or Refresh with buffed Garrotes\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&!will_lose_exsanguinate&(remains<12%exsanguinated_rate||pmultiplier<=1)&target.time_to_die-remains>2\n## actions.stealthed+=/pool_resource,for_next=1\n# Improved Garrote + Exsg on 1T: Refresh Garrote at the end of stealth to get max duration before Exsanguinate\nactions.stealthed+=/garrote,if=talent.exsanguinate.enabled&stealthed.improved_garrote&active_enemies=1&!will_lose_exsanguinate&improved_garrote_remains<1.3\n\n# Vanish  Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\nactions.vanish+=/vanish,if=talent.improved_garrote&cooldown.garrote.up&!exsanguinated.garrote&dot.garrote.pmultiplier<=1&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\n## actions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for Indiscriminate Carnage or Improved Garrote at 2-3+ targets\nactions.vanish+=/vanish,if=talent.improved_garrote&cooldown.garrote.up&!exsanguinated.garrote&dot.garrote.pmultiplier<=1&spell_targets.fan_of_knives>(3-talent.indiscriminate_carnage)&(!talent.indiscriminate_carnage||cooldown.indiscriminate_carnage.ready)\n# Vanish with Master Assassin: Rupture+Garrote not in refresh range, during Deathmark+Shiv. Sync with Sepsis final hit if possible.\nactions.vanish+=/vanish,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&debuff.deathmark.up&(debuff.shiv.up||debuff.deathmark.remains<4||dot.sepsis.ticking)&dot.sepsis.remains<3\n## actions.vanish+=/pool_resource,for_next=1,extra_amount=45\nactions.vanish+=/shadow_dance,if=talent.improved_garrote&cooldown.garrote.up&!exsanguinated.garrote&dot.garrote.pmultiplier<=1&(debuff.deathmark.up||cooldown.deathmark.remains<4||cooldown.deathmark.remains>60)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\n# Shadow Dance with Master Assassin: Rupture+Garrote not in refresh range, during Deathmark+Shiv. Sync with Sepsis final hit if possible.\nactions.vanish+=/shadow_dance,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&(debuff.deathmark.up||cooldown.deathmark.remains>60)&(debuff.shiv.up||debuff.deathmark.remains<4||dot.sepsis.ticking)&dot.sepsis.remains<3",
				},
				["Arcane"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220613,
					["spec"] = 62,
					["desc"] = "Mage Arcane\nJune 13, 2022\n\nChanges:\n- Use typical SimC handling of channel interruption instead of 'cancel_action'.\n- Change arcane_infinity to arcane_harmony (it never went live as arcane_harmony).\n- Don't Evocate in AOE just because you're out of range and not using Arcane Explosion.\n- Adjust priority to use Arcane Power's effective cooldown based on CDR effects.\n- Use strict processing to reduce CPU time due to unnecessary APL forks.\n- Moved variables/calculations to Lua module to reduce CPU time.",
					["lists"] = {
						["harmony"] = {
							{
								["enabled"] = true,
								["criteria"] = "mana.pct <= 30 & variable.outside_of_cooldowns & ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains < 10 )",
								["action"] = "evocation",
								["description"] = "If low on mana and cooldowns are coming up, go ahead and evo",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( variable.stack_harmony || time < 10 ) & buff.arcane_harmony.stack < 16 & ( active_enemies < variable.aoe_spark_target_count || variable.outside_of_cooldowns )",
								["description"] = "We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "equipped.empyreal_ordnance & time < 30 & cooldown.empyreal_ordnance.remains > 168 & ! action.empyreal_ordnance.disabled",
								["action"] = "arcane_missiles",
								["description"] = "When using Empyreal Ordnance, cast a few extra missiles while waiting for the buff at the start of the fight",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.arcane_power.up & target.distance <= 10",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.empowered_barrage & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains <= ( execute_time * 2 ) & target.distance > 10",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains <= ( execute_time * 2 ) & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 || ( cooldown.soulletting_ruby.remains > 110 & target.distance > 10 ) || ( cooldown.soulletting_ruby.remains <= execute_time & target.distance <= 10 ) )",
								["action"] = "radiant_spark",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & cooldown.arcane_power.remains <= execute_time & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 || ( cooldown.soulletting_ruby.remains > 110 & target.distance > 10 ) || ( cooldown.soulletting_ruby.remains <= execute_time & target.distance <= 10 ) )",
								["action"] = "touch_of_the_magi",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & cooldown.radiant_spark.remains <= execute_time & variable.time_until_ap >= 20 & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns || cooldown.touch_of_the_magi.remains <= ( execute_time * 2 ) )",
								["action"] = "rune_of_power",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & prev_gcd.1.rune_of_power",
								["action"] = "radiant_spark",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & ! variable.holding_totm",
								["action"] = "touch_of_the_magi",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.rune_of_power.up & buff.arcane_power.up & buff.arcane_harmony.stack >= 16 & buff.arcane_power.remains <= action.arcane_barrage.execute_time & buff.bloodlust.up",
								["action"] = "arcane_barrage",
								["description"] = "Use 2nd arcane barrage in AP+ROP only if Bloodlust and at least 2 CCs procced",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & buff.bloodlust.up & ( variable.time_until_ap > 30 || cooldown.radiant_spark.remains > 12 ) & ( buff.arcane_harmony.stack >= 15 || buff.clearcasting.stack >= 1 ) & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "rune_of_power",
								["description"] = "Use 2nd RoP in AP only if Bloodlust and 2 CCs proc",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & ( variable.time_until_ap > 30 || cooldown.radiant_spark.remains > 12 ) & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "rune_of_power",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & ( buff.arcane_charge.stack >= 2 || cooldown.arcane_orb.ready ) & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > 5 ) & cooldown.arcane_power.remains_expected >= 30 & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "radiant_spark",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_until_ap < 50 & variable.time_until_ap > 30 & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 )",
								["action"] = "touch_of_the_magi",
								["description"] = "When running prodigy, use totm by itself in order to align it with ap",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_orb",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 3 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_orb",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 2 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_barrage",
								["description"] = "When doing the AoE spark sequence, you will use harmony stacks on the second spark stack to get a second barrage on the fourth",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 1 & runeforge.harmonic_echo.enabled & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_blast",
								["description"] = "When using Harmonic Echo, Arcane Blast should be used instead of Arcane Explosion for the first spark stack when doing the AoE spark sequence",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 1 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_explosion",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.2.radiant_spark & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_explosion",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = debuff.radiant_spark_vulnerability.max_stack",
								["action"] = "arcane_barrage",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark || ( debuff.radiant_spark_vulnerability.up & debuff.radiant_spark_vulnerability.stack < debuff.radiant_spark_vulnerability.max_stack )",
								["action"] = "arcane_blast",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.bloodlust.up & cooldown.radiant_spark.remains <= 10 & buff.arcane_harmony.stack >= 16",
								["action"] = "arcane_barrage",
								["description"] = "Use mini Barrage between radiant sparks if under BL without delaying Radiant Spark ideally",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < 3 & variable.time_until_ap > 10 & ( cooldown.touch_of_the_magi.remains > 5 || ! conduit.arcane_prodigy.enabled )",
								["action"] = "arcane_orb",
								["description"] = "Use orb on cd unless ap is coming up soon",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.arcane_power.up",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.rune_of_power.remains <= action.arcane_missiles.execute_time & buff.arcane_power.up & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_harmony.stack & buff.power_infusion.up & buff.bloodlust.up",
								["action"] = "arcane_barrage",
								["description"] = "If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "buff.presence_of_mind.up & ( buff.arcane_charge.stack < buff.arcane_charge.max_stack || ! ( buff.power_infusion.up & buff.bloodlust.up ) ) & ! ( buff.arcane_charge.stack = 0 & buff.presence_of_mind.stack = 1 )",
								["action"] = "arcane_blast",
								["description"] = "If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window, so we'll only use enough blasts initially to get to four charges",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack & buff.arcane_power.up & active_enemies < variable.aoe_target_count",
								["action"] = "presence_of_mind",
								["description"] = "The best use of pom is to use it to quickly build charges during ap after they get dumped by the harmony barrage",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & active_enemies >= variable.aoe_target_count",
								["description"] = "In AoE situations, CC AM is prioritized over other filler actions",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & active_enemies >= variable.aoe_target_count",
								["action"] = "arcane_barrage",
								["description"] = "In AoE situations, barrage at four charges regardless of harmony stacks",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack & active_enemies >= variable.aoe_target_count",
								["action"] = "arcane_explosion",
								["description"] = "Use Arcane Explosion as the filler in AoE situations instead of building harmony stacks with Missiles",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "arcane_missiles",
								["description"] = "We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.",
								["interrupt"] = "1",
								["chain"] = "1",
								["criteria"] = "buff.arcane_harmony.stack < 16",
								["interrupt_global"] = "1",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & variable.empowered_barrage",
								["action"] = "arcane_barrage",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct < 15",
								["action"] = "evocation",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_blast",
								["description"] = "Only use blast to build charges if we already have some from orb",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "arcane_missiles",
								["description"] = "Fill with am unless ap is coming up and we're low on mana",
								["interrupt"] = "1",
								["chain"] = "1",
								["criteria"] = "! ( variable.time_until_ap <= 10 & mana.pct < 30 )",
								["interrupt_global"] = "1",
							}, -- [38]
							{
								["enabled"] = true,
								["description"] = "Profiles with low mastery, high haste, or both may not have enough mana to support how mana intensive radiant spark can be, so we'll use fire blast and frostbolt when low on mana",
								["action"] = "fire_blast",
							}, -- [39]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [40]
						},
						["fishing_opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.temporal_warp.enabled || ( runeforge.siphon_storm.enabled & ! variable.prepull_evo = 1 ) ) & ( buff.rune_of_power.down || prev_gcd.1.arcane_barrage ) & cooldown.rune_of_power.remains",
								["action"] = "evocation",
								["description"] = "When running either the SS or TW legendaries, we want to Evo before the TotM/AP window. Use it as soon as RoP has finished our we've spent our charges",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.rune_of_power.enabled & cooldown.rune_of_power.remains & cooldown.arcane_power.remains & buff.arcane_power.down & buff.rune_of_power.down & prev_gcd.1.arcane_barrage",
								["action"] = "evocation",
								["description"] = "If we've finished our cooldown windows and spent our charges, prioritize Evo over everything else",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & buff.disciplinary_command_frost.up",
								["action"] = "fire_blast",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & mana.pct > 95",
								["action"] = "frost_nova",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.arcane_harmony.enabled & buff.arcane_harmony.stack < buff.arcane_harmony.max_stack & ( ( buff.arcane_power.down & cooldown.arcane_power.ready ) || debuff.touch_of_the_magi.up )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "conduit.gift_of_the_lich",
								["action"] = "deathborne",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled",
								["action"] = "rune_of_power",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.rune_of_power.ready",
								["action"] = "arcane_orb",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.rune_of_power.ready & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_blast",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "time >= 5 + ( 1 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "time > 6 & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [11]
							{
								["action"] = "rune_of_power",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack & covenant.venthyr & cooldown.mirrors_of_torment.ready & ! variable.empowered_barrage & cooldown.arcane_power.ready",
								["action"] = "arcane_missiles",
								["description"] = "If we're at max stacks of CC and we haven't used MoT yet, use a stack to prevent munching unless running the Harmony legendary",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "potion",
								["criteria"] = "! runeforge.temporal_warp.enabled & ( ! runeforge.siphon_storm.enabled || ( variable.prepull_evo = 1 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) )",
								["description"] = "Normally we pair potion use with AP, but it will last long enough for both the RoP and AP windows unless running the SS or TW legendaries",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage",
								["action"] = "deathborne",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.remains < ( 6 + 2 * runeforge.siphon_storm.enabled )",
								["action"] = "mirrors_of_torment",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.rune_of_power.up & ( mana.pct < ( 25 + ( 10 * covenant.kyrian ) ) || buff.clearcasting.stack = buff.clearcasting.max_stack )",
								["action"] = "arcane_power",
								["description"] = "When running the Harmony legendary, use AP before TotM to dump a fully stacked barrage",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_power.up",
								["action"] = "arcane_barrage",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage || prev_gcd.1.radiant_spark || ( prev_gcd.1.deathborne & ! runeforge.siphon_storm.enabled )",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage || prev_gcd.1.radiant_spark || ( prev_gcd.1.deathborne & ! runeforge.siphon_storm.enabled )",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "! talent.arcane_echo.enabled & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.rune_of_power.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "dot.radiant_spark.remains > 5 || debuff.radiant_spark_vulnerability.stack > 0",
								["action"] = "arcane_blast",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & mana.pct < ( 40 + ( 10 * covenant.kyrian ) ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( ! runeforge.siphon_storm.enabled || variable.prepull_evo = 1 ) & ! runeforge.temporal_warp.enabled & ! runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "We want to make sure we have enough mana for the entire AP window, even if there's still time remaining on RoP. It's only better to burn to zero and Evo if running the SS or TW legendaries.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains <= gcd & cooldown.evocation.remains",
								["action"] = "arcane_barrage",
								["description"] = "Barrage should not be used at the end of AP if Evocation is ready as dropping charges will make it take longer to burn through remaining mana",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & ! runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Barrage should always be the last cast in the RoP window as TotM will restore the charges spent",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & buff.clearcasting.stack = buff.clearcasting.max_stack",
								["action"] = "arcane_missiles",
								["description"] = "If we're venthyr, immediately use CC when capped to not waste procs from MoT",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & cooldown.arcane_power.remains & ( buff.rune_of_power.up || buff.arcane_power.up )",
								["description"] = "Start using CC AM when AP has been used",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up || mana.pct > 15",
								["action"] = "arcane_blast",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "mana.pct>=85",
								["interrupt_immediate"] = "1",
								["criteria"] = "buff.rune_of_power.down & buff.arcane_power.down",
							}, -- [34]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [35]
						},
						["rotation"] = {
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & cooldown.rune_of_power.remains <= execute_time & cooldown.touch_of_the_magi.remains < 3 & ( buff.arcane_charge.stack > variable.totm_max_charges & talent.rune_of_power.enabled & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
								["description"] = "Use evo if we're low on mana and cooldowns are about to be up",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down )",
								["action"] = "arcane_barrage",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= execute_time & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.totm_max_delay_for_rop ) & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = debuff.radiant_spark_vulnerability.max_stack & ( buff.arcane_power.down || buff.arcane_power.remains <= gcd ) & ( buff.rune_of_power.down || buff.rune_of_power.remains <= gcd )",
								["action"] = "arcane_barrage",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark || ( debuff.radiant_spark_vulnerability.up & debuff.radiant_spark_vulnerability.stack < debuff.radiant_spark_vulnerability.max_stack )",
								["action"] = "arcane_blast",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.presence_of_mind.up & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= action.arcane_blast.execute_time",
								["action"] = "arcane_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & ( debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time || cooldown.presence_of_mind.remains || covenant.kyrian )",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.expanded_potential.up",
								["action"] = "arcane_missiles",
								["description"] = "Consume the expanded potential buff asap to not lose potential procs",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & ( buff.arcane_power.up || buff.rune_of_power.up || debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.remains <= ( ( buff.clearcasting.stack * action.arcane_missiles.execute_time ) + gcd.max )",
								["description"] = "Always try to bank CC for cooldown windows but dump them if they're about to expire",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_power.down & debuff.touch_of_the_magi.down",
								["action"] = "nether_tempest",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & mana.pct <= 95",
								["action"] = "supernova",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rule_of_threes.up & buff.arcane_charge.stack > 3",
								["action"] = "arcane_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains",
								["action"] = "arcane_barrage",
								["description"] = "Dump charges if we fall below the conserve mana threshold and evocation is still on cooldown",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains < 30",
								["action"] = "arcane_barrage",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains & ( ! runeforge.siphon_storm.enabled || buff.siphon_storm.remains <= 18 )",
								["action"] = "arcane_barrage",
								["description"] = "Dump charges if orb is ready",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( cooldown.evocation.remains || runeforge.arcane_harmony.enabled )",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should generally be the last cast of the AP window",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( cooldown.evocation.remains || runeforge.arcane_harmony.enabled )",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should generally be the last cast of the RoP window",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should be the last cast of the TotM window if it is not used with RoP or AP",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack >= ( active_enemies - 1 ) & active_enemies > 1 & buff.deathborne.down",
								["action"] = "arcane_barrage",
								["description"] = "When the target is in execute range and there is more than one enemy, use barrage as soon as you have enough charges to hit all enemies if the Arcane Bombardment legendary is equipped",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack < buff.arcane_charge.max_stack & active_enemies > 1 & buff.deathborne.down",
								["action"] = "arcane_explosion",
							}, -- [24]
							{
								["action"] = "arcane_blast",
								["enabled"] = true,
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns",
								["action"] = "evocation",
							}, -- [26]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [27]
						},
						["cooldowns"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains > 30 & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack <= variable.totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frost_nova",
								["description"] = "Prioritize using grisly icicle with ap. Use it with totm otherwise.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.ready & ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct",
								["action"] = "frost_nova",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ( buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down ) & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frostbolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down & prev_gcd.1.frostbolt",
								["action"] = "fire_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= 9 - ( 3 * set_bonus.tier28_4pc ) & cooldown.arcane_power.remains <= 10 - ( 3 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
								["description"] = "Pair MoT with AP if it's coming up soon. If it will be used with TotM, cast it slightly before",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & buff.siphon_storm.up & cooldown.touch_of_the_magi.remains <= 9 - ( 3 * set_bonus.tier28_4pc ) & cooldown.arcane_power.remains <= 10 - ( 3 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & ( soulbind.volatile_solvent.enabled || soulbind.pustule_eruption.enabled )",
								["action"] = "fleshcraft",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= 15 & cooldown.arcane_power.remains <= 16",
								["action"] = "deathborne",
								["description"] = "Always use deathborne with ap. If totm is ready as well, make sure to cast it before totm.",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
								["action"] = "deathborne",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.ready & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct",
								["action"] = "deathborne",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains > variable.rs_max_delay_for_totm & cooldown.arcane_power.remains > variable.rs_max_delay_for_ap & ( talent.rune_of_power.enabled & ( cooldown.rune_of_power.remains < execute_time || cooldown.rune_of_power.remains > variable.rs_max_delay_for_rop ) || ! talent.rune_of_power.enabled ) & buff.arcane_charge.stack > 2 & debuff.touch_of_the_magi.down & buff.rune_of_power.down & buff.arcane_power.down",
								["action"] = "radiant_spark",
								["description"] = "Use spark if totm and ap are on cd and won't be up for longer than the max delay, making sure we have at least two arcane charges and that totm wasn't just used.",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains < execute_time & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains < ( execute_time + action.touch_of_the_magi.execute_time )",
								["action"] = "radiant_spark",
								["description"] = "Use spark with ap when possible. If totm is ready as well, make sure to cast it before totm.",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains < execute_time & ( ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct )",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( ! runeforge.siphon_storm.enabled || buff.siphon_storm.up ) & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= ( action.evocation.execute_time + 13 )",
								["action"] = "evocation",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & buff.arcane_power.down & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains > 10",
								["action"] = "rune_of_power",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & prev_gcd.1.rune_of_power",
								["action"] = "touch_of_the_magi",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & cooldown.arcane_power.remains <= execute_time",
								["action"] = "touch_of_the_magi",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & ( ! runeforge.siphon_storm.enabled || buff.siphon_storm.up ) & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down",
								["action"] = "touch_of_the_magi",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_charge.stack <= variable.totm_max_charges & talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= execute_time & variable.time_until_ap > variable.totm_max_delay_for_ap",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_charge.stack <= variable.totm_max_charges & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.totm_max_delay_for_rop ) & variable.time_until_ap > variable.totm_max_delay_for_ap",
								["action"] = "touch_of_the_magi",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_power.down & ( cooldown.touch_of_the_magi.remains > variable.rop_max_delay_for_totm || cooldown.arcane_power.remains <= variable.totm_max_delay_for_ap ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & cooldown.arcane_power.remains > 10 & cooldown.touch_of_the_magi.remains > 10",
								["action"] = "rune_of_power",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns",
								["action"] = "shifting_power",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.rune_of_power.enabled & buff.arcane_power.up & buff.rune_of_power.remains < gcd.max",
								["action"] = "presence_of_mind",
								["description"] = "Use pom to squeeze an extra ab in the next cooldown window, unless kyrian then only during arcane power due to how mana hungry radiant spark is",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains < action.arcane_missiles.execute_time & ! covenant.kyrian",
								["action"] = "presence_of_mind",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.rune_of_power.remains < gcd.max & cooldown.evocation.ready & cooldown.touch_of_the_magi.remains & ! covenant.kyrian",
								["action"] = "presence_of_mind",
							}, -- [27]
						},
						["default"] = {
							{
								["action"] = "counterspell",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( talent.enlightened.enabled & mana.pct <= 80 & mana.pct >= 65 ) || ( ! talent.enlightened.enabled & mana.pct <= 85 )",
								["action"] = "mana_gem",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "potion",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up & ( cooldown.arcane_power.ready || boss & fight_remains <= 40 )",
								["action"] = "time_warp",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down",
								["action"] = "lights_judgment",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down",
								["action"] = "bag_of_tricks",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "berserking",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "blood_fury",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "fireblood",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "ancestral_call",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "use_items",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "gladiators_badge",
								["criteria"] = "buff.arcane_power.up || cooldown.arcane_power.remains >= 55 & debuff.touch_of_the_magi.up",
								["effect_name"] = "gladiators_badge",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "covenant.kyrian & cooldown.arcane_power.remains <= 10 & cooldown.touch_of_the_magi.remains <= 10 & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "! covenant.kyrian & cooldown.arcane_power.remains <= 6 & cooldown.touch_of_the_magi.remains <= 6 & time > 30 & ( ! covenant.venthyr || active_enemies < variable.aoe_target_count ) & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "cooldown.arcane_power.remains <= 15 & cooldown.touch_of_the_magi.remains <= 15",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
								["criteria"] = "cooldown.arcane_power.remains >= 20 || ! variable.ap_on_use = 1 || ( time = 0 & variable.fishing_opener = 1 & runeforge.siphon_storm.enabled )",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "cooldown.arcane_power.remains >= 30 || ! variable.ap_on_use = 1",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "cooldown.arcane_power.remains >= 20 || ! variable.ap_on_use = 1 || ( time = 0 & variable.fishing_opener = 1 & runeforge.siphon_storm.enabled )",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "cooldown.arcane_power.remains <= 5 & ( ! variable.fishing_opener = 1 || time > 30 )",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "cooldown.arcane_power.remains <= 5 & variable.fishing_opener = 1 & buff.rune_of_power.up & buff.rune_of_power.remains <= ( 10 - 5 * runeforge.siphon_storm.enabled ) & time < 30",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "time = 0 || ( variable.outside_of_cooldowns & ( ( covenant.kyrian & cooldown.radiant_spark.remains <= 2 & cooldown.arcane_power.remains <= 5 & cooldown.touch_of_the_magi.remains <= 5 ) || cooldown.arcane_power.remains <= 2 || fight_remains < cooldown.arcane_power.remains ) )",
							}, -- [22]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["description"] = "5.6 is the speed of the Soulletting Ruby projectile",
								["criteria"] = "( variable.time_until_ap + ( action.radiant_spark.execute_time * covenant.kyrian ) + ( action.deathborne.execute_time * covenant.necrolord ) + action.touch_of_the_magi.execute_time < target.distance / 5.6 ) & ( variable.have_opened || ( covenant.kyrian & runeforge.arcane_infinity.enabled ) ) & target.distance > 25",
								["action"] = "soulletting_ruby",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.venthyr & runeforge.siphon_storm.enabled & talent.arcane_echo.enabled & active_enemies >= variable.aoe_target_count",
								["list_name"] = "vaoe",
							}, -- [24]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= variable.aoe_target_count & ! ( covenant.kyrian & runeforge.arcane_infinity.enabled )",
								["list_name"] = "aoe",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.kyrian & runeforge.arcane_harmony.enabled",
								["list_name"] = "harmony",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.have_opened = 0 & variable.fishing_opener & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "fishing_opener",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.have_opened = 0 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "opener",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "cooldowns",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.final_burn = 0 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "rotation",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.final_burn = 1 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "final_burn",
							}, -- [31]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "summon_arcane_familiar",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "conjure_mana_gem",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "mirror_image",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled || soulbind.pustule_eruption.enabled",
								["action"] = "fleshcraft",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.kyrian & runeforge.arcane_harmony.enabled & conduit.arcane_prodigy.enabled & variable.always_sync_cooldowns & active_enemies < variable.aoe_target_count",
								["action"] = "rune_of_power",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & runeforge.disciplinary_command.enabled",
								["action"] = "frostbolt",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & ! runeforge.disciplinary_command.enabled & ( ! covenant.venthyr || variable.fishing_opener )",
								["action"] = "arcane_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & ! runeforge.disciplinary_command.enabled & covenant.venthyr & ! variable.fishing_opener",
								["action"] = "mirrors_of_torment",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.prepull_evo = 1",
								["action"] = "evocation",
							}, -- [10]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ( buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down ) & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frostbolt",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down & prev_gcd.1.frostbolt ) || ( runeforge.disciplinary_command.enabled & time = 0 )",
								["action"] = "fire_blast",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains > 30 & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frost_nova",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "frost_nova",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & buff.arcane_harmony.stack < 15 & cooldown.touch_of_the_magi.remains <= variable.harmony_stack_time + execute_time & cooldown.arcane_power.remains <= variable.harmony_stack_time + execute_time + action.touch_of_the_magi.execute_time",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & talent.arcane_echo.enabled & time < 10 & cooldown.mirrors_of_torment.remains & buff.clearcasting.stack < 3",
								["action"] = "arcane_blast",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
								["action"] = "touch_of_the_magi",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & ( prev_gcd.1.evocation || prev_gcd.1.touch_of_the_magi )",
								["action"] = "arcane_power",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.arcane_infinity.enabled & cooldown.touch_of_the_magi.remains <= 10 & cooldown.arcane_power.remains <= 15",
								["action"] = "mirrors_of_torment",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains <= 8 & cooldown.touch_of_the_magi.remains <= 8 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > 5 ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > 5 ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "mirrors_of_torment",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & covenant.venthyr & prev_gcd.1.mirrors_of_torment",
								["action"] = "evocation",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & buff.arcane_charge.stack <= variable.aoe_totm_max_charges & cooldown.touch_of_the_magi.remains = 0 & cooldown.arcane_power.remains <= gcd",
								["action"] = "evocation",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "buff.siphon_storm.stack=buff.siphon_storm.max_stack",
								["interrupt_immediate"] = "1",
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "cooldown.radiant_spark.ready & cooldown.touch_of_the_magi.remains <= gcd.max & cooldown.arcane_power.remains <= gcd.max",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains < execute_time & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd )",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains < execute_time & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "radiant_spark",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "deathborne",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( buff.arcane_charge.stack <= variable.aoe_totm_max_charges || prev_gcd.1.radiant_spark ) & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & cooldown.mirrors_of_torment.remains <= 50",
								["action"] = "touch_of_the_magi",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & buff.mirrors_of_torment.remains <= 20 & cooldown.arcane_power.remains <= gcd",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( buff.arcane_charge.stack <= variable.aoe_totm_max_charges || prev_gcd.1.radiant_spark ) & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "touch_of_the_magi",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "arcane_power",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( ( cooldown.touch_of_the_magi.remains > 20 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & ( cooldown.arcane_power.remains > 12 || debuff.touch_of_the_magi.up ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "rune_of_power",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_orb.remains > 5 || ! talent.arcane_orb.enabled",
								["action"] = "shifting_power",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & cooldown.radiant_spark.remains <= execute_time",
								["action"] = "rune_of_power",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & ( buff.arcane_charge.stack >= 2 || cooldown.touch_of_the_magi.remains <= execute_time )",
								["action"] = "radiant_spark",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & prev_gcd.1.radiant_spark",
								["action"] = "touch_of_the_magi",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & debuff.radiant_spark_vulnerability.stack = 1",
								["action"] = "arcane_explosion",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & ( prev_gcd.1.radiant_spark || ( prev_gcd.2.radiant_spark & debuff.touch_of_the_magi.up ) )",
								["action"] = "arcane_explosion",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & debuff.radiant_spark_vulnerability.stack = 3",
								["action"] = "arcane_orb",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & talent.arcane_echo.enabled & debuff.touch_of_the_magi.up",
								["action"] = "arcane_missiles",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= buff.presence_of_mind.max_stack * action.arcane_blast.execute_time & ( ( talent.resonance.enabled & active_enemies < 4 ) || active_enemies < 5 ) & ( ! runeforge.arcane_bombardment.enabled || target.health.pct > 35 )",
								["action"] = "presence_of_mind",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & ( ( talent.resonance.enabled & active_enemies < 4 ) || active_enemies < 5 ) & ( ! runeforge.arcane_bombardment.enabled || target.health.pct > 35 )",
								["action"] = "arcane_blast",
							}, -- [35]
							{
								["action"] = "supernova",
								["enabled"] = true,
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack >= ( active_enemies - 1 ) & runeforge.arcane_bombardment.enabled & target.health.pct < 35",
								["action"] = "arcane_barrage",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "arcane_barrage",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = 0 & ( cooldown.arcane_power.remains > 15 || ! ( covenant.kyrian & runeforge.arcane_harmony.enabled ) )",
								["action"] = "arcane_orb",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "nether_tempest",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & runeforge.arcane_harmony.enabled & ( ( talent.amplification.enabled & active_enemies < 8 ) || active_enemies < 5 )",
								["action"] = "arcane_missiles",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & talent.amplification.enabled & active_enemies < 4",
								["action"] = "arcane_missiles",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_explosion",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & prev_gcd.1.arcane_barrage",
								["action"] = "arcane_explosion",
							}, -- [44]
						},
						["vaoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "rune_of_power",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "arcane_orb",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "arcane_explosion",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "prev_gcd.1.mirrors_of_torment & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains <= ( action.evocation.execute_time + 13 ) & cooldown.arcane_power.remains <= ( action.evocation.execute_time + 14 )",
								["action"] = "evocation",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "time > 6 & cooldown.touch_of_the_magi.remains <= 9 & buff.siphon_storm.up",
								["action"] = "mirrors_of_torment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.siphon_storm.remains > 20 & ! debuff.mirrors_of_torment.up",
								["action"] = "arcane_explosion",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "debuff.mirrors_of_torment.up & time < 13",
								["action"] = "arcane_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "debuff.mirrors_of_torment.remains >= 19 & cooldown.touch_of_the_magi.remains",
								["action"] = "arcane_blast",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains > 10",
								["action"] = "rune_of_power",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "time >= 13 & cooldown.arcane_power.remains <= execute_time",
								["action"] = "touch_of_the_magi",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & prev_gcd.1.rune_of_power",
								["action"] = "touch_of_the_magi",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.siphon_storm.remains > 24 & ! debuff.touch_of_the_magi.down",
								["action"] = "arcane_explosion",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains <= 8 & cooldown.rune_of_power.remains <= 9 & buff.arcane_charge.stack = buff.arcane_charge.max_stack & active_enemies < 6 - ( 1 * set_bonus.tier28_2pc )",
								["action"] = "arcane_blast",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 9 - ( 1 * set_bonus.tier28_2pc ) & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&active_enemies<6",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react",
								["action"] = "arcane_missiles",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = 0 & cooldown.arcane_power.remains > 15",
								["action"] = "arcane_orb",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "time > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack & cooldown.touch_of_the_magi.remains & ( buff.siphon_storm.remains < 25 || buff.siphon_storm.down & cooldown.touch_of_the_magi.remains >= 11 )",
								["action"] = "arcane_barrage",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_explosion",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & prev_gcd.1.arcane_barrage",
								["action"] = "arcane_explosion",
							}, -- [21]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & buff.disciplinary_command_frost.up",
								["action"] = "fire_blast",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & mana.pct > 95",
								["action"] = "frost_nova",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [3]
							{
								["action"] = "deathborne",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 40",
								["action"] = "radiant_spark",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr",
								["action"] = "rune_of_power",
							}, -- [6]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & cooldown.arcane_power.remains",
								["action"] = "shifting_power",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_orb",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & cooldown.mirrors_of_torment.remains > 84",
								["action"] = "arcane_blast",
							}, -- [10]
							{
								["action"] = "touch_of_the_magi",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "arcane_power",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down",
								["action"] = "rune_of_power",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.arcane_echo.enabled & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.rune_of_power.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.radiant_spark.remains > 5 || debuff.radiant_spark_vulnerability.stack > 0",
								["action"] = "arcane_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains < gcd & runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Always Barrage at the end of AP when running the Arcane Harmony legendary",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Always Barrage at the end of the RoP window when running the Arcane Harmony legendary",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["chain"] = "1",
								["action"] = "arcane_missiles",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.stack = buff.clearcasting.max_stack & covenant.venthyr",
								["action"] = "arcane_missiles",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & cooldown.arcane_power.remains & ( buff.rune_of_power.up || buff.arcane_power.up )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up || mana.pct > 15",
								["action"] = "arcane_blast",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "mana.pct>=85",
								["interrupt_immediate"] = "1",
								["criteria"] = "buff.rune_of_power.down & buff.arcane_power.down",
							}, -- [24]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [25]
						},
						["final_burn"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [1]
							{
								["action"] = "arcane_blast",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [3]
						},
					},
					["version"] = 20220613,
					["warnings"] = "WARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'fishing_opener' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 11: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'rotation' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'vaoe' required some automated changes.\nLine 4: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 23: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 25: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 13: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 22: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 23: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 25: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 30: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 32: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 34: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 34: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 35: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 35: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 41: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 41: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 42: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'harmony' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 6: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (2x).\nLine 7: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (2x).\nLine 9: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 14: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 15: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\n\nWARNING:  The import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 15: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 25: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 10 action lists.\n",
					["author"] = "SimulationCraft",
					["profile"] = "## Mage Arcane\n## June 13, 2022\n\n## Changes:\n## - Use typical SimC handling of channel interruption instead of 'cancel_action'.\n## - Change arcane_infinity to arcane_harmony (it never went live as arcane_harmony).\n## - Don't Evocate in AOE just because you're out of range and not using Arcane Explosion.\n## - Adjust priority to use Arcane Power's effective cooldown based on CDR effects.\n## - Use strict processing to reduce CPU time due to unnecessary APL forks.\n## - Moved variables/calculations to Lua module to reduce CPU time.\n\nactions.precombat+=/arcane_intellect\nactions.precombat+=/arcane_familiar\nactions.precombat+=/conjure_mana_gem\n## actions.precombat+=/variable,name=aoe_target_count,op=reset,default=3\n## actions.precombat+=/variable,name=evo_pct,op=reset,default=15\n## actions.precombat+=/variable,name=prepull_evo,op=set,if=(runeforge.siphon_storm&(covenant.venthyr||covenant.necrolord||conduit.arcane_prodigy)),value=1,value_else=0\n## actions.precombat+=/variable,name=have_opened,op=set,if=active_enemies>=variable.aoe_target_count,value=1,value_else=0\n## actions.precombat+=/variable,name=final_burn,op=set,value=0\n## actions.precombat+=/variable,name=harmony_stack_time,op=reset,default=9\n## actions.precombat+=/variable,name=always_sync_cooldowns,op=reset,default=0\n## actions.precombat+=/variable,name=rs_max_delay_for_totm,op=reset,default=5\n## actions.precombat+=/variable,name=rs_max_delay_for_rop,op=reset,default=5\n## actions.precombat+=/variable,name=rs_max_delay_for_ap,op=reset,default=20\n## actions.precombat+=/variable,name=mot_preceed_totm_by,op=reset,default=8\n## actions.precombat+=/variable,name=mot_max_delay_for_totm,op=reset,default=10\n## actions.precombat+=/variable,name=mot_max_delay_for_ap,op=reset,default=15\n## actions.precombat+=/variable,name=ap_max_delay_for_totm,op=reset,if=conduit.arcane_prodigy,value=30,value_else=10\n## actions.precombat+=/variable,name=ap_max_delay_for_totm,op=reset,default=20\n## actions.precombat+=/variable,name=ap_max_delay_for_mot,op=reset,default=20\n## actions.precombat+=/variable,name=rop_max_delay_for_totm,op=set,value=20-(5*conduit.arcane_prodigy)\n## actions.precombat+=/variable,name=totm_max_delay_for_ap,op=set,value=5+20*(covenant.night_fae||(conduit.arcane_prodigy&active_enemies<variable.aoe_target_count))+15*(covenant.kyrian&runeforge.arcane_harmony&active_enemies>=variable.aoe_target_count)\n## actions.precombat+=/variable,name=totm_max_delay_for_rop,op=set,value=20-(8*conduit.arcane_prodigy)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=covenant.night_fae,value=60-(mastery_value*100)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=covenant.kyrian,value=95-(mastery_value*100)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=variable.barrage_mana_pct=0,value=80-(mastery_value*100)\n## actions.precombat+=/variable,name=ap_minimum_mana_pct,op=reset,default=15\n## actions.precombat+=/variable,name=totm_max_charges,op=reset,default=2\n## actions.precombat+=/variable,name=aoe_totm_max_charges,op=reset,default=2\n## actions.precombat+=/variable,name=fishing_opener,op=set,value=1*(equipped.empyreal_ordnance||(talent.rune_of_power&(talent.arcane_echo||!covenant.kyrian)&(!covenant.necrolord||active_enemies=1||runeforge.siphon_storm)&!covenant.venthyr))\n## actions.precombat+=/variable,name=ap_on_use,op=set,value=equipped.macabre_sheet_music||equipped.gladiators_badge||equipped.gladiators_medallion||equipped.darkmoon_deck_putrescence||equipped.inscrutable_quantum_device||equipped.soulletting_ruby||equipped.sunblood_amethyst||equipped.wakeners_frond||equipped.flame_of_battle\nactions.precombat+=/mirror_image\nactions.precombat+=/fleshcraft,if=soulbind.volatile_solvent||soulbind.pustule_eruption\nactions.precombat+=/rune_of_power,if=covenant.kyrian&runeforge.arcane_harmony&conduit.arcane_prodigy&variable.always_sync_cooldowns&active_enemies<variable.aoe_target_count\nactions.precombat+=/frostbolt,if=!variable.prepull_evo=1&runeforge.disciplinary_command\nactions.precombat+=/arcane_blast,if=!variable.prepull_evo=1&!runeforge.disciplinary_command&(!covenant.venthyr||variable.fishing_opener)\nactions.precombat+=/mirrors_of_torment,if=!variable.prepull_evo=1&!runeforge.disciplinary_command&covenant.venthyr&!variable.fishing_opener\nactions.precombat+=/evocation,if=variable.prepull_evo=1\n\nactions+=/counterspell\nactions+=/use_mana_gem,if=(talent.enlightened&mana.pct<=80&mana.pct>=65)||(!talent.enlightened&mana.pct<=85)\nactions+=/potion,if=buff.arcane_power.up\nactions+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up&(cooldown.arcane_power.ready||boss&fight_remains<=40)\nactions+=/lights_judgment,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down\nactions+=/bag_of_tricks,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down\nactions+=/berserking,if=buff.arcane_power.up\nactions+=/blood_fury,if=buff.arcane_power.up\nactions+=/fireblood,if=buff.arcane_power.up\nactions+=/ancestral_call,if=buff.arcane_power.up\nactions+=/use_items,if=buff.arcane_power.up\nactions+=/use_item,name=scars_of_fraternal_strife\nactions+=/use_item,effect_name=gladiators_badge,if=buff.arcane_power.up||cooldown.arcane_power.remains>=55&debuff.touch_of_the_magi.up\nactions+=/use_item,name=moonlit_prism,if=covenant.kyrian&cooldown.arcane_power.remains<=10&cooldown.touch_of_the_magi.remains<=10&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions+=/use_item,name=moonlit_prism,if=!covenant.kyrian&cooldown.arcane_power.remains<=6&cooldown.touch_of_the_magi.remains<=6&time>30&(!covenant.venthyr||active_enemies<variable.aoe_target_count)&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions+=/use_item,name=empyreal_ordnance,if=cooldown.arcane_power.remains<=15&cooldown.touch_of_the_magi.remains<=15\nactions+=/use_item,name=dreadfire_vessel,if=cooldown.arcane_power.remains>=20||!variable.ap_on_use=1||(time=0&variable.fishing_opener=1&runeforge.siphon_storm)\nactions+=/use_item,name=soul_igniter,if=cooldown.arcane_power.remains>=30||!variable.ap_on_use=1\nactions+=/use_item,name=glyph_of_assimilation,if=cooldown.arcane_power.remains>=20||!variable.ap_on_use=1||(time=0&variable.fishing_opener=1&runeforge.siphon_storm)\nactions+=/use_item,name=macabre_sheet_music,if=cooldown.arcane_power.remains<=5&(!variable.fishing_opener=1||time>30)\nactions+=/use_item,name=macabre_sheet_music,if=cooldown.arcane_power.remains<=5&variable.fishing_opener=1&buff.rune_of_power.up&buff.rune_of_power.remains<=(10-5*runeforge.siphon_storm)&time<30\nactions+=/use_item,name=shadowed_orb_of_torment,if=time=0||(variable.outside_of_cooldowns&((covenant.kyrian&cooldown.radiant_spark.remains<=2&cooldown.arcane_power.remains<=5&cooldown.touch_of_the_magi.remains<=5)||cooldown.arcane_power.remains<=2||fight_remains<cooldown.arcane_power.remains))\n# 5.6 is the speed of the Soulletting Ruby projectile\nactions+=/use_item,name=soulletting_ruby,if=(variable.time_until_ap+(action.radiant_spark.execute_time*covenant.kyrian)+(action.deathborne.execute_time*covenant.necrolord)+action.touch_of_the_magi.execute_time<target.distance%5.6)&(variable.have_opened||(covenant.kyrian&runeforge.arcane_infinity))&target.distance>25\n## actions+=/newfound_resolve,use_while_casting=1,if=buff.arcane_power.up||debuff.touch_of_the_magi.up||dot.radiant_spark.ticking\n## actions+=/call_action_list,name=calculations\nactions+=/call_action_list,name=vaoe,strict=1,if=covenant.venthyr&runeforge.siphon_storm&talent.arcane_echo&active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=variable.aoe_target_count&!(covenant.kyrian&runeforge.arcane_infinity)\nactions+=/call_action_list,name=harmony,strict=1,if=covenant.kyrian&runeforge.arcane_harmony\nactions+=/call_action_list,name=fishing_opener,strict=1,if=variable.have_opened=0&variable.fishing_opener&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=opener,strict=1,if=variable.have_opened=0&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=cooldowns,strict=1,if=!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=rotation,strict=1,if=variable.final_burn=0&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=final_burn,strict=1,if=variable.final_burn=1&!(covenant.kyrian&runeforge.arcane_harmony)\n\nactions.aoe=frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&(buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down)&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/fire_blast,if=(runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down&prev_gcd.1.frostbolt)||(runeforge.disciplinary_command&time=0)\nactions.aoe+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains>30&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/arcane_missiles,if=covenant.venthyr&runeforge.arcane_infinity&buff.arcane_harmony.stack<15&cooldown.touch_of_the_magi.remains<=variable.harmony_stack_time+execute_time&cooldown.arcane_power.remains<=variable.harmony_stack_time+execute_time+action.touch_of_the_magi.execute_time,chain=1\nactions.aoe+=/arcane_blast,if=covenant.venthyr&talent.arcane_echo&time<10&cooldown.mirrors_of_torment.remains&buff.clearcasting.stack<3\nactions.aoe+=/use_item,name=soulletting_ruby,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.aoe+=/touch_of_the_magi,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.aoe+=/arcane_power,if=runeforge.siphon_storm&(prev_gcd.1.evocation||prev_gcd.1.touch_of_the_magi)\nactions.aoe+=/mirrors_of_torment,if=runeforge.arcane_infinity&cooldown.touch_of_the_magi.remains<=10&cooldown.arcane_power.remains<=15\nactions.aoe+=/mirrors_of_torment,if=cooldown.arcane_power.remains<=8&cooldown.touch_of_the_magi.remains<=8&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>5)||(!talent.rune_of_power&cooldown.arcane_power.remains>5)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&covenant.venthyr&prev_gcd.1.mirrors_of_torment\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&buff.arcane_charge.stack<=variable.aoe_totm_max_charges&cooldown.touch_of_the_magi.remains=0&cooldown.arcane_power.remains<=gcd\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down),interrupt_if=buff.siphon_storm.stack=buff.siphon_storm.max_stack,interrupt_immediate=1\nactions.aoe+=/use_item,name=soulletting_ruby,if=cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=gcd.max&cooldown.arcane_power.remains<=gcd.max\nactions.aoe+=/radiant_spark,if=cooldown.touch_of_the_magi.remains<execute_time&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)\nactions.aoe+=/radiant_spark,if=cooldown.arcane_power.remains<execute_time&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/deathborne,if=cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/use_item,name=soulletting_ruby,if=(buff.arcane_charge.stack<=variable.aoe_totm_max_charges||prev_gcd.1.radiant_spark)&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/touch_of_the_magi,if=covenant.venthyr&runeforge.arcane_infinity&cooldown.mirrors_of_torment.remains<=50\nactions.aoe+=/touch_of_the_magi,if=covenant.venthyr&runeforge.arcane_infinity&buff.mirrors_of_torment.remains<=20&cooldown.arcane_power.remains<=gcd\nactions.aoe+=/touch_of_the_magi,if=(buff.arcane_charge.stack<=variable.aoe_totm_max_charges||prev_gcd.1.radiant_spark)&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/arcane_power,if=((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/rune_of_power,if=buff.rune_of_power.down&((cooldown.touch_of_the_magi.remains>20&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&(cooldown.arcane_power.remains>12||debuff.touch_of_the_magi.up)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/shifting_power,if=cooldown.arcane_orb.remains>5||!talent.arcane_orb\nactions.aoe+=/rune_of_power,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&cooldown.radiant_spark.remains<=execute_time\nactions.aoe+=/radiant_spark,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&(buff.arcane_charge.stack>=2||cooldown.touch_of_the_magi.remains<=execute_time)\nactions.aoe+=/touch_of_the_magi,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&prev_gcd.1.radiant_spark\nactions.aoe+=/arcane_power,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&prev_gcd.1.touch_of_the_magi\nactions.aoe+=/arcane_explosion,if=runeforge.harmonic_echo&debuff.radiant_spark_vulnerability.stack=1\nactions.aoe+=/arcane_explosion,if=runeforge.harmonic_echo&(prev_gcd.1.radiant_spark||(prev_gcd.2.radiant_spark&debuff.touch_of_the_magi.up))\nactions.aoe+=/arcane_orb,if=runeforge.harmonic_echo&debuff.radiant_spark_vulnerability.stack=3\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&talent.arcane_echo&debuff.touch_of_the_magi.up\nactions.aoe+=/presence_of_mind,if=buff.deathborne.up&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=buff.presence_of_mind.max_stack*action.arcane_blast.execute_time&((talent.resonance&active_enemies<4)||active_enemies<5)&(!runeforge.arcane_bombardment||target.health.pct>35)\nactions.aoe+=/arcane_blast,if=buff.deathborne.up&((talent.resonance&active_enemies<4)||active_enemies<5)&(!runeforge.arcane_bombardment||target.health.pct>35)\nactions.aoe+=/supernova\nactions.aoe+=/arcane_barrage,if=buff.arcane_charge.stack>=(active_enemies-1)&runeforge.arcane_bombardment&target.health.pct<35\nactions.aoe+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe+=/arcane_orb,if=buff.arcane_charge.stack=0&(cooldown.arcane_power.remains>15||!(covenant.kyrian&runeforge.arcane_harmony))\nactions.aoe+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&runeforge.arcane_harmony&((talent.amplification&active_enemies<8)||active_enemies<5)\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&talent.amplification&active_enemies<4\nactions.aoe+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.aoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&prev_gcd.1.arcane_barrage\n## actions.aoe+=/evocation,interrupt_if=mana.pct>=85,interrupt_immediate=1\n\n## These calculations were moved into the addon to (hopefully) increase efficiency.\n## actions.calculations=variable,name=have_opened,op=set,value=1,if=variable.have_opened=0&prev_gcd.1.evocation&!(runeforge.siphon_storm||runeforge.temporal_warp)\n## actions.calculations+=/variable,name=have_opened,op=set,value=1,if=variable.have_opened=0&buff.arcane_power.down&cooldown.arcane_power.remains&(runeforge.siphon_storm||runeforge.temporal_warp)\n## actions.calculations+=/variable,name=final_burn,op=set,value=1,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&!buff.rule_of_threes.up&fight_remains<=((mana%action.arcane_blast.cost)*action.arcane_blast.execute_time)\n## Either a fully stacked harmony or in execute range with Bombardment\n## actions.calculations+=/variable,name=empowered_barrage,op=set,value=buff.arcane_harmony.stack>=15||(runeforge.arcane_bombardment&target.health.pct<35)\n## actions.calculations+=/variable,name=last_ap_use,default=0,op=set,if=buff.arcane_power.up&(variable.last_ap_use=0||time>=variable.last_ap_use+15),value=time\n## Arcane Prodigy gives a variable amount of cdr, but we'll use a flat estimation here. The simc provided remains_expected expression does not work well for prodigy due to the bursty nature of the cdr.\n## actions.calculations+=/variable,name=estimated_ap_cooldown,op=set,value=(cooldown.arcane_power.duration*(1-(0.03*conduit.arcane_prodigy.rank)))-(time-variable.last_ap_use)\n## actions.calculations+=/variable,name=time_until_ap,op=set,if=conduit.arcane_prodigy,value=cooldown.arcane_power.remains_expected\n## actions.calculations+=/variable,name=time_until_ap,op=set,if=!conduit.arcane_prodigy,value=cooldown.arcane_power.remains\n## We'll delay AP up to 20sec for TotM\n## actions.calculations+=/variable,name=time_until_ap,op=max,value=cooldown.touch_of_the_magi.remains,if=(cooldown.touch_of_the_magi.remains-variable.time_until_ap)<20\n## Since Ruby is such a powerful trinket for Kyrian, we'll stick to the two minute cycle until we get a high enough rank of prodigy\n## actions.calculations+=/variable,name=time_until_ap,op=max,value=trinket.soulletting_ruby.cooldown.remains,if=conduit.arcane_prodigy&conduit.arcane_prodigy.rank<5&equipped.soulletting_ruby&covenant.kyrian&runeforge.arcane_harmony\n## We'll delay TotM up to 20sec for AP\n## actions.calculations+=/variable,name=holding_totm,op=set,value=cooldown.touch_of_the_magi.ready&variable.time_until_ap<20\n## Radiant Spark does not immediately put up the vulnerability debuff so it can be difficult to discern that we're at the zeroth vulnerability stack\n## actions.calculations+=/variable,name=just_used_spark,op=set,value=(prev_gcd.1.radiant_spark||prev_gcd.2.radiant_spark||prev_gcd.3.radiant_spark)&action.radiant_spark.time_since<gcd.max*4\n## Original SimC checked debuff.radiant_spark_vulnerability.down, but that doesn't work when the addon applies RSV instantly.\n## actions.calculations+=/variable,name=just_used_spark,op=set,value=(prev_gcd.1.radiant_spark||prev_gcd.2.radiant_spark||prev_gcd.3.radiant_spark)&debuff.radiant_spark_vulnerability.down\n## actions.calculations+=/variable,name=outside_of_cooldowns,op=set,value=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down&!variable.just_used_spark&debuff.radiant_spark_vulnerability.down\n## actions.calculations+=/variable,name=stack_harmony,op=set,value=runeforge.arcane_harmony&((covenant.kyrian&cooldown.radiant_spark.remains<variable.harmony_stack_time))\n\n# Prioritize using grisly icicle with ap. Use it with totm otherwise.\nactions.cooldowns=frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains>30&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack<=variable.totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.cooldowns+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.ready&(!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct\nactions.cooldowns+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&(buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down)&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.cooldowns+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down&prev_gcd.1.frostbolt\n# Pair MoT with AP if it's coming up soon. If it will be used with TotM, cast it slightly before\nactions.cooldowns+=/mirrors_of_torment,if=!runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=9-(3*set_bonus.tier28_4pc)&cooldown.arcane_power.remains<=10-(3*set_bonus.tier28_4pc)\nactions.cooldowns+=/mirrors_of_torment,if=runeforge.siphon_storm&buff.siphon_storm.up&cooldown.touch_of_the_magi.remains<=9-(3*set_bonus.tier28_4pc)&cooldown.arcane_power.remains<=10-(3*set_bonus.tier28_4pc)\nactions.cooldowns+=/fleshcraft,if=variable.outside_of_cooldowns&(soulbind.volatile_solvent||soulbind.pustule_eruption)\n# Always use deathborne with ap. If totm is ready as well, make sure to cast it before totm.\nactions.cooldowns+=/deathborne,if=!runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=15&cooldown.arcane_power.remains<=16\nactions.cooldowns+=/deathborne,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.cooldowns+=/deathborne,if=cooldown.arcane_power.ready&(!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.ready&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct\n# Use spark if totm and ap are on cd and won't be up for longer than the max delay, making sure we have at least two arcane charges and that totm wasn't just used.\nactions.cooldowns+=/radiant_spark,if=cooldown.touch_of_the_magi.remains>variable.rs_max_delay_for_totm&cooldown.arcane_power.remains>variable.rs_max_delay_for_ap&(talent.rune_of_power&(cooldown.rune_of_power.remains<execute_time||cooldown.rune_of_power.remains>variable.rs_max_delay_for_rop)||!talent.rune_of_power)&buff.arcane_charge.stack>2&debuff.touch_of_the_magi.down&buff.rune_of_power.down&buff.arcane_power.down\n# Use spark with ap when possible. If totm is ready as well, make sure to cast it before totm.\nactions.cooldowns+=/radiant_spark,if=cooldown.touch_of_the_magi.remains<execute_time&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<(execute_time+action.touch_of_the_magi.execute_time)\nactions.cooldowns+=/radiant_spark,if=cooldown.arcane_power.remains<execute_time&((!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct)\nactions.cooldowns+=/use_item,name=soulletting_ruby,if=(!runeforge.siphon_storm||buff.siphon_storm.up)&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down\nactions.cooldowns+=/evocation,if=runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=(action.evocation.execute_time+13)\nactions.cooldowns+=/rune_of_power,if=set_bonus.tier28_2pc&covenant.venthyr&buff.arcane_power.down&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains>10\nactions.cooldowns+=/touch_of_the_magi,if=set_bonus.tier28_2pc&covenant.venthyr&prev_gcd.1.rune_of_power\nactions.cooldowns+=/touch_of_the_magi,if=set_bonus.tier28_2pc&covenant.venthyr&cooldown.arcane_power.remains<=execute_time\nactions.cooldowns+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&(!runeforge.siphon_storm||buff.siphon_storm.up)&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_charge.stack<=variable.totm_max_charges&talent.rune_of_power&cooldown.rune_of_power.remains<=execute_time&variable.time_until_ap>variable.totm_max_delay_for_ap\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_charge.stack<=variable.totm_max_charges&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.totm_max_delay_for_rop)&variable.time_until_ap>variable.totm_max_delay_for_ap\nactions.cooldowns+=/rune_of_power,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_power.down&(cooldown.touch_of_the_magi.remains>variable.rop_max_delay_for_totm||cooldown.arcane_power.remains<=variable.totm_max_delay_for_ap)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&cooldown.arcane_power.remains>10&cooldown.touch_of_the_magi.remains>10\nactions.cooldowns+=/shifting_power,if=variable.outside_of_cooldowns\n# Use pom to squeeze an extra ab in the next cooldown window, unless kyrian then only during arcane power due to how mana hungry radiant spark is\nactions.cooldowns+=/presence_of_mind,if=talent.rune_of_power&buff.arcane_power.up&buff.rune_of_power.remains<gcd.max\nactions.cooldowns+=/presence_of_mind,if=debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<action.arcane_missiles.execute_time&!covenant.kyrian\nactions.cooldowns+=/presence_of_mind,if=buff.rune_of_power.up&buff.rune_of_power.remains<gcd.max&cooldown.evocation.ready&cooldown.touch_of_the_magi.remains&!covenant.kyrian\n\nactions.final_burn=arcane_missiles,if=buff.clearcasting.react,chain=1\nactions.final_burn+=/arcane_blast\nactions.final_burn+=/arcane_barrage\n\n# When running either the SS or TW legendaries, we want to Evo before the TotM/AP window. Use it as soon as RoP has finished our we've spent our charges\nactions.fishing_opener=evocation,if=(runeforge.temporal_warp||(runeforge.siphon_storm&!variable.prepull_evo=1))&(buff.rune_of_power.down||prev_gcd.1.arcane_barrage)&cooldown.rune_of_power.remains\n# If we've finished our cooldown windows and spent our charges, prioritize Evo over everything else\nactions.fishing_opener+=/evocation,if=talent.rune_of_power&cooldown.rune_of_power.remains&cooldown.arcane_power.remains&buff.arcane_power.down&buff.rune_of_power.down&prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/fire_blast,if=runeforge.disciplinary_command&buff.disciplinary_command_frost.up\nactions.fishing_opener+=/frost_nova,if=runeforge.grisly_icicle&mana.pct>95\nactions.fishing_opener+=/arcane_missiles,if=runeforge.arcane_harmony&buff.arcane_harmony.stack<buff.arcane_harmony.max_stack&((buff.arcane_power.down&cooldown.arcane_power.ready)||debuff.touch_of_the_magi.up),chain=1\nactions.fishing_opener+=/deathborne,if=conduit.gift_of_the_lich\nactions.fishing_opener+=/rune_of_power,if=runeforge.siphon_storm\nactions.fishing_opener+=/arcane_orb,if=cooldown.rune_of_power.ready\nactions.fishing_opener+=/arcane_blast,if=cooldown.rune_of_power.ready&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.fishing_opener+=/mirrors_of_torment,if=time>=5+(1*set_bonus.tier28_4pc)\nactions.fishing_opener+=/use_item,name=moonlit_prism,if=time>6&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions.fishing_opener+=/rune_of_power\n# If we're at max stacks of CC and we haven't used MoT yet, use a stack to prevent munching unless running the Harmony legendary\nactions.fishing_opener+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack&covenant.venthyr&cooldown.mirrors_of_torment.ready&!variable.empowered_barrage&cooldown.arcane_power.ready\n# Normally we pair potion use with AP, but it will last long enough for both the RoP and AP windows unless running the SS or TW legendaries\nactions.fishing_opener+=/potion,if=!runeforge.temporal_warp&(!runeforge.siphon_storm||(variable.prepull_evo=1&buff.arcane_charge.stack=buff.arcane_charge.max_stack))\nactions.fishing_opener+=/deathborne,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/radiant_spark,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/mirrors_of_torment,if=buff.rune_of_power.remains<(6+2*runeforge.siphon_storm)\n# When running the Harmony legendary, use AP before TotM to dump a fully stacked barrage\nactions.fishing_opener+=/arcane_power,if=variable.empowered_barrage&buff.rune_of_power.up&(mana.pct<(25+(10*covenant.kyrian))||buff.clearcasting.stack=buff.clearcasting.max_stack)\nactions.fishing_opener+=/arcane_barrage,if=variable.empowered_barrage&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_power.up\nactions.fishing_opener+=/use_item,name=soulletting_ruby,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage||prev_gcd.1.radiant_spark||(prev_gcd.1.deathborne&!runeforge.siphon_storm)\nactions.fishing_opener+=/touch_of_the_magi,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage||prev_gcd.1.radiant_spark||(prev_gcd.1.deathborne&!runeforge.siphon_storm)\nactions.fishing_opener+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\n# Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.\nactions.fishing_opener+=/presence_of_mind,if=!talent.arcane_echo&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\n# If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.\nactions.fishing_opener+=/presence_of_mind,if=buff.arcane_power.up&buff.rune_of_power.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\nactions.fishing_opener+=/arcane_blast,if=dot.radiant_spark.remains>5||debuff.radiant_spark_vulnerability.stack>0\n# We want to make sure we have enough mana for the entire AP window, even if there's still time remaining on RoP. It's only better to burn to zero and Evo if running the SS or TW legendaries.\nactions.fishing_opener+=/arcane_barrage,if=cooldown.arcane_power.ready&mana.pct<(40+(10*covenant.kyrian))&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(!runeforge.siphon_storm||variable.prepull_evo=1)&!runeforge.temporal_warp&!runeforge.arcane_harmony\n# Barrage should not be used at the end of AP if Evocation is ready as dropping charges will make it take longer to burn through remaining mana\nactions.fishing_opener+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<=gcd&cooldown.evocation.remains\n# Barrage should always be the last cast in the RoP window as TotM will restore the charges spent\nactions.fishing_opener+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&!runeforge.arcane_harmony\nactions.fishing_opener+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\n# If we're venthyr, immediately use CC when capped to not waste procs from MoT\nactions.fishing_opener+=/arcane_missiles,if=covenant.venthyr&buff.clearcasting.stack=buff.clearcasting.max_stack\n# Start using CC AM when AP has been used\nactions.fishing_opener+=/arcane_missiles,if=buff.clearcasting.react&cooldown.arcane_power.remains&(buff.rune_of_power.up||buff.arcane_power.up),chain=1\nactions.fishing_opener+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.fishing_opener+=/arcane_blast,if=buff.rune_of_power.up||mana.pct>15\nactions.fishing_opener+=/evocation,if=buff.rune_of_power.down&buff.arcane_power.down,interrupt_if=mana.pct>=85,interrupt_immediate=1\nactions.fishing_opener+=/arcane_barrage\n\n## Unsupported cancel_action; Evocation will be naturally broken if conditions are met.\n## actions.harmony=cancel_action,if=action.evocation.channeling&mana.pct>=95\n# If low on mana and cooldowns are coming up, go ahead and evo\nactions.harmony+=/evocation,if=mana.pct<=30&variable.outside_of_cooldowns&(talent.rune_of_power&cooldown.rune_of_power.remains<10)\n# We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.\nactions.harmony+=/arcane_missiles,if=(variable.stack_harmony||time<10)&buff.arcane_harmony.stack<16&(active_enemies<variable.aoe_spark_target_count||variable.outside_of_cooldowns),chain=1\n# When using Empyreal Ordnance, cast a few extra missiles while waiting for the buff at the start of the fight\nactions.harmony+=/arcane_missiles,if=equipped.empyreal_ordnance&time<30&cooldown.empyreal_ordnance.remains>168&!action.empyreal_ordnance.disabled\nactions.harmony+=/use_item,name=soulletting_ruby,if=buff.arcane_power.up&target.distance<=10\nactions.harmony+=/use_item,name=soulletting_ruby,if=variable.empowered_barrage&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains<=(execute_time*2)&target.distance>10\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains<=(execute_time*2)&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5||(trinket.soulletting_ruby.cooldown.remains>110&target.distance>10)||(trinket.soulletting_ruby.cooldown.remains<=execute_time&target.distance<=10))\nactions.harmony+=/touch_of_the_magi,if=variable.just_used_spark&cooldown.arcane_power.remains<=execute_time&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5||(trinket.soulletting_ruby.cooldown.remains>110&target.distance>10)||(trinket.soulletting_ruby.cooldown.remains<=execute_time&target.distance<=10))\nactions.harmony+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.harmony+=/rune_of_power,if=variable.empowered_barrage&cooldown.radiant_spark.remains<=execute_time&variable.time_until_ap>=20&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns||cooldown.touch_of_the_magi.remains<=(execute_time*2))\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&prev_gcd.1.rune_of_power\nactions.harmony+=/touch_of_the_magi,if=variable.just_used_spark&!variable.holding_totm\n# Use 2nd arcane barrage in AP+ROP only if Bloodlust and at least 2 CCs procced\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.rune_of_power.up&buff.arcane_power.up&buff.arcane_harmony.stack>=16&buff.arcane_power.remains<=action.arcane_barrage.execute_time&buff.bloodlust.up\n# Use 2nd RoP in AP only if Bloodlust and 2 CCs proc\nactions.harmony+=/rune_of_power,if=buff.rune_of_power.down&buff.bloodlust.up&(variable.time_until_ap>30||cooldown.radiant_spark.remains>12)&(buff.arcane_harmony.stack>=15||buff.clearcasting.stack>=1)&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\nactions.harmony+=/rune_of_power,if=buff.arcane_power.down&(variable.time_until_ap>30||cooldown.radiant_spark.remains>12)&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&(buff.arcane_charge.stack>=2||cooldown.arcane_orb.ready)&(!talent.rune_of_power||cooldown.rune_of_power.remains>5)&cooldown.arcane_power.remains_expected>=30&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\n# When running prodigy, use totm by itself in order to align it with ap\nactions.harmony+=/touch_of_the_magi,if=variable.time_until_ap<50&variable.time_until_ap>30&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5)\nactions.harmony+=/arcane_orb,if=variable.just_used_spark&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.harmony+=/arcane_orb,if=debuff.radiant_spark_vulnerability.stack=3&active_enemies>=variable.aoe_spark_target_count\n# When doing the AoE spark sequence, you will use harmony stacks on the second spark stack to get a second barrage on the fourth\nactions.harmony+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=2&active_enemies>=variable.aoe_spark_target_count\n## When using Harmonic Echo, you do not want to queue Arcane Barrage during the Arcane Blast cast if there is more than one target\n## actions.harmony+=/wait,sec=0.04,if=debuff.radiant_spark_vulnerability.stack=1&prev_gcd.1.arcane_blast&active_enemies>=variable.aoe_spark_target_count,line_cd=25\n# When using Harmonic Echo, Arcane Blast should be used instead of Arcane Explosion for the first spark stack when doing the AoE spark sequence\nactions.harmony+=/arcane_blast,if=debuff.radiant_spark_vulnerability.stack=1&runeforge.harmonic_echo&active_enemies>=variable.aoe_spark_target_count\nactions.harmony+=/arcane_explosion,if=debuff.radiant_spark_vulnerability.stack=1&active_enemies>=variable.aoe_spark_target_count\nactions.harmony+=/arcane_explosion,if=prev_gcd.2.radiant_spark&active_enemies>=variable.aoe_spark_target_count\n## When using Harmonic Echo, you do not want to queue Arcane Barrage during the Arcane Blast cast if there is more than one target\n## actions.harmony+=/wait,sec=0.04,if=debuff.radiant_spark_vulnerability.stack=(debuff.radiant_spark_vulnerability.max_stack-1)&runeforge.harmonic_echo&active_enemies>1,line_cd=25\nactions.harmony+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=debuff.radiant_spark_vulnerability.max_stack\nactions.harmony+=/arcane_blast,if=variable.just_used_spark||(debuff.radiant_spark_vulnerability.up&debuff.radiant_spark_vulnerability.stack<debuff.radiant_spark_vulnerability.max_stack)\n# Use mini Barrage between radiant sparks if under BL without delaying Radiant Spark ideally\nactions.harmony+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.bloodlust.up&cooldown.radiant_spark.remains<=10&buff.arcane_harmony.stack>=16\n# Use orb on cd unless ap is coming up soon\nactions.harmony+=/arcane_orb,if=buff.arcane_charge.stack<3&variable.time_until_ap>10&(cooldown.touch_of_the_magi.remains>5||!conduit.arcane_prodigy)\nactions.harmony+=/arcane_missiles,if=buff.clearcasting.react&buff.arcane_power.up,chain=1\n# If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window\nactions.harmony+=/arcane_barrage,if=buff.rune_of_power.up&buff.rune_of_power.remains<=action.arcane_missiles.execute_time&buff.arcane_power.up&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_harmony.stack&buff.power_infusion.up&buff.bloodlust.up\n# If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window, so we'll only use enough blasts initially to get to four charges\nactions.harmony+=/arcane_blast,if=buff.presence_of_mind.up&(buff.arcane_charge.stack<buff.arcane_charge.max_stack||!(buff.power_infusion.up&buff.bloodlust.up))&!(buff.arcane_charge.stack=0&buff.presence_of_mind.stack=1)\n# The best use of pom is to use it to quickly build charges during ap after they get dumped by the harmony barrage\nactions.harmony+=/presence_of_mind,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack&buff.arcane_power.up&active_enemies<variable.aoe_target_count\n# In AoE situations, CC AM is prioritized over other filler actions\nactions.harmony+=/arcane_missiles,if=buff.clearcasting.react&active_enemies>=variable.aoe_target_count,chain=1\n# In AoE situations, barrage at four charges regardless of harmony stacks\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&active_enemies>=variable.aoe_target_count\n# Use Arcane Explosion as the filler in AoE situations instead of building harmony stacks with Missiles\nactions.harmony+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack&active_enemies>=variable.aoe_target_count\n# We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.\nactions.harmony+=/arcane_missiles,if=buff.arcane_harmony.stack<16,chain=1,interrupt=1,interrupt_global=1\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&variable.empowered_barrage\nactions.harmony+=/evocation,if=mana.pct<15\n# Only use blast to build charges if we already have some from orb\nactions.harmony+=/arcane_blast,if=buff.arcane_charge.stack&buff.arcane_charge.stack<buff.arcane_charge.max_stack\n# Fill with am unless ap is coming up and we're low on mana\nactions.harmony+=/arcane_missiles,if=!(variable.time_until_ap<=10&mana.pct<30),chain=1,interrupt=1,interrupt_global=1\n# Profiles with low mastery, high haste, or both may not have enough mana to support how mana intensive radiant spark can be, so we'll use fire blast and frostbolt when low on mana\nactions.harmony+=/fire_blast\nactions.harmony+=/frostbolt\n\nactions.opener=fire_blast,if=runeforge.disciplinary_command&buff.disciplinary_command_frost.up\nactions.opener+=/frost_nova,if=runeforge.grisly_icicle&mana.pct>95\nactions.opener+=/use_item,name=soulletting_ruby\nactions.opener+=/deathborne\nactions.opener+=/radiant_spark,if=mana.pct>40\nactions.opener+=/rune_of_power,if=covenant.venthyr\nactions.opener+=/mirrors_of_torment\nactions.opener+=/shifting_power,if=buff.arcane_power.down&cooldown.arcane_power.remains\nactions.opener+=/arcane_orb,if=cooldown.arcane_power.ready&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.opener+=/arcane_blast,if=covenant.venthyr&cooldown.mirrors_of_torment.remains>84\nactions.opener+=/touch_of_the_magi\nactions.opener+=/arcane_power\nactions.opener+=/rune_of_power,if=buff.arcane_power.down\n# Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.\nactions.opener+=/presence_of_mind,if=!talent.arcane_echo&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\n# If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.\nactions.opener+=/presence_of_mind,if=buff.arcane_power.up&buff.rune_of_power.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\nactions.opener+=/arcane_blast,if=dot.radiant_spark.remains>5||debuff.radiant_spark_vulnerability.stack>0\n# Always Barrage at the end of AP when running the Arcane Harmony legendary\nactions.opener+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<gcd&runeforge.arcane_harmony\n# Always Barrage at the end of the RoP window when running the Arcane Harmony legendary\nactions.opener+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&runeforge.arcane_harmony\nactions.opener+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\nactions.opener+=/arcane_missiles,if=buff.clearcasting.stack=buff.clearcasting.max_stack&covenant.venthyr\nactions.opener+=/arcane_missiles,if=buff.clearcasting.react&cooldown.arcane_power.remains&(buff.rune_of_power.up||buff.arcane_power.up),chain=1\nactions.opener+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.opener+=/arcane_blast,if=buff.rune_of_power.up||mana.pct>15\nactions.opener+=/evocation,if=buff.rune_of_power.down&buff.arcane_power.down,interrupt_if=mana.pct>=85,interrupt_immediate=1\nactions.opener+=/arcane_barrage\n\n## actions.rotation=cancel_action,if=action.evocation.channeling&mana.pct>=95&(!runeforge.siphon_storm||buff.siphon_storm.stack=buff.siphon_storm.max_stack)\n# Use evo if we're low on mana and cooldowns are about to be up\nactions.rotation+=/arcane_barrage,if=set_bonus.tier28_2pc&covenant.venthyr&cooldown.rune_of_power.remains<=execute_time&cooldown.touch_of_the_magi.remains<3&(buff.arcane_charge.stack>variable.totm_max_charges&talent.rune_of_power&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&talent.rune_of_power&cooldown.rune_of_power.remains<=execute_time&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.totm_max_delay_for_rop)&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=debuff.radiant_spark_vulnerability.max_stack&(buff.arcane_power.down||buff.arcane_power.remains<=gcd)&(buff.rune_of_power.down||buff.rune_of_power.remains<=gcd)\nactions.rotation+=/arcane_blast,if=variable.just_used_spark||(debuff.radiant_spark_vulnerability.up&debuff.radiant_spark_vulnerability.stack<debuff.radiant_spark_vulnerability.max_stack)\nactions.rotation+=/arcane_blast,if=buff.presence_of_mind.up&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=action.arcane_blast.execute_time\nactions.rotation+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&(debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time||cooldown.presence_of_mind.remains||covenant.kyrian),chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\n# Consume the expanded potential buff asap to not lose potential procs\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.expanded_potential.up\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&(buff.arcane_power.up||buff.rune_of_power.up||debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time),chain=1\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack,chain=1\n# Always try to bank CC for cooldown windows but dump them if they're about to expire\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.remains<=((buff.clearcasting.stack*action.arcane_missiles.execute_time)+gcd.max),chain=1\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_power.down&debuff.touch_of_the_magi.down\nactions.rotation+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.rotation+=/supernova,if=variable.outside_of_cooldowns&mana.pct<=95\nactions.rotation+=/arcane_blast,if=buff.rule_of_threes.up&buff.arcane_charge.stack>3\n# Dump charges if we fall below the conserve mana threshold and evocation is still on cooldown\nactions.rotation+=/arcane_barrage,if=!runeforge.siphon_storm&variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains\nactions.rotation+=/arcane_barrage,if=runeforge.siphon_storm&variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains<30\n# Dump charges if orb is ready\nactions.rotation+=/arcane_barrage,if=variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains&(!runeforge.siphon_storm||buff.siphon_storm.remains<=18)\n# Arcane Barrage should generally be the last cast of the AP window\nactions.rotation+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(cooldown.evocation.remains||runeforge.arcane_harmony)\n# Arcane Barrage should generally be the last cast of the RoP window\nactions.rotation+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(cooldown.evocation.remains||runeforge.arcane_harmony)\n# Arcane Barrage should be the last cast of the TotM window if it is not used with RoP or AP\nactions.rotation+=/arcane_barrage,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack\n# When the target is in execute range and there is more than one enemy, use barrage as soon as you have enough charges to hit all enemies if the Arcane Bombardment legendary is equipped\nactions.rotation+=/arcane_barrage,if=variable.empowered_barrage&buff.arcane_charge.stack>=(active_enemies-1)&active_enemies>1&buff.deathborne.down\nactions.rotation+=/arcane_explosion,if=variable.empowered_barrage&buff.arcane_charge.stack<buff.arcane_charge.max_stack&active_enemies>1&buff.deathborne.down\nactions.rotation+=/arcane_blast\nactions.rotation+=/evocation,if=variable.outside_of_cooldowns\nactions.rotation+=/arcane_barrage\n\nactions.vaoe=rune_of_power,if=time<7\nactions.vaoe+=/arcane_orb,if=time<7\nactions.vaoe+=/arcane_explosion,if=time<7\nactions.vaoe+=/use_item,name=moonlit_prism,if=prev_gcd.1.mirrors_of_torment&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions.vaoe+=/evocation,if=cooldown.touch_of_the_magi.remains<=(action.evocation.execute_time+13)&cooldown.arcane_power.remains<=(action.evocation.execute_time+14)\nactions.vaoe+=/mirrors_of_torment,if=time>6&cooldown.touch_of_the_magi.remains<=9&buff.siphon_storm.up\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.siphon_storm.remains>20&!debuff.mirrors_of_torment.up\nactions.vaoe+=/arcane_blast,if=debuff.mirrors_of_torment.up&time<13\nactions.vaoe+=/arcane_blast,if=debuff.mirrors_of_torment.remains>=19&cooldown.touch_of_the_magi.remains\nactions.vaoe+=/rune_of_power,if=buff.arcane_power.down&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains>10\nactions.vaoe+=/touch_of_the_magi,if=time>=13&cooldown.arcane_power.remains<=execute_time\nactions.vaoe+=/touch_of_the_magi,if=time>30&prev_gcd.1.rune_of_power\nactions.vaoe+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.siphon_storm.remains>24&!debuff.touch_of_the_magi.down\nactions.vaoe+=/arcane_blast,if=cooldown.touch_of_the_magi.remains<=8&cooldown.rune_of_power.remains<=9&buff.arcane_charge.stack=buff.arcane_charge.max_stack&active_enemies<6-(1*set_bonus.tier28_2pc)\nactions.vaoe+=/arcane_missiles,if=active_enemies<9-(1*set_bonus.tier28_2pc)&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&active_enemies<6\nactions.vaoe+=/arcane_missiles,if=buff.clearcasting.react\nactions.vaoe+=/arcane_orb,if=buff.arcane_charge.stack=0&cooldown.arcane_power.remains>15\nactions.vaoe+=/arcane_barrage,if=time>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack&cooldown.touch_of_the_magi.remains&(buff.siphon_storm.remains<25||buff.siphon_storm.down&cooldown.touch_of_the_magi.remains>=11)\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&prev_gcd.1.arcane_barrage",
				},
				["Protection Paladin"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20210710,
					["author"] = "SimC",
					["desc"] = "Protection Paladin\nJuly 10, 2021\n\nChanges\n- Added Rebuke.\n- Remove Seraphim restrictions on multiple mitigation abilities.",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "rebuke",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldowns",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "mitigation",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "standard",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "holy_power.deficit = 0 & ( ( buff.avenging_wrath.up & ! talent.seraphim.enabled ) || buff.seraphim.up )",
								["action"] = "shield_of_the_righteous",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( buff.avenging_wrath.up & buff.avenging_wrath.remains < 4 & ! talent.seraphim.enabled ) || ( buff.seraphim.remains < 4 & buff.seraphim.up )",
								["action"] = "shield_of_the_righteous",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "holy_power.deficit > 0",
								["action"] = "hammer_of_wrath",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.seraphim.up & buff.seraphim.remains < 3",
								["action"] = "lights_judgment",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! consecration.up",
								["action"] = "consecration",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( cooldown.judgment.remains < gcd & cooldown.judgment.charges_fractional > 1 & cooldown_react ) || ! talent.crusaders_judgment.enabled",
								["action"] = "judgment",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react",
								["action"] = "avengers_shield",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react || ! talent.crusaders_judgment.enabled",
								["action"] = "judgment",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "! talent.seraphim.enabled || buff.seraphim.up",
								["action"] = "lights_judgment",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "blessed_hammer",
								["strikes"] = "3",
							}, -- [14]
							{
								["action"] = "hammer_of_the_righteous",
								["enabled"] = true,
							}, -- [15]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [16]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["action"] = "devotion_aura",
							}, -- [1]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "ashen_hallow",
								["enabled"] = true,
							}, -- [5]
						},
						["cooldowns"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up",
								["action"] = "fireblood",
							}, -- [1]
							{
								["action"] = "seraphim",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "avenging_wrath",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || cooldown.avenging_wrath.remains > 60",
								["action"] = "holy_avenger",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up",
								["action"] = "potion",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.down",
								["action"] = "ashen_hallow",
							}, -- [6]
							{
								["action"] = "vanquishers_hammer",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "holy_power.deficit > 0",
								["action"] = "divine_toll",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.seraphim.up || ! talent.seraphim.enabled",
								["action"] = "use_items",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.avengers_shield & cooldown.avengers_shield.remains",
								["action"] = "moment_of_glory",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "( ( cooldown.judgment.full_recharge_time > 4 || ( ! talent.crusaders_judgment.enabled & prev_gcd.1.judgment ) ) & cooldown.avengers_shield.remains > 4 & buff.seraphim.remains > 4 ) || ( buff.seraphim.remains < 4 )",
								["name"] = "grongs_primal_rage",
								["action"] = "grongs_primal_rage",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! buff.avenging_wrath.up & ( buff.seraphim.up || ! talent.seraphim.enabled )",
								["name"] = "merekthas_fang",
								["action"] = "merekthas_fang",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "razdunks_big_red_button",
								["action"] = "razdunks_big_red_button",
							}, -- [13]
						},
						["standard"] = {
							{
								["enabled"] = true,
								["criteria"] = "debuff.judgment.up",
								["action"] = "shield_of_the_righteous",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "holy_power = 5 || buff.holy_avenger.up || holy_power = 4 & talent.sanctified_wrath.enabled & buff.avenging_wrath.up",
								["action"] = "shield_of_the_righteous",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "charges = 2 || ! talent.crusaders_judgment.enabled",
								["action"] = "judgment",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["action"] = "hammer_of_wrath",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blessing_of_summer",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "blessing_of_autumn",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "blessing_of_winter",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "blessing_of_spring",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "avengers_shield",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "judgment",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["action"] = "vanquishers_hammer",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! consecration.up",
								["action"] = "consecration",
							}, -- [12]
							{
								["action"] = "divine_toll",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "charges = 3",
								["action"] = "blessed_hammer",
								["strikes"] = "2.4",
							}, -- [14]
							{
								["action"] = "ashen_hallow",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "charges = 2",
								["action"] = "hammer_of_the_righteous",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "blessed_hammer",
								["strikes"] = "2.4",
							}, -- [17]
							{
								["action"] = "hammer_of_the_righteous",
								["enabled"] = true,
							}, -- [18]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [21]
						},
						["mitigation"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.shield_of_the_righteous.down & ( holy_power.deficit = 0 || buff.divine_purpose.up )",
								["action"] = "shield_of_the_righteous",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.vanquishers_hammer.up",
								["action"] = "word_of_glory",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.shining_light_full.up & buff.shining_light_full.remains < gcd * 2 & health.pct < 80 & ! covenant.necrolord",
								["action"] = "word_of_glory",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( health.pct < 40 )",
								["action"] = "word_of_glory",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( incoming_damage_10000ms < health.max * 1.25 ) & health.pct < 55 & talent.righteous_protector.enabled",
								["action"] = "word_of_glory",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( incoming_damage_13000ms < health.max * 1.6 ) & health.pct < 55",
								["action"] = "word_of_glory",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( incoming_damage_6000ms < health.max * 0.7 ) & health.pct < 65 & talent.righteous_protector.enabled",
								["action"] = "word_of_glory",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( incoming_damage_9000ms < health.max * 1.2 ) & health.pct < 55",
								["action"] = "word_of_glory",
							}, -- [8]
							{
								["enabled"] = true,
								["description"] = "actions.mitigation+=/shield_of_the_righteous,if=buff.shield_of_the_righteous.down&(holy_power>2||buff.divine_purpose.up)",
								["criteria"] = "incoming_damage_2500ms > health.max * 0.4 & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
								["action"] = "guardian_of_ancient_kings",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.final_stand.enabled & incoming_damage_2500ms > health.max * 0.4 & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
								["action"] = "divine_shield",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "incoming_damage_2500ms > health.max * 0.4 & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
								["action"] = "ardent_defender",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "health.pct < 15",
								["action"] = "lay_on_hands",
							}, -- [12]
						},
					},
					["version"] = 20210710,
					["warnings"] = "Imported 5 action lists.\n",
					["profile"] = "# Protection Paladin\n# July 10, 2021\n\n# Changes\n# - Added Rebuke.\n# - Remove Seraphim restrictions on multiple mitigation abilities.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/devotion_aura\nactions.precombat+=/fleshcraft\nactions.precombat+=/consecration\nactions.precombat+=/lights_judgment\nactions.precombat+=/ashen_hallow\n\n# Executed every time the actor is available.\nactions=rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=mitigation\nactions+=/call_action_list,name=standard\n\nactions+=/shield_of_the_righteous,if=holy_power.deficit=0&((buff.avenging_wrath.up&!talent.seraphim.enabled)||buff.seraphim.up)\nactions+=/shield_of_the_righteous,if=(buff.avenging_wrath.up&buff.avenging_wrath.remains<4&!talent.seraphim.enabled)||(buff.seraphim.remains<4&buff.seraphim.up)\nactions+=/hammer_of_wrath,if=holy_power.deficit>0\nactions+=/lights_judgment,if=buff.seraphim.up&buff.seraphim.remains<3\nactions+=/consecration,if=!consecration.up\nactions+=/judgment,if=(cooldown.judgment.remains<gcd&cooldown.judgment.charges_fractional>1&cooldown_react)||!talent.crusaders_judgment.enabled\nactions+=/avengers_shield,if=cooldown_react\nactions+=/judgment,if=cooldown_react||!talent.crusaders_judgment.enabled\nactions+=/lights_judgment,if=!talent.seraphim.enabled||buff.seraphim.up\nactions+=/blessed_hammer,strikes=3\nactions+=/hammer_of_the_righteous\nactions+=/consecration\n\nactions.standard=shield_of_the_righteous,if=debuff.judgment.up\nactions.standard+=/shield_of_the_righteous,if=holy_power=5||buff.holy_avenger.up||holy_power=4&talent.sanctified_wrath.enabled&buff.avenging_wrath.up\nactions.standard+=/judgment,cycle_targets=1,if=charges=2||!talent.crusaders_judgment.enabled\nactions.standard+=/hammer_of_wrath\nactions.standard+=/blessing_of_summer\nactions.standard+=/blessing_of_autumn\nactions.standard+=/blessing_of_winter\nactions.standard+=/blessing_of_spring\nactions.standard+=/avengers_shield\nactions.standard+=/judgment,cycle_targets=1\nactions.standard+=/vanquishers_hammer\nactions.standard+=/consecration,if=!consecration.up\nactions.standard+=/divine_toll\nactions.standard+=/blessed_hammer,strikes=2.4,if=charges=3\nactions.standard+=/ashen_hallow\nactions.standard+=/hammer_of_the_righteous,if=charges=2\nactions.standard+=/blessed_hammer,strikes=2.4\nactions.standard+=/hammer_of_the_righteous\nactions.standard+=/lights_judgment\nactions.standard+=/arcane_torrent\nactions.standard+=/consecration\n\nactions.cooldowns=fireblood,if=buff.avenging_wrath.up\nactions.cooldowns+=/seraphim\nactions.cooldowns+=/avenging_wrath\nactions.cooldowns+=/holy_avenger,if=buff.avenging_wrath.up||cooldown.avenging_wrath.remains>60\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up\nactions.cooldowns+=/ashen_hallow,if=buff.avenging_wrath.down\nactions.cooldowns+=/vanquishers_hammer\nactions.cooldowns+=/divine_toll,if=holy_power.deficit>0\nactions.cooldowns+=/use_items,if=buff.seraphim.up||!talent.seraphim.enabled\nactions.cooldowns+=/moment_of_glory,if=prev_gcd.1.avengers_shield&cooldown.avengers_shield.remains\nactions.cooldowns+=/use_item,name=grongs_primal_rage,if=((cooldown.judgment.full_recharge_time>4||(!talent.crusaders_judgment.enabled&prev_gcd.1.judgment))&cooldown.avengers_shield.remains>4&buff.seraphim.remains>4)||(buff.seraphim.remains<4)\nactions.cooldowns+=/use_item,name=merekthas_fang,if=!buff.avenging_wrath.up&(buff.seraphim.up||!talent.seraphim.enabled)\nactions.cooldowns+=/use_item,name=razdunks_big_red_button\n\nactions.mitigation=shield_of_the_righteous,if=buff.shield_of_the_righteous.down&(holy_power.deficit=0||buff.divine_purpose.up)\nactions.mitigation+=/word_of_glory,if=buff.vanquishers_hammer.up\nactions.mitigation+=/word_of_glory,if=buff.shining_light_full.up&buff.shining_light_full.remains<gcd*2&health.pct<80&!covenant.necrolord\nactions.mitigation+=/word_of_glory,if=(health.pct<40)\nactions.mitigation+=/word_of_glory,if=(incoming_damage_10000ms<health.max*1.25)&health.pct<55&talent.righteous_protector.enabled\nactions.mitigation+=/word_of_glory,if=(incoming_damage_13000ms<health.max*1.6)&health.pct<55\nactions.mitigation+=/word_of_glory,if=(incoming_damage_6000ms<health.max*0.7)&health.pct<65&talent.righteous_protector.enabled\nactions.mitigation+=/word_of_glory,if=(incoming_damage_9000ms<health.max*1.2)&health.pct<55\n# actions.mitigation+=/shield_of_the_righteous,if=buff.shield_of_the_righteous.down&(holy_power>2||buff.divine_purpose.up)\nactions.mitigation+=/guardian_of_ancient_kings,if=incoming_damage_2500ms>health.max*0.4&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/divine_shield,if=talent.final_stand.enabled&incoming_damage_2500ms>health.max*0.4&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/ardent_defender,if=incoming_damage_2500ms>health.max*0.4&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/lay_on_hands,if=health.pct<15",
					["spec"] = 66,
				},
				["Balance"] = {
					["source"] = "https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
					["builtIn"] = true,
					["date"] = 20221203,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "solar_beam",
							}, -- [1]
							{
								["action"] = "soothe",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time < 1 & ( eclipse.any_next || eclipse.lunar_next )",
								["action"] = "wrath",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.starfall > 1",
								["var_name"] = "is_aoe",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.starfire > 1",
								["var_name"] = "is_cleave",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "6 / spell_haste + talent.natures_balance.enabled + talent.orbit_breaker.enabled * dot.moonfire.ticking * ( buff.orbit_breaker.stack > 25 ) * 40",
								["var_name"] = "passive_asp",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 15",
								["action"] = "berserking",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 25",
								["action"] = "potion",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["criteria"] = "variable.on_use_trinket != 1 & ! trinket.t2.ready_cooldown || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
								["slots"] = "trinket1",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "trinket2",
								["criteria"] = "variable.on_use_trinket != 2 & ! trinket.t1.ready_cooldown || variable.on_use_trinket = 2 & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
								["slots"] = "trinket2",
							}, -- [10]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "variable.is_aoe",
								["action"] = "run_action_list",
								["list_name"] = "aoe",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "st",
							}, -- [13]
						},
						["precombat"] = {
							{
								["action"] = "moonkin_form",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "mark_of_the_wild",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.celestial_alignment.enabled & ! talent.incarnation_chosen_of_elune.enabled",
								["var_name"] = "no_cd_talent",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.aetherial_kindling.rank = 2 & ! talent.power_of_goldrinn.enabled",
								["var_name"] = "fourpc_starfall_st",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "on_use_trinket",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "trinket.t1.has_use_buff & trinket.t1.cooldown.duration",
								["var_name"] = "on_use_trinket",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_use_buff & trinket.t2.cooldown.duration ) * 2",
								["var_name"] = "on_use_trinket",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( eclipse.any_next || eclipse.lunar_next )",
								["action"] = "wrath",
							}, -- [8]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["criteria"] = "refreshable & ( target.time_to_die - remains ) > 8 & astral_power.deficit > variable.passive_asp + 3",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["criteria"] = "refreshable & ( target.time_to_die - remains ) > 8 & astral_power.deficit > variable.passive_asp + 3",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.ca_inc.remains < 5 & ! buff.ca_inc.up & ( time_to_die > 10 - 5 * talent.orbital_strike.enabled || boss & fight_remains < 25 + 10 * talent.incarnation_chosen_of_elune.enabled )",
								["var_name"] = "cd_condition_aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_aoe & set_bonus.tier29_4pc & eclipse.any_next",
								["action"] = "wrath",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_aoe & talent.orbital_strike.enabled & astral_power.deficit < variable.passive_asp + 8 * spell_targets || astral_power.deficit < ( variable.passive_asp + 8 + 12 * ( buff.eclipse_lunar.remains < 4 || buff.eclipse_solar.remains < 4 ) )",
								["action"] = "starfall",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_aoe",
								["action"] = "celestial_alignment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_aoe",
								["action"] = "incarnation",
							}, -- [7]
							{
								["action"] = "warrior_of_elune",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "eclipse.any_next || buff.eclipse_lunar.up & buff.eclipse_lunar.remains < action.wrath.execute_time",
								["action"] = "wrath",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 8",
								["action"] = "fury_of_elune",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 40 & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "full_moon",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 20 & ( ! talent.fungal_growth.enabled || ! talent.waning_twilight.enabled || dot.fungal_growth.remains < 2 & fight_remains > 7 )",
								["action"] = "wild_mushroom",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( buff.gathering_starstuff.stack = 3 || buff.umbral_embrace.up ) & astral_power.deficit > variable.passive_asp + ( 8 * ( 1 + 0.4 * buff.warrior_of_elune.up ) )",
								["action"] = "starfire",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 55",
								["action"] = "astral_communion",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "stellar_flare",
								["criteria"] = "refreshable & ( target.time_to_die - remains - spell_targets.starfire ) > 8 & astral_power.deficit > variable.passive_asp + 8",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_die > 4 & ( buff.ca_inc.remains < 12 & buff.ca_inc.up || buff.starweavers_warp.up || talent.starlord.enabled & buff.starlord.stack < 3 )",
								["action"] = "starfall",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "astral_power < 50 & spell_targets.starfall < 3 + talent.elunes_guidance.enabled & ( buff.eclipse_lunar.remains > 4 || buff.eclipse_solar.remains > 4 )",
								["action"] = "convoke_the_spirits",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 10",
								["action"] = "new_moon",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 20 & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "half_moon",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.starweavers_weft.up",
								["action"] = "starsurge",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 20",
								["action"] = "force_of_nature",
							}, -- [21]
							{
								["action"] = "starfire",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "fallthru",
							}, -- [23]
						},
						["fallthru"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.is_aoe",
								["action"] = "starfall",
							}, -- [1]
							{
								["action"] = "starsurge",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["criteria"] = "dot.moonfire.remains > remains * 22 / 18",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["action"] = "moonfire",
								["enabled"] = true,
							}, -- [4]
						},
						["st"] = {
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["criteria"] = "refreshable & remains < 2",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["criteria"] = "refreshable & remains < 2",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "stellar_flare",
								["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + 8 & remains < 2",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.ca_inc.remains < 15 & ! buff.ca_inc.up & ( time_to_die > 15 || boss & fight_remains < 25 + 10 * talent.incarnation_chosen_of_elune.enabled )",
								["var_name"] = "cd_condition_st",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st & set_bonus.tier29_4pc & eclipse.any_next",
								["action"] = "wrath",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st & buff.touch_the_cosmos.up",
								["action"] = "starsurge",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st",
								["action"] = "celestial_alignment",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st",
								["action"] = "incarnation",
							}, -- [8]
							{
								["action"] = "warrior_of_elune",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "eclipse.any_next || buff.eclipse_lunar.up & buff.eclipse_lunar.remains < action.wrath.execute_time",
								["var_name"] = "enter_lunar",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.enter_lunar",
								["action"] = "wrath",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.ca_inc.remains > 4 || ( cooldown.ca_inc.remains > 30 || variable.no_cd_talent ) & ( buff.eclipse_lunar.remains > 4 || buff.eclipse_solar.remains > 4 )",
								["var_name"] = "convoke_condition",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "action.convoke_the_spirits.known & cooldown.convoke_the_spirits.ready & variable.convoke_condition",
								["action"] = "starsurge",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "variable.convoke_condition",
								["action"] = "convoke_the_spirits",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 55",
								["action"] = "astral_communion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 20",
								["action"] = "force_of_nature",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 8",
								["action"] = "fury_of_elune",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.starweavers_warp.up",
								["action"] = "starfall",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.starlord.enabled & buff.starlord.stack < 3 || talent.rattle_the_stars.enabled & buff.rattled_stars.up & buff.rattled_stars.remains < gcd.max",
								["action"] = "starsurge",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + 3",
								["cycle_targets"] = 1,
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + 3",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "stellar_flare",
								["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + 8",
								["cycle_targets"] = 1,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 10",
								["action"] = "new_moon",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 20 & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "half_moon",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 40 & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "full_moon",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.starweavers_weft.up || astral_power.deficit < variable.passive_asp + ( 8 * ( 1 + 0.5 * talent.soul_of_the_forest.enabled * buff.eclipse_solar.up ) ) || talent.astral_communion.enabled & cooldown.astral_communion.remains < 3 || boss & fight_remains < 5",
								["action"] = "starsurge",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "astral_power.deficit > variable.passive_asp + 5 & ( ! talent.fungal_growth.enabled || talent.stellar_flare.enabled || dot.fungal_growth.remains < 2 ) || boss & fight_remains < 10",
								["action"] = "wild_mushroom",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "eclipse.in_lunar || buff.warrior_of_elune.up & ( buff.eclipse_lunar.up || buff.umbral_embrace.react )",
								["action"] = "starfire",
							}, -- [28]
							{
								["action"] = "wrath",
								["enabled"] = true,
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "fallthru",
							}, -- [30]
						},
					},
					["version"] = 20221203,
					["warnings"] = "The import for 'default' required some automated changes.\nLine 6: Converted 'talent.natures_balance' to 'talent.natures_balance.enabled' (1x).\nLine 6: Converted 'talent.orbit_breaker' to 'talent.orbit_breaker.enabled' (1x).\nLine 6: Converted operations in '6%spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>25)*40' to '6/spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>25)*40'.\nLine 9: Converted 'trinket.2.ready_cooldown' to 'trinket.t2.ready_cooldown' (1x).\nLine 10: Converted 'trinket.1.ready_cooldown' to 'trinket.t1.ready_cooldown' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.celestial_alignment' to 'talent.celestial_alignment.enabled' (1x).\nLine 3: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 4: Converted 'talent.power_of_goldrinn' to 'talent.power_of_goldrinn.enabled' (1x).\nLine 6: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.orbital_strike' to 'talent.orbital_strike.enabled' (1x).\nLine 3: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 5: Converted 'talent.orbital_strike' to 'talent.orbital_strike.enabled' (1x).\nLine 12: Converted 'talent.fungal_growth' to 'talent.fungal_growth.enabled' (1x).\nLine 12: Converted 'talent.waning_twilight' to 'talent.waning_twilight.enabled' (1x).\nLine 16: Converted 'talent.starlord' to 'talent.starlord.enabled' (1x).\nLine 17: Converted 'talent.elunes_guidance' to 'talent.elunes_guidance.enabled' (1x).\n\nThe import for 'fallthru' required some automated changes.\nLine 3: Converted operations in 'dot.moonfire.remains>remains*22%18' to 'dot.moonfire.remains>remains*22/18'.\n\nThe import for 'st' required some automated changes.\nLine 4: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 19: Converted 'talent.starlord' to 'talent.starlord.enabled' (1x).\nLine 19: Converted 'talent.rattle_the_stars' to 'talent.rattle_the_stars.enabled' (1x).\nLine 26: Converted 'talent.soul_of_the_forest' to 'talent.soul_of_the_forest.enabled' (1x).\nLine 26: Converted 'talent.astral_communion' to 'talent.astral_communion.enabled' (1x).\nLine 27: Converted 'talent.fungal_growth' to 'talent.fungal_growth.enabled' (1x).\nLine 27: Converted 'talent.stellar_flare' to 'talent.stellar_flare.enabled' (1x).\n\nImported 5 action lists.\n",
					["spec"] = 102,
					["profile"] = "actions.precombat+=/moonkin_form\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/variable,name=no_cd_talent,value=!talent.celestial_alignment&!talent.incarnation_chosen_of_elune\nactions.precombat+=/variable,name=fourpc_starfall_st,value=talent.aetherial_kindling.rank=2&!talent.power_of_goldrinn\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=trinket.1.has_use_buff&trinket.1.cooldown.duration\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=(trinket.2.has_use_buff&trinket.2.cooldown.duration)*2\nactions.precombat+=/wrath,if=(eclipse.any_next||eclipse.lunar_next)\n\n# Executed every time the actor is available.\nactions+=/solar_beam\nactions+=/soothe\nactions+=/wrath,if=time<1&(eclipse.any_next||eclipse.lunar_next)\nactions=variable,name=is_aoe,value=spell_targets.starfall>1\nactions+=/variable,name=is_cleave,value=spell_targets.starfire>1\nactions+=/variable,name=passive_asp,value=6%spell_haste+talent.natures_balance+talent.orbit_breaker*dot.moonfire.ticking*(buff.orbit_breaker.stack>25)*40\nactions+=/berserking,if=buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<15\nactions+=/potion,if=buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<25\nactions+=/use_items,slots=trinket1,if=variable.on_use_trinket!=1&!trinket.2.ready_cooldown||(variable.on_use_trinket=1||variable.on_use_trinket=3)&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items,slots=trinket2,if=variable.on_use_trinket!=2&!trinket.1.ready_cooldown||variable.on_use_trinket=2&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items\nactions+=/run_action_list,name=aoe,if=variable.is_aoe\nactions+=/run_action_list,name=st\n\nactions.aoe=sunfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>8&astral_power.deficit>variable.passive_asp+3\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>8&astral_power.deficit>variable.passive_asp+3\nactions.aoe+=/variable,name=cd_condition_aoe,value=cooldown.ca_inc.remains<5&!buff.ca_inc.up&(target.1.time_to_die>10-5*talent.orbital_strike||boss&fight_remains<25+10*talent.incarnation_chosen_of_elune)\nactions.aoe+=/wrath,if=variable.cd_condition_aoe&set_bonus.tier29_4pc&eclipse.any_next\nactions.aoe+=/starfall,if=variable.cd_condition_aoe&talent.orbital_strike&astral_power.deficit<variable.passive_asp+8*spell_targets||astral_power.deficit<(variable.passive_asp+8+12*(buff.eclipse_lunar.remains<4||buff.eclipse_solar.remains<4))\nactions.aoe+=/celestial_alignment,if=variable.cd_condition_aoe\nactions.aoe+=/incarnation,if=variable.cd_condition_aoe\nactions.aoe+=/warrior_of_elune\nactions.aoe+=/wrath,if=eclipse.any_next||buff.eclipse_lunar.up&buff.eclipse_lunar.remains<action.wrath.execute_time\nactions.aoe+=/fury_of_elune,if=astral_power.deficit>variable.passive_asp+8\nactions.aoe+=/full_moon,if=astral_power.deficit>variable.passive_asp+40&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.aoe+=/wild_mushroom,if=astral_power.deficit>variable.passive_asp+20&(!talent.fungal_growth||!talent.waning_twilight||dot.fungal_growth.remains<2&fight_remains>7)\nactions.aoe+=/starfire,if=(buff.gathering_starstuff.stack=3||buff.umbral_embrace.up)&astral_power.deficit>variable.passive_asp+(8*(1+0.4*buff.warrior_of_elune.up))\nactions.aoe+=/astral_communion,if=astral_power.deficit>variable.passive_asp+55\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-spell_targets.starfire)>8&astral_power.deficit>variable.passive_asp+8\nactions.aoe+=/starfall,if=target.time_to_die>4&(buff.ca_inc.remains<12&buff.ca_inc.up||buff.starweavers_warp.up||talent.starlord&buff.starlord.stack<3)\nactions.aoe+=/convoke_the_spirits,if=astral_power<50&spell_targets.starfall<3+talent.elunes_guidance&(buff.eclipse_lunar.remains>4||buff.eclipse_solar.remains>4)\nactions.aoe+=/new_moon,if=astral_power.deficit>variable.passive_asp+10\nactions.aoe+=/half_moon,if=astral_power.deficit>variable.passive_asp+20&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up\nactions.aoe+=/force_of_nature,if=astral_power.deficit>variable.passive_asp+20\nactions.aoe+=/starfire\nactions.aoe+=/run_action_list,name=fallthru\n\nactions.fallthru=starfall,if=variable.is_aoe\nactions.fallthru+=/starsurge\nactions.fallthru+=/sunfire,cycle_targets=1,if=dot.moonfire.remains>remains*22%18\nactions.fallthru+=/moonfire\n\nactions.st=sunfire,cycle_targets=1,if=refreshable&remains<2\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&remains<2\nactions.st+=/stellar_flare,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+8&remains<2\nactions.st+=/variable,name=cd_condition_st,value=cooldown.ca_inc.remains<15&!buff.ca_inc.up&(target.1.time_to_die>15||boss&fight_remains<25+10*talent.incarnation_chosen_of_elune)\nactions.st+=/wrath,if=variable.cd_condition_st&set_bonus.tier29_4pc&eclipse.any_next\nactions.st+=/starsurge,if=variable.cd_condition_st&buff.touch_the_cosmos.up\nactions.st+=/celestial_alignment,if=variable.cd_condition_st\nactions.st+=/incarnation,if=variable.cd_condition_st\nactions.st+=/warrior_of_elune\nactions.st+=/variable,name=enter_lunar,value=eclipse.any_next||buff.eclipse_lunar.up&buff.eclipse_lunar.remains<action.wrath.execute_time\nactions.st+=/wrath,if=variable.enter_lunar\nactions.st+=/variable,name=convoke_condition,value=buff.ca_inc.remains>4||(cooldown.ca_inc.remains>30||variable.no_cd_talent)&(buff.eclipse_lunar.remains>4||buff.eclipse_solar.remains>4)\nactions.st+=/starsurge,if=action.convoke_the_spirits.known&cooldown.convoke_the_spirits.ready&variable.convoke_condition\nactions.st+=/convoke_the_spirits,if=variable.convoke_condition\nactions.st+=/astral_communion,if=astral_power.deficit>variable.passive_asp+55\nactions.st+=/force_of_nature,if=astral_power.deficit>variable.passive_asp+20\nactions.st+=/fury_of_elune,if=astral_power.deficit>variable.passive_asp+8\nactions.st+=/starfall,if=buff.starweavers_warp.up\nactions.st+=/starsurge,if=talent.starlord&buff.starlord.stack<3||talent.rattle_the_stars&buff.rattled_stars.up&buff.rattled_stars.remains<gcd.max\nactions.st+=/sunfire,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+3\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+3\nactions.st+=/stellar_flare,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+8\nactions.st+=/new_moon,if=astral_power.deficit>variable.passive_asp+10\nactions.st+=/half_moon,if=astral_power.deficit>variable.passive_asp+20&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.st+=/full_moon,if=astral_power.deficit>variable.passive_asp+40&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.st+=/starsurge,if=buff.starweavers_weft.up||astral_power.deficit<variable.passive_asp+(8*(1+0.5*talent.soul_of_the_forest*buff.eclipse_solar.up))||talent.astral_communion&cooldown.astral_communion.remains<3||boss&fight_remains<5\nactions.st+=/wild_mushroom,if=astral_power.deficit>variable.passive_asp+5&(!talent.fungal_growth||talent.stellar_flare||dot.fungal_growth.remains<2)||boss&fight_remains<10\nactions.st+=/starfire,if=eclipse.in_lunar||buff.warrior_of_elune.up&(buff.eclipse_lunar.up||buff.umbral_embrace.react)\nactions.st+=/wrath\nactions.st+=/run_action_list,name=fallthru",
				},
				["Protection Warrior"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["spec"] = 73,
					["desc"] = "",
					["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/use_item,name=algethar_puzzle_box\n\n# Executed every time the actor is available.\nactions+=/pummel\nactions+=/spell_reflection\nactions+=/shield_charge,if=time=0\nactions+=/charge,if=time=0\nactions+=/use_items\nactions+=/avatar\n# Usage of Shield Wall is governed by specialization settings; see /hekili > Protection.\nactions+=/shield_wall,if=buff.avatar.down||!talent.immovable_object\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled),use_off_gcd=1\n# Usage of Last Stand is also governed by specialization settings; see /hekili > Protection.\nactions+=/last_stand,if=talent.unnerving_focus&(target.health.pct>=90||target.health.pct<=20)||talent.bolster&buff.shield_block.down||!talent.bolster&!talent.unnerving_focus\n# Usage of Rallying Cry is governed by specialization settings; see /hekili > Protection.\nactions+=/rallying_cry\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/spear_of_bastion\nactions+=/thunderous_roar\nactions+=/shockwave,if=talent.sonic_boom.enabled&buff.avatar.up&talent.unstoppable_force.enabled&!talent.rumbling_earth.enabled\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.duration<=18&talent.enduring_defenses.enabled||buff.shield_block.duration<=12\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1&talent.blood_and_thunder&talent.rend\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>5&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=4\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic=shield_slam\nactions.generic+=/thunder_clap,if=dot.rend.remains<=1&buff.violent_outburst.down\nactions.generic+=/execute,if=buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/revenge,if=buff.vanguards_determination.down\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=60&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=60&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute,if=spell_targets.revenge=1\nactions.generic+=/revenge\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
					["version"] = 20221218,
					["warnings"] = "The import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 1: Converted 'talent.rend' to 'talent.rend.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 7: Converted 'talent.immovable_object' to 'talent.immovable_object.enabled' (1x).\nLine 17: Converted 'talent.unnerving_focus' to 'talent.unnerving_focus.enabled' (1x).\nLine 17: Converted 'talent.bolster' to 'talent.bolster.enabled' (1x).\nLine 17: Converted 'talent.bolster' to 'talent.bolster.enabled' (1x).\nLine 17: Converted 'talent.unnerving_focus' to 'talent.unnerving_focus.enabled' (1x).\n\nImported 4 action lists.\n",
					["author"] = "SimulationCraft",
					["lists"] = {
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.rend.remains <= 1 & talent.blood_and_thunder.enabled & talent.rend.enabled",
								["action"] = "thunder_clap",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap > 5 & buff.avatar.up & talent.unstoppable_force.enabled",
								["action"] = "thunder_clap",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
								["action"] = "revenge",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 4",
								["action"] = "shield_slam",
							}, -- [4]
							{
								["action"] = "thunder_clap",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
								["action"] = "revenge",
							}, -- [6]
						},
						["generic"] = {
							{
								["action"] = "shield_slam",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.rend.remains <= 1 & buff.violent_outburst.down",
								["action"] = "thunder_clap",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.sudden_death.up & talent.sudden_death.enabled",
								["action"] = "execute",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.vanguards_determination.down",
								["action"] = "revenge",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
								["action"] = "thunder_clap",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( rage >= 60 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 60 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
								["action"] = "revenge",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.revenge = 1",
								["action"] = "execute",
							}, -- [7]
							{
								["action"] = "revenge",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
								["action"] = "thunder_clap",
							}, -- [9]
							{
								["action"] = "devastate",
								["enabled"] = true,
							}, -- [10]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "pummel",
							}, -- [1]
							{
								["action"] = "spell_reflection",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time = 0",
								["action"] = "shield_charge",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "time = 0",
								["action"] = "charge",
							}, -- [4]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "avatar",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Usage of Shield Wall is governed by specialization settings, see /hekili > Protection.",
								["criteria"] = "buff.avatar.down || ! talent.immovable_object.enabled",
								["action"] = "shield_wall",
							}, -- [7]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
								["action"] = "potion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled )",
								["action"] = "ignore_pain",
								["use_off_gcd"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["description"] = "Usage of Last Stand is also governed by specialization settings, see /hekili > Protection.",
								["criteria"] = "talent.unnerving_focus.enabled & ( target.health.pct >= 90 || target.health.pct <= 20 ) || talent.bolster.enabled & buff.shield_block.down || ! talent.bolster.enabled & ! talent.unnerving_focus.enabled",
								["action"] = "last_stand",
							}, -- [17]
							{
								["enabled"] = true,
								["description"] = "Usage of Rallying Cry is governed by specialization settings, see /hekili > Protection.",
								["action"] = "rallying_cry",
							}, -- [18]
							{
								["action"] = "ravager",
								["enabled"] = true,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "talent.booming_voice.enabled",
								["action"] = "demoralizing_shout",
							}, -- [20]
							{
								["action"] = "spear_of_bastion",
								["enabled"] = true,
							}, -- [21]
							{
								["action"] = "thunderous_roar",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.sonic_boom.enabled & buff.avatar.up & talent.unstoppable_force.enabled & ! talent.rumbling_earth.enabled",
								["action"] = "shockwave",
							}, -- [23]
							{
								["action"] = "shield_charge",
								["enabled"] = true,
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.shield_block.duration <= 18 & talent.enduring_defenses.enabled || buff.shield_block.duration <= 12",
								["action"] = "shield_block",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "spell_targets.thunder_clap >= 3",
								["list_name"] = "aoe",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "generic",
							}, -- [27]
						},
						["precombat"] = {
							{
								["action"] = "battle_shout",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "algethar_puzzle_box",
								["action"] = "algethar_puzzle_box",
							}, -- [2]
						},
					},
				},
				["Survival"] = {
					["source"] = "# https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221205,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["default"] = {
							{
								["action"] = "muzzle",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "tranquilizing_shot",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "mb_rs_cost",
								["criteria"] = "talent.mongoose_bite.enabled",
								["value_else"] = "action.raptor_strike.cost",
								["value"] = "action.mongoose_bite.cost",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 3",
								["action"] = "call_action_list",
								["list_name"] = "st",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2",
								["action"] = "call_action_list",
								["list_name"] = "cleave",
							}, -- [6]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [7]
						},
						["cleave"] = {
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max",
								["action"] = "wildfire_bomb",
							}, -- [1]
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "stampede",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "coordinated_assault",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault_empower.up",
								["action"] = "kill_shot",
							}, -- [5]
							{
								["action"] = "explosive_shot",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.wildfire_bomb.full_recharge_time > spell_targets / 2",
								["action"] = "carve",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max",
								["action"] = "butchery",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! dot.wildfire_bomb.ticking",
								["action"] = "wildfire_bomb",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "dot.shrapnel_bomb.ticking & ( dot.internal_bleeding.stack < 2 || dot.shrapnel_bomb.remains < gcd.max )",
								["action"] = "butchery",
							}, -- [10]
							{
								["action"] = "fury_of_the_eagle",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "dot.shrapnel_bomb.ticking",
								["action"] = "carve",
							}, -- [12]
							{
								["action"] = "flanking_strike",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "( ! next_wi_bomb.shrapnel || ! talent.wildfire_infusion.enabled ) & cooldown.wildfire_bomb.full_recharge_time > spell_targets / 2",
								["action"] = "butchery",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "mongoose_bite",
								["criteria"] = "debuff.latent_poison.stack > 8",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "raptor_strike",
								["criteria"] = "debuff.latent_poison.stack > 8",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "kill_command",
								["criteria"] = "full_recharge_time < gcd.max",
								["cycle_targets"] = 1,
							}, -- [17]
							{
								["action"] = "carve",
								["enabled"] = true,
							}, -- [18]
							{
								["action"] = "kill_shot",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & target.time_to_die > 12 & ( ! talent.vipers_venom.enabled || talent.hydras_bite.enabled )",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "mongoose_bite",
								["cycle_targets"] = 1,
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "raptor_strike",
								["cycle_targets"] = 1,
							}, -- [23]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.terms_of_engagement.enabled",
								["action"] = "harpoon",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
								["action"] = "blood_fury",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
								["action"] = "ancestral_call",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
								["action"] = "fireblood",
							}, -- [4]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.kill_command.full_recharge_time > gcd.max",
								["action"] = "bag_of_tricks",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled || time_to_die < 13",
								["action"] = "berserking",
							}, -- [7]
							{
								["action"] = "muzzle",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_die < 30 || buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
								["action"] = "potion",
							}, -- [9]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "target.distance >= 6",
								["action"] = "aspect_of_the_eagle",
							}, -- [11]
						},
						["st"] = {
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.death_chakram.remains || ! talent.death_chakram.enabled",
								["action"] = "spearhead",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.coordinated_assault_empower.up",
								["action"] = "kill_shot",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "kill_command",
								["criteria"] = "full_recharge_time < gcd.max & buff.deadly_duo.stack > 1",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.spearhead.remains",
								["action"] = "mongoose_bite",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & target.time_to_die < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max || buff.mongoose_fury.up & buff.mongoose_fury.remains < gcd.max",
								["action"] = "mongoose_bite",
							}, -- [6]
							{
								["action"] = "kill_shot",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & target.time_to_die < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max",
								["action"] = "raptor_strike",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "! dot.serpent_sting.ticking & target.time_to_die > 7 & ! talent.vipers_venom.enabled",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.alpha_predator.enabled & buff.mongoose_fury.up & buff.mongoose_fury.remains < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max",
								["action"] = "mongoose_bite",
							}, -- [10]
							{
								["action"] = "flanking_strike",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! talent.coordinated_kill.enabled & target.health.pct < 20 & ( ! buff.spearhead.remains & cooldown.spearhead.remains || ! talent.spearhead.enabled ) || talent.coordinated_kill.enabled & ( ! buff.spearhead.remains & cooldown.spearhead.remains || ! talent.spearhead.enabled )",
								["action"] = "coordinated_assault",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "next_wi_bomb.pheromone & ! buff.mongoose_fury.up",
								["action"] = "wildfire_bomb",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "kill_command",
								["criteria"] = "full_recharge_time < gcd.max",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.shrapnel_bomb.ticking",
								["action"] = "mongoose_bite",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & ! talent.vipers_venom.enabled",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max & ! set_bonus.tier29_2pc",
								["action"] = "wildfire_bomb",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "mongoose_bite",
								["criteria"] = "buff.mongoose_fury.up",
								["cycle_targets"] = 1,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.ranger.enabled",
								["action"] = "explosive_shot",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "full_recharge_time < gcd.max",
								["action"] = "wildfire_bomb",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "mongoose_bite",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["action"] = "stampede",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "raptor_strike",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "! dot.wildfire_bomb.ticking",
								["action"] = "wildfire_bomb",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "kill_command",
								["cycle_targets"] = 1,
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "! talent.coordinated_kill.enabled & time_to_die > 140",
								["action"] = "coordinated_assault",
							}, -- [27]
							{
								["interrupt"] = "1",
								["action"] = "fury_of_the_eagle",
								["enabled"] = true,
							}, -- [28]
						},
						["precombat"] = {
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["precast_time"] = "20",
								["action"] = "steel_trap",
							}, -- [2]
						},
					},
					["version"] = 20221205,
					["warnings"] = "The import for 'default' required some automated changes.\nLine 4: Converted 'talent.mongoose_bite' to 'talent.mongoose_bite.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 2: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 2: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 3: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 3: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 4: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 4: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 7: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 7: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 9: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 9: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.death_chakram' to 'talent.death_chakram.enabled' (1x).\nLine 6: Converted operations in 'active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd.max||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd.max' to 'active_enemies=1&target.time_to_die<focus/(variable.mb_rs_cost-cast_regen)*gcd.max||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd.max'.\nLine 8: Converted operations in 'active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd.max' to 'active_enemies=1&target.time_to_die<focus/(variable.mb_rs_cost-cast_regen)*gcd.max'.\nLine 9: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 10: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 10: Converted operations in 'talent.alpha_predator.enabled&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd.max' to 'talent.alpha_predator.enabled&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus/(variable.mb_rs_cost-cast_regen)*gcd.max'.\nLine 12: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\nLine 12: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 12: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\nLine 12: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 16: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 19: Converted 'talent.ranger' to 'talent.ranger.enabled' (1x).\nLine 27: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 7: Converted operations in 'cooldown.wildfire_bomb.full_recharge_time>spell_targets%2' to 'cooldown.wildfire_bomb.full_recharge_time>spell_targets/2'.\nLine 14: Converted 'talent.wildfire_infusion' to 'talent.wildfire_infusion.enabled' (1x).\nLine 14: Converted operations in '(!next_wi_bomb.shrapnel||!talent.wildfire_infusion.enabled)&cooldown.wildfire_bomb.full_recharge_time>spell_targets%2' to '(!next_wi_bomb.shrapnel||!talent.wildfire_infusion.enabled)&cooldown.wildfire_bomb.full_recharge_time>spell_targets/2'.\nLine 21: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 21: Converted 'talent.hydras_bite' to 'talent.hydras_bite.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "actions.precombat+=/summon_pet\nactions.precombat+=/steel_trap,precast_time=20\n\nactions+=/muzzle\nactions+=/tranquilizing_shot\nactions+=/call_action_list,name=cds\nactions+=/variable,name=mb_rs_cost,op=setif,value=action.mongoose_bite.cost,value_else=action.raptor_strike.cost,condition=talent.mongoose_bite\nactions+=/call_action_list,name=st,if=active_enemies<3\nactions+=/call_action_list,name=cleave,if=active_enemies>2\nactions+=/arcane_torrent\n\nactions.cds+=/harpoon,if=talent.terms_of_engagement.enabled\nactions.cds+=/blood_fury,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/ancestral_call,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/fireblood,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/lights_judgment\nactions.cds+=/bag_of_tricks,if=cooldown.kill_command.full_recharge_time>gcd\nactions.cds+=/berserking,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault||time_to_die<13\nactions.cds+=/muzzle\nactions.cds+=/potion,if=target.time_to_die<30||buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/use_items\nactions.cds+=/aspect_of_the_eagle,if=target.distance>=6\n\nactions.cleave+=/wildfire_bomb,if=full_recharge_time<gcd\nactions.cleave+=/death_chakram\nactions.cleave+=/stampede\nactions.cleave+=/coordinated_assault\nactions.cleave+=/kill_shot,if=buff.coordinated_assault_empower.up\nactions.cleave+=/explosive_shot\nactions.cleave+=/carve,if=cooldown.wildfire_bomb.full_recharge_time>spell_targets%2\nactions.cleave+=/butchery,if=full_recharge_time<gcd\nactions.cleave+=/wildfire_bomb,if=!dot.wildfire_bomb.ticking\nactions.cleave+=/butchery,if=dot.shrapnel_bomb.ticking&(dot.internal_bleeding.stack<2||dot.shrapnel_bomb.remains<gcd)\nactions.cleave+=/fury_of_the_eagle\nactions.cleave+=/carve,if=dot.shrapnel_bomb.ticking\nactions.cleave+=/flanking_strike\nactions.cleave+=/butchery,if=(!next_wi_bomb.shrapnel||!talent.wildfire_infusion)&cooldown.wildfire_bomb.full_recharge_time>spell_targets%2\nactions.cleave+=/mongoose_bite,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/raptor_strike,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd\nactions.cleave+=/carve\nactions.cleave+=/kill_shot\nactions.cleave+=/steel_trap\nactions.cleave+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>12&(!talent.vipers_venom||talent.hydras_bite)\nactions.cleave+=/mongoose_bite,cycle_targets=1\nactions.cleave+=/raptor_strike,cycle_targets=1\n\nactions.st+=/death_chakram\nactions.st+=/spearhead,if=cooldown.death_chakram.remains||!talent.death_chakram\nactions.st+=/kill_shot,if=buff.coordinated_assault_empower.up\nactions.st+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd&buff.deadly_duo.stack>1\nactions.st+=/mongoose_bite,if=buff.spearhead.remains\nactions.st+=/mongoose_bite,if=active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd\nactions.st+=/kill_shot\nactions.st+=/raptor_strike,if=active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd\nactions.st+=/serpent_sting,cycle_targets=1,if=!dot.serpent_sting.ticking&target.time_to_die>7&!talent.vipers_venom\nactions.st+=/mongoose_bite,if=talent.alpha_predator&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd\nactions.st+=/flanking_strike\nactions.st+=/coordinated_assault,if=!talent.coordinated_kill&target.health.pct<20&(!buff.spearhead.remains&cooldown.spearhead.remains||!talent.spearhead)||talent.coordinated_kill&(!buff.spearhead.remains&cooldown.spearhead.remains||!talent.spearhead)\nactions.st+=/wildfire_bomb,if=next_wi_bomb.pheromone&!buff.mongoose_fury.up\nactions.st+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd\nactions.st+=/mongoose_bite,if=dot.shrapnel_bomb.ticking\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&!talent.vipers_venom\nactions.st+=/wildfire_bomb,if=full_recharge_time<gcd&!set_bonus.tier29_2pc\nactions.st+=/mongoose_bite,cycle_targets=1,if=buff.mongoose_fury.up\nactions.st+=/explosive_shot,if=talent.ranger\nactions.st+=/wildfire_bomb,if=full_recharge_time<gcd\nactions.st+=/mongoose_bite,cycle_targets=1\nactions.st+=/stampede\nactions.st+=/raptor_strike,cycle_targets=1\nactions.st+=/steel_trap\nactions.st+=/wildfire_bomb,if=!dot.wildfire_bomb.ticking\nactions.st+=/kill_command,cycle_targets=1\nactions.st+=/coordinated_assault,if=!talent.coordinated_kill&time_to_die>140\nactions.st+=/fury_of_the_eagle,interrupt=1",
					["spec"] = 255,
				},
				["Arms"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["author"] = "SimulationCraft",
					["desc"] = "",
					["lists"] = {
						["single_target"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.whirlwind > 1",
								["action"] = "sweeping_strikes",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "remains <= gcd.max || talent.tide_of_blood.enabled & cooldown.skullsplitter.remains <= gcd.max & ( cooldown.colossus_smash.remains <= gcd.max || debuff.colossus_smash.up ) & dot.rend.remains < duration * 0.85",
								["action"] = "rend",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.warlords_torment.enabled & rage.pct < 33 & ( cooldown.colossus_smash.ready || debuff.colossus_smash.up || buff.test_of_might.up ) || ! talent.warlords_torment.enabled & ( cooldown.colossus_smash.ready || debuff.colossus_smash.up )",
								["action"] = "avatar",
							}, -- [3]
							{
								["action"] = "warbreaker",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "colossus_smash",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up",
								["action"] = "thunderous_roar",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up",
								["action"] = "spear_of_bastion",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.hurricane.enabled & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up ) || talent.unhinged.enabled & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up )",
								["action"] = "bladestorm",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.tide_of_blood.enabled & dot.rend.remains & ( debuff.colossus_smash.up || cooldown.colossus_smash.remains > gcd.max * 4 & buff.test_of_might.up || ! talent.test_of_might.enabled & cooldown.colossus_smash.remains > gcd.max * 4 ) || rage < 30",
								["action"] = "skullsplitter",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "dot.deep_wounds.remains <= gcd.max || debuff.executioners_precision.stack = 2",
								["action"] = "mortal_strike",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.sudden_death.react",
								["action"] = "execute",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.sonic_boom.enabled",
								["action"] = "shockwave",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "charges = 2 & ( debuff.colossus_smash.down || rage.pct < 25 )",
								["action"] = "overpower",
							}, -- [13]
							{
								["action"] = "mortal_strike",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "remains < duration * 0.3",
								["action"] = "rend",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.storm_of_swords.enabled || talent.fervor_of_battle.enabled & active_enemies > 1",
								["action"] = "whirlwind",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "debuff.colossus_smash.down & rage.pct < 50 || rage.pct < 25",
								["action"] = "overpower",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.merciless_bonegrinder.up",
								["action"] = "whirlwind",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier29_2pc & ! talent.crushing_force.enabled",
								["action"] = "cleave",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "rage > 30 & ! talent.fervor_of_battle.enabled",
								["action"] = "slam",
							}, -- [20]
							{
								["action"] = "wrecking_throw",
								["enabled"] = true,
							}, -- [21]
						},
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "time <= 0.5 || movement.distance > 5",
								["action"] = "charge",
							}, -- [1]
							{
								["action"] = "pummel",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
								["action"] = "potion",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "target.debuff.casting.react",
								["action"] = "pummel",
							}, -- [4]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "raid_event.adds.exists || active_enemies > 2",
								["list_name"] = "hac",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["cycle_targets"] = 1,
								["strict"] = 1,
								["criteria"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
								["list_name"] = "execute",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "! raid_event.adds.exists",
								["list_name"] = "single_target",
							}, -- [8]
						},
						["precombat"] = {
							{
								["toggle"] = "on",
								["action"] = "berserker_stance",
								["enabled"] = true,
							}, -- [1]
							{
								["toggle"] = "on",
								["action"] = "battle_stance",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "algethar_puzzle_box",
								["action"] = "algethar_puzzle_box",
							}, -- [3]
						},
						["execute"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.whirlwind > 1",
								["action"] = "sweeping_strikes",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "remains <= gcd.max & ( ! talent.warbreaker.enabled & cooldown.colossus_smash.remains < 4 || talent.warbreaker.enabled & cooldown.warbreaker.remains < 4 ) & target.time_to_die > 12",
								["action"] = "rend",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.colossus_smash.ready || debuff.colossus_smash.up || boss & fight_remains < 20",
								["action"] = "avatar",
							}, -- [3]
							{
								["action"] = "warbreaker",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "colossus_smash",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up",
								["action"] = "thunderous_roar",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "debuff.colossus_smash.up || buff.test_of_might.up",
								["action"] = "spear_of_bastion",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "rage < 40",
								["action"] = "skullsplitter",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.whirlwind > 2 & dot.deep_wounds.remains < gcd.max",
								["action"] = "cleave",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "debuff.executioners_precision.stack = 2 || dot.deep_wounds.remains <= gcd.max",
								["action"] = "mortal_strike",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "remains < duration * 0.3 & debuff.colossus_smash.down",
								["action"] = "rend",
							}, -- [11]
							{
								["action"] = "execute",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.sonic_boom.enabled",
								["action"] = "shockwave",
							}, -- [13]
							{
								["action"] = "overpower",
								["enabled"] = true,
							}, -- [14]
							{
								["action"] = "bladestorm",
								["enabled"] = true,
							}, -- [15]
						},
						["hac"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.juggernaut.up & buff.juggernaut.remains < gcd.max",
								["action"] = "execute",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & ( cooldown.bladestorm.remains > 15 || ! talent.bladestorm.enabled )",
								["action"] = "sweeping_strikes",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.thunder_clap.enabled & talent.blood_and_thunder.enabled & talent.rend.enabled & dot.rend.remains <= duration * 0.3",
								["action"] = "thunder_clap",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & remains <= gcd.max & ( target.health.pct > 20 || talent.massacre.enabled & target.health.pct > 35 ) || talent.tide_of_blood.enabled & cooldown.skullsplitter.remains <= gcd.max & ( cooldown.colossus_smash.remains <= gcd.max || debuff.colossus_smash.up ) & dot.rend.remains < duration * 0.85",
								["action"] = "rend",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15 || talent.blademasters_torment.enabled & active_enemies > 1 || boss & fight_remains < 20",
								["action"] = "avatar",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 22 || active_enemies > 1",
								["action"] = "warbreaker",
							}, -- [6]
							{
								["action"] = "colossus_smash",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up ) & raid_event.adds.in > 15 || active_enemies > 1 & dot.deep_wounds.remains",
								["action"] = "thunderous_roar",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up ) & raid_event.adds.in > 15",
								["action"] = "spear_of_bastion",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.unhinged.enabled & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up )",
								["action"] = "bladestorm",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up ) & raid_event.adds.in > 30 || active_enemies > 1 & dot.deep_wounds.remains",
								["action"] = "bladestorm",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 || buff.merciless_bonegrinder.up & cooldown.mortal_strike.remains > gcd.max",
								["action"] = "cleave",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 || talent.storm_of_swords.enabled & ( buff.merciless_bonegrinder.up || buff.hurricane.up )",
								["action"] = "whirlwind",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "rage < 40 || talent.tide_of_blood.enabled & dot.rend.remains & ( buff.sweeping_strikes.up & active_enemies >= 2 || debuff.colossus_smash.up || buff.test_of_might.up )",
								["action"] = "skullsplitter",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "debuff.executioners_precision.stack = 2 || dot.deep_wounds.remains <= gcd.max || talent.dreadnaught.enabled & talent.battlelord.enabled & active_enemies <= 2 & rage.pct > 70",
								["action"] = "mortal_strike",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.sudden_death.react || active_enemies <= 2 & ( target.health.pct < 20 || talent.massacre.enabled & target.health.pct < 35 ) || buff.sweeping_strikes.up",
								["action"] = "execute",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15",
								["action"] = "thunderous_roar",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.sonic_boom.enabled",
								["action"] = "shockwave",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.storm_of_swords.enabled & talent.dreadnaught.enabled & talent.battlelord.enabled & rage.pct > 70",
								["action"] = "whirlwind",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & talent.crushing_force.enabled & talent.dreadnaught.enabled & talent.battlelord.enabled & rage.pct > 70",
								["action"] = "slam",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "charges = 2 & ( ! talent.test_of_might.enabled || talent.test_of_might.enabled & debuff.colossus_smash.down || talent.battlelord.enabled ) || rage < 70",
								["action"] = "overpower",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2",
								["action"] = "thunder_clap",
							}, -- [22]
							{
								["action"] = "mortal_strike",
								["enabled"] = true,
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & dot.rend.remains < duration * 0.3",
								["action"] = "rend",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.storm_of_swords.enabled || talent.fervor_of_battle.enabled & active_enemies > 1",
								["action"] = "whirlwind",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "! talent.crushing_force.enabled",
								["action"] = "cleave",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.crushing_force.enabled & rage > 30 & ! talent.fervor_of_battle.enabled",
								["action"] = "slam",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "talent.sonic_boom.enabled",
								["action"] = "shockwave",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 30",
								["action"] = "bladestorm",
							}, -- [29]
							{
								["action"] = "wrecking_throw",
								["enabled"] = true,
							}, -- [30]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'single_target' required some automated changes.\nLine 2: Converted 'talent.tide_of_blood' to 'talent.tide_of_blood.enabled' (1x).\nLine 3: Converted 'talent.warlords_torment' to 'talent.warlords_torment.enabled' (1x).\nLine 3: Converted 'talent.warlords_torment' to 'talent.warlords_torment.enabled' (1x).\nLine 6: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 7: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 8: Converted 'talent.hurricane' to 'talent.hurricane.enabled' (1x).\nLine 8: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 8: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 8: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 9: Converted 'talent.tide_of_blood' to 'talent.tide_of_blood.enabled' (1x).\nLine 9: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 16: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 16: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 19: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\nLine 20: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nThe import for 'execute' required some automated changes.\nLine 2: Converted 'talent.warbreaker' to 'talent.warbreaker.enabled' (1x).\nLine 2: Converted 'talent.warbreaker' to 'talent.warbreaker.enabled' (1x).\nLine 6: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 13: Converted 'talent.sonic_boom' to 'talent.sonic_boom.enabled' (1x).\n\nThe import for 'hac' required some automated changes.\nLine 2: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 3: Converted 'talent.thunder_clap' to 'talent.thunder_clap.enabled' (1x).\nLine 3: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 3: Converted 'talent.rend' to 'talent.rend.enabled' (1x).\nLine 4: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 4: Converted 'talent.tide_of_blood' to 'talent.tide_of_blood.enabled' (1x).\nLine 5: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 8: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 9: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 10: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 10: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 11: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 13: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 14: Converted 'talent.tide_of_blood' to 'talent.tide_of_blood.enabled' (1x).\nLine 15: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 15: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 16: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 18: Converted 'talent.sonic_boom' to 'talent.sonic_boom.enabled' (1x).\nLine 19: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 19: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 19: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 20: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\nLine 20: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 20: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 21: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 21: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 21: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 25: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 25: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 26: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\nLine 27: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\nLine 27: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 28: Converted 'talent.sonic_boom' to 'talent.sonic_boom.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "actions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/use_item,name=algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/pummel\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/use_items\nactions+=/run_action_list,name=hac,strict=1,if=raid_event.adds.exists||active_enemies>2\nactions+=/call_action_list,name=execute,cycle_targets=1,strict=1,if=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions+=/run_action_list,name=single_target,strict=1,if=!raid_event.adds.exists\n\nactions.execute+=/sweeping_strikes,if=spell_targets.whirlwind>1\nactions.execute+=/rend,if=remains<=gcd&(!talent.warbreaker&cooldown.colossus_smash.remains<4||talent.warbreaker&cooldown.warbreaker.remains<4)&target.time_to_die>12\nactions.execute+=/avatar,if=cooldown.colossus_smash.ready||debuff.colossus_smash.up||boss&fight_remains<20\nactions.execute+=/warbreaker\nactions.execute+=/colossus_smash\nactions.execute+=/thunderous_roar,if=buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up\nactions.execute+=/spear_of_bastion,if=debuff.colossus_smash.up||buff.test_of_might.up\nactions.execute+=/skullsplitter,if=rage<40\nactions.execute+=/cleave,if=spell_targets.whirlwind>2&dot.deep_wounds.remains<gcd\nactions.execute+=/mortal_strike,if=debuff.executioners_precision.stack=2||dot.deep_wounds.remains<=gcd\nactions.execute+=/rend,if=remains<duration*0.3&debuff.colossus_smash.down\nactions.execute+=/execute\nactions.execute+=/shockwave,if=talent.sonic_boom\nactions.execute+=/overpower\nactions.execute+=/bladestorm\n\nactions.hac+=/execute,if=buff.juggernaut.up&buff.juggernaut.remains<gcd\nactions.hac+=/sweeping_strikes,if=active_enemies>=2&(cooldown.bladestorm.remains>15||!talent.bladestorm)\nactions.hac+=/thunder_clap,if=active_enemies>2&talent.thunder_clap&talent.blood_and_thunder&talent.rend&dot.rend.remains<=duration*0.3\nactions.hac+=/rend,if=active_enemies=1&remains<=gcd&(target.health.pct>20||talent.massacre&target.health.pct>35)||talent.tide_of_blood&cooldown.skullsplitter.remains<=gcd&(cooldown.colossus_smash.remains<=gcd||debuff.colossus_smash.up)&dot.rend.remains<duration*0.85\nactions.hac+=/avatar,if=raid_event.adds.in>15||talent.blademasters_torment&active_enemies>1||boss&fight_remains<20\nactions.hac+=/warbreaker,if=raid_event.adds.in>22||active_enemies>1\nactions.hac+=/colossus_smash\nactions.hac+=/thunderous_roar,if=(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)&raid_event.adds.in>15||active_enemies>1&dot.deep_wounds.remains\nactions.hac+=/spear_of_bastion,if=(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)&raid_event.adds.in>15\nactions.hac+=/bladestorm,if=talent.unhinged&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)\nactions.hac+=/bladestorm,if=active_enemies>1&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)&raid_event.adds.in>30||active_enemies>1&dot.deep_wounds.remains\nactions.hac+=/cleave,if=active_enemies>2||buff.merciless_bonegrinder.up&cooldown.mortal_strike.remains>gcd\nactions.hac+=/whirlwind,if=active_enemies>2||talent.storm_of_swords&(buff.merciless_bonegrinder.up||buff.hurricane.up)\nactions.hac+=/skullsplitter,if=rage<40||talent.tide_of_blood&dot.rend.remains&(buff.sweeping_strikes.up&active_enemies>=2||debuff.colossus_smash.up||buff.test_of_might.up)\nactions.hac+=/mortal_strike,if=debuff.executioners_precision.stack=2||dot.deep_wounds.remains<=gcd||talent.dreadnaught&talent.battlelord&active_enemies<=2&rage.pct>70\nactions.hac+=/execute,if=buff.sudden_death.react||active_enemies<=2&(target.health.pct<20||talent.massacre&target.health.pct<35)||buff.sweeping_strikes.up\nactions.hac+=/thunderous_roar,if=raid_event.adds.in>15\nactions.hac+=/shockwave,if=active_enemies>2&talent.sonic_boom\nactions.hac+=/whirlwind,if=talent.storm_of_swords&talent.dreadnaught&talent.battlelord&rage.pct>70\nactions.hac+=/slam,if=active_enemies=1&talent.crushing_force&talent.dreadnaught&talent.battlelord&rage.pct>70\nactions.hac+=/overpower,if=charges=2&(!talent.test_of_might||talent.test_of_might&debuff.colossus_smash.down||talent.battlelord)||rage<70\nactions.hac+=/thunder_clap,if=active_enemies>2\nactions.hac+=/mortal_strike\nactions.hac+=/rend,if=active_enemies=1&dot.rend.remains<duration*0.3\nactions.hac+=/whirlwind,if=talent.storm_of_swords||talent.fervor_of_battle&active_enemies>1\nactions.hac+=/cleave,if=!talent.crushing_force\nactions.hac+=/slam,if=talent.crushing_force&rage>30&!talent.fervor_of_battle\nactions.hac+=/shockwave,if=talent.sonic_boom\nactions.hac+=/bladestorm,if=raid_event.adds.in>30\nactions.hac+=/wrecking_throw\n\nactions.single_target+=/sweeping_strikes,if=spell_targets.whirlwind>1\nactions.single_target+=/rend,if=remains<=gcd||talent.tide_of_blood&cooldown.skullsplitter.remains<=gcd&(cooldown.colossus_smash.remains<=gcd||debuff.colossus_smash.up)&dot.rend.remains<duration*0.85\nactions.single_target+=/avatar,if=talent.warlords_torment&rage.pct<33&(cooldown.colossus_smash.ready||debuff.colossus_smash.up||buff.test_of_might.up)||!talent.warlords_torment&(cooldown.colossus_smash.ready||debuff.colossus_smash.up)\nactions.single_target+=/warbreaker\nactions.single_target+=/colossus_smash\nactions.single_target+=/thunderous_roar,if=buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up\nactions.single_target+=/spear_of_bastion,if=buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up\nactions.single_target+=/bladestorm,if=talent.hurricane&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)||talent.unhinged&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)\nactions.single_target+=/skullsplitter,if=talent.tide_of_blood&dot.rend.remains&(debuff.colossus_smash.up||cooldown.colossus_smash.remains>gcd*4&buff.test_of_might.up||!talent.test_of_might&cooldown.colossus_smash.remains>gcd*4)||rage<30\nactions.single_target+=/mortal_strike,if=dot.deep_wounds.remains<=gcd||debuff.executioners_precision.stack=2\nactions.single_target+=/execute,if=buff.sudden_death.react\nactions.single_target+=/shockwave,if=talent.sonic_boom.enabled\nactions.single_target+=/overpower,if=charges=2&(debuff.colossus_smash.down||rage.pct<25)\nactions.single_target+=/mortal_strike\nactions.single_target+=/rend,if=remains<duration*0.3\nactions.single_target+=/whirlwind,if=talent.storm_of_swords||talent.fervor_of_battle&active_enemies>1\nactions.single_target+=/overpower,if=debuff.colossus_smash.down&rage.pct<50||rage.pct<25\nactions.single_target+=/whirlwind,if=buff.merciless_bonegrinder.up\nactions.single_target+=/cleave,if=set_bonus.tier29_2pc&!talent.crushing_force\nactions.single_target+=/slam,if=rage>30&!talent.fervor_of_battle\nactions.single_target+=/wrecking_throw",
					["spec"] = 71,
				},
				["Outlaw"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["finish"] = {
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_die > 3 & ( debuff.between_the_eyes.remains < 4 || talent.greenskins_wickers.enabled & ! buff.greenskins_wickers.up || ! talent.greenskins_wickers.enabled & buff.ruthless_precision.up )",
								["action"] = "between_the_eyes",
								["description"] = "Finishers  BtE to keep the Crit debuff up, if RP is up, or for Greenskins, unless the target is about to die.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.slice_and_dice.remains < fight_remains & refreshable & ( ! talent.swift_slasher.enabled || combo_points >= cp_max_spend )",
								["action"] = "slice_and_dice",
							}, -- [2]
							{
								["action"] = "cold_blood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "dispatch",
								["enabled"] = true,
							}, -- [4]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Restealth if possible (no vulnerable enemies in combat)",
								["action"] = "stealth",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Interrupt on cooldown to allow simming interactions with that",
								["action"] = "kick",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.count_the_odds.enabled & ( stealthed.basic || buff.shadowmeld.up || buff.shadow_dance.up )",
								["var_name"] = "stealthed_cto",
								["description"] = "Checks if we are in an appropriate Stealth state for triggering the Count the Odds bonus",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "rtb_buffs < 2 & ( ! buff.broadside.up & ( ! talent.fan_the_hammer.enabled || ! buff.skull_and_crossbones.up ) & ! buff.true_bearing.up || buff.loaded_dice.up ) || rtb_buffs = 2 & ( buff.buried_treasure.up & buff.grand_melee.up || ! buff.broadside.up & ! buff.true_bearing.up & buff.loaded_dice.up )",
								["var_name"] = "rtb_reroll",
								["description"] = "Roll the Bones Reroll Conditions",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( rtb_buffs_normal = 0 & rtb_buffs_longer >= 1 ) & ! ( buff.broadside.up & buff.true_bearing.up & buff.skull_and_crossbones.up ) & ! ( buff.broadside.remains > 39 || buff.true_bearing.remains > 39 || buff.ruthless_precision.remains > 39 || buff.skull_and_crossbones.remains > 39 )",
								["var_name"] = "rtb_reroll_kir_cto",
								["criteria"] = "talent.keep_it_rolling.enabled || talent.count_the_odds.enabled",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up & energy >= 50 & ( ! talent.count_the_odds.enabled || buff.roll_the_bones.remains >= 10 )",
								["var_name"] = "ambush_condition",
								["description"] = "Ensure we get full Ambush CP gains and aren't rerolling Count the Odds buffs away",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "combo_points >= cp_max_spend - buff.broadside.up - ( buff.opportunity.up * ( talent.quick_draw.enabled || talent.fan_the_hammer.enabled ) ) || effective_combo_points >= cp_max_spend",
								["var_name"] = "finish_condition",
								["description"] = "Finish at max possible CP without overflowing bonus combo points, unless for BtE which always should be 5+ CP",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "reset",
								["action"] = "variable",
								["var_name"] = "finish_condition",
								["description"] = "Always attempt to use BtE at 5+ CP, regardless of CP gen waste",
								["criteria"] = "cooldown.between_the_eyes.ready & effective_combo_points < 5",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.blade_flurry < 2 & raid_event.adds.in > 20 || buff.blade_flurry.remains > 1 + talent.killing_spree.enabled",
								["var_name"] = "blade_flurry_sync",
								["description"] = "With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Higher priority Stealth list for Count the Odds or true Stealth/Vanish that will break in a single global",
								["criteria"] = "stealthed.basic || buff.shadowmeld.up",
								["list_name"] = "stealth",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Lower priority Stealth list for Shadow Dance",
								["criteria"] = "variable.stealthed_cto",
								["list_name"] = "stealth",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "variable.finish_condition",
								["list_name"] = "finish",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "build",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "energy.base_deficit >= 15 + energy.regen",
								["action"] = "arcane_torrent",
							}, -- [15]
							{
								["action"] = "arcane_pulse",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [18]
						},
						["precombat"] = {
							{
								["action"] = "apply_poison",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "bottled_flayedwing_toxin",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "stealth",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 25",
								["action"] = "marked_for_death",
								["precombat_seconds"] = "10",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.improved_adrenaline_rush.enabled",
								["action"] = "adrenaline_rush",
								["precombat_seconds"] = "3",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "remains < 3",
								["action"] = "roll_the_bones",
								["precombat_seconds"] = "2",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "slice_and_dice",
								["precombat_seconds"] = "1",
							}, -- [7]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets >= 2 & ! buff.blade_flurry.up",
								["action"] = "blade_flurry",
								["description"] = "Cooldowns  Blade Flurry on 2+ enemies",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.dreadblades.down & ( rtb_buffs = 0 || variable.rtb_reroll || variable.rtb_reroll_kir_cto )",
								["action"] = "roll_the_bones",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.rtb_reroll & ( buff.broadside.up + buff.true_bearing.up + buff.skull_and_crossbones.up + buff.ruthless_precision.up ) > 2 & ( buff.shadow_dance.down || rtb_buffs >= 6 )",
								["action"] = "keep_it_rolling",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! stealthed.all || talent.count_the_odds.enabled & ! variable.stealthed_cto",
								["list_name"] = "stealth_cds",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! buff.adrenaline_rush.up & ( ! talent.improved_adrenaline_rush.enabled || combo_points <= 2 )",
								["action"] = "adrenaline_rush",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! stealthed.all & combo_points <= 2 & ( ! talent.marked_for_death.enabled || ! cooldown.marked_for_death.ready ) & target.time_to_die >= 10",
								["action"] = "dreadblades",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "marked_for_death",
								["line_cd"] = "1.5",
								["description"] = "If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or without any CP.",
								["criteria"] = "raid_event.adds.up & ( target.time_to_die < combo_points.deficit || combo_points.deficit >= cp_max_spend - 1 ) & ! buff.dreadblades.up",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 30 - raid_event.adds.duration & combo_points.deficit >= cp_max_spend - 1 & ! buff.dreadblades.up",
								["action"] = "marked_for_death",
								["description"] = "If no adds will die within the next 30s, use MfD on boss without any CP.",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! buff.thistle_tea.up & ( energy.base_deficit >= 100 || fight_remains < charges * 6 )",
								["action"] = "thistle_tea",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_flurry_sync & ! stealthed.rogue & debuff.between_the_eyes.up & energy.base_time_to_max > 4",
								["action"] = "killing_spree",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_flurry_sync & ! buff.dreadblades.up & ! buff.shadow_dance.up & energy.base_time_to_max > 4 & target.time_to_die > 4",
								["action"] = "blade_rush",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! stealthed.all & ( talent.count_the_odds.enabled & variable.finish_condition || ! talent.weaponmaster.enabled & variable.ambush_condition )",
								["action"] = "shadowmeld",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.bloodlust.react || fight_remains < 30 || buff.adrenaline_rush.up",
								["action"] = "potion",
							}, -- [13]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [14]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [15]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "manic_grieftorch",
								["action"] = "manic_grieftorch",
								["criteria"] = "! stealthed.all & ! buff.adrenaline_rush.up || fight_remains < 5",
								["description"] = "Default conditions for usable items.",
							}, -- [18]
							{
								["enabled"] = true,
								["slots"] = "trinket1",
								["action"] = "trinket1",
								["criteria"] = "debuff.between_the_eyes.up || trinket.t1.has_stat.any_dps || fight_remains <= 20",
							}, -- [19]
							{
								["enabled"] = true,
								["slots"] = "trinket2",
								["action"] = "trinket2",
								["criteria"] = "debuff.between_the_eyes.up || trinket.t2.has_stat.any_dps || fight_remains <= 20",
							}, -- [20]
						},
						["stealth"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.subterfuge.enabled & talent.hidden_opportunity.enabled & spell_targets >= 2 & ! buff.blade_flurry.up",
								["action"] = "blade_flurry",
								["description"] = "Stealth",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.finish_condition",
								["action"] = "cold_blood",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.finish_condition",
								["action"] = "dispatch",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.stealthed_cto || stealthed.basic & ( settings.ambush_anyway || talent.find_weakness.enabled & ! debuff.find_weakness.up || talent.hidden_opportunity.enabled )",
								["action"] = "ambush",
							}, -- [4]
						},
						["stealth_cds"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.hidden_opportunity.enabled || ! talent.shadow_dance.enabled || ! cooldown.shadow_dance.ready",
								["var_name"] = "vanish_condition",
								["description"] = "Stealth Cooldowns",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.shadow_dance.enabled & talent.fan_the_hammer.rank + talent.quick_draw.enabled + talent.audacity.enabled < talent.count_the_odds.enabled + talent.keep_it_rolling.enabled",
								["var_name"] = "vanish_opportunity_condition",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.find_weakness.enabled & ! talent.audacity.enabled & debuff.find_weakness.down & variable.ambush_condition & variable.vanish_condition",
								["action"] = "vanish",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.hidden_opportunity.enabled & ! buff.audacity.up & ( variable.vanish_opportunity_condition || buff.opportunity.stack < buff.opportunity.max_stack ) & variable.ambush_condition & variable.vanish_condition",
								["action"] = "vanish",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.find_weakness.enabled || talent.audacity.enabled ) & ! talent.hidden_opportunity.enabled & variable.finish_condition & variable.vanish_condition",
								["action"] = "vanish",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.shadow_dance.enabled & debuff.between_the_eyes.up & ( ! talent.ghostly_strike.enabled || debuff.ghostly_strike.up ) & ( ! talent.dreadblades.enabled || ! cooldown.dreadblades.ready ) & ( ! talent.hidden_opportunity.enabled || ! buff.audacity.up & ( talent.fan_the_hammer.rank < 2 || ! buff.opportunity.up ) )",
								["var_name"] = "shadow_dance_condition",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.keep_it_rolling.enabled & variable.shadow_dance_condition & buff.slice_and_dice.up & ( variable.finish_condition || talent.hidden_opportunity.enabled ) & ( ! talent.hidden_opportunity.enabled || ! cooldown.vanish.ready )",
								["action"] = "shadow_dance",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.keep_it_rolling.enabled & variable.shadow_dance_condition & ( cooldown.keep_it_rolling.remains <= 30 || cooldown.keep_it_rolling.remains > 120 & ( variable.finish_condition || talent.hidden_opportunity.enabled ) )",
								["action"] = "shadow_dance",
							}, -- [8]
						},
						["build"] = {
							{
								["enabled"] = true,
								["action"] = "sepsis",
								["cycle_targets"] = 1,
								["description"] = "Builders",
								["criteria"] = "target.time_to_die > 11 & debuff.between_the_eyes.up || fight_remains < 11",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "debuff.ghostly_strike.remains <= 3 & ( spell_targets.blade_flurry <= 2 || buff.dreadblades.up ) & ! buff.subterfuge.up & target.time_to_die >= 5",
								["action"] = "ghostly_strike",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dreadblades.up",
								["action"] = "echoing_reprimand",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "settings.ambush_anyway || talent.hidden_opportunity.enabled & buff.audacity.up || talent.find_weakness.enabled & debuff.find_weakness.down",
								["action"] = "ambush",
								["description"] = "High priority Ambush line to apply Find Weakness or consume HO+Audacity buff before Pistol Shot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up & ! buff.subterfuge.up & ! buff.shadow_dance.up",
								["action"] = "pistol_shot",
								["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, use Pistol Shot to proc Audacity any time Ambush is not available",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.greenskins_wickers.up & ( ! talent.fan_the_hammer.enabled & buff.opportunity.up || buff.greenskins_wickers.remains < 1.5 )",
								["action"] = "pistol_shot",
								["description"] = "Use Greenskins Wickers buff immediately with Opportunity unless running Fan the Hammer",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
								["action"] = "pistol_shot",
								["description"] = "With Fan the Hammer, consume Opportunity at max stacks or if we will get max 4+ CP and Dreadblades is not up",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & combo_points.deficit > ( ( 1 + talent.quick_draw.enabled ) * talent.fan_the_hammer.rank ) & ! buff.dreadblades.up & ( ! talent.hidden_opportunity.enabled || ! buff.subterfuge.up & ! buff.shadow_dance.up )",
								["action"] = "pistol_shot",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "settings.ambush_anyway || talent.hidden_opportunity.enabled || talent.find_weakness.enabled & debuff.find_weakness.down",
								["action"] = "ambush",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || ! talent.weaponmaster.enabled & combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
								["action"] = "pistol_shot",
								["description"] = "Use Pistol Shot with Opportunity if Combat Potency won't overcap energy, when it will exactly cap CP, or when using Quick Draw",
							}, -- [10]
							{
								["action"] = "sinister_strike",
								["enabled"] = true,
							}, -- [11]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'stealth' required some automated changes.\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.find_weakness' to 'talent.find_weakness.enabled' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 4: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 5: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 6: Converted 'talent.improved_ambush' to 'talent.improved_ambush.enabled' (1x).\nLine 6: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 7: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 7: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 5: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\n\nThe import for 'finish' required some automated changes.\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 2: Converted 'talent.swift_slasher' to 'talent.swift_slasher.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 4: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 5: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 6: Converted 'talent.marked_for_death' to 'talent.marked_for_death.enabled' (1x).\nLine 12: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 19: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 20: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 1: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 2: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 2: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 2: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 2: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 2: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 3: Converted 'talent.find_weakness' to 'talent.find_weakness.enabled' (1x).\nLine 3: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.find_weakness' to 'talent.find_weakness.enabled' (1x).\nLine 5: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 6: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 6: Converted 'talent.ghostly_strike' to 'talent.ghostly_strike.enabled' (1x).\nLine 6: Converted 'talent.dreadblades' to 'talent.dreadblades.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 7: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 8: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.find_weakness' to 'talent.find_weakness.enabled' (1x).\nLine 5: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 6: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 7: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 8: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 8: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 9: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 9: Converted 'talent.find_weakness' to 'talent.find_weakness.enabled' (1x).\nLine 10: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 10: Converted 'talent.weaponmaster' to 'talent.weaponmaster.enabled' (1x).\n\nImported 7 action lists.\n",
					["profile"] = "actions.precombat+=/apply_poison\nactions.precombat+=/bottled_flayedwing_toxin\nactions.precombat+=/stealth\nactions.precombat+=/marked_for_death,precombat_seconds=10,if=raid_event.adds.in>25\nactions.precombat+=/adrenaline_rush,precombat_seconds=3,if=talent.improved_adrenaline_rush\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=remains<3\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Checks if we are in an appropriate Stealth state for triggering the Count the Odds bonus\nactions+=/variable,name=stealthed_cto,value=talent.count_the_odds&(stealthed.basic||buff.shadowmeld.up||buff.shadow_dance.up)\n# Roll the Bones Reroll Conditions\nactions+=/variable,name=rtb_reroll,value=rtb_buffs<2&(!buff.broadside.up&(!talent.fan_the_hammer||!buff.skull_and_crossbones.up)&!buff.true_bearing.up||buff.loaded_dice.up)||rtb_buffs=2&(buff.buried_treasure.up&buff.grand_melee.up||!buff.broadside.up&!buff.true_bearing.up&buff.loaded_dice.up)\nactions+=/variable,name=rtb_reroll_kir_cto,if=talent.keep_it_rolling||talent.count_the_odds,value=(rtb_buffs_normal=0&rtb_buffs_longer>=1)&!(buff.broadside.up&buff.true_bearing.up&buff.skull_and_crossbones.up)&!(buff.broadside.remains>39||buff.true_bearing.remains>39||buff.ruthless_precision.remains>39||buff.skull_and_crossbones.remains>39)\n# Ensure we get full Ambush CP gains and aren't rerolling Count the Odds buffs away\nactions+=/variable,name=ambush_condition,value=combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up&energy>=50&(!talent.count_the_odds||buff.roll_the_bones.remains>=10)\n# Finish at max possible CP without overflowing bonus combo points, unless for BtE which always should be 5+ CP\nactions+=/variable,name=finish_condition,value=combo_points>=cp_max_spend-buff.broadside.up-(buff.opportunity.up*(talent.quick_draw||talent.fan_the_hammer))||effective_combo_points>=cp_max_spend\n# Always attempt to use BtE at 5+ CP, regardless of CP gen waste\nactions+=/variable,name=finish_condition,op=reset,if=cooldown.between_the_eyes.ready&effective_combo_points<5\n# With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry\nactions+=/variable,name=blade_flurry_sync,value=spell_targets.blade_flurry<2&raid_event.adds.in>20||buff.blade_flurry.remains>1+talent.killing_spree.enabled\n# Higher priority Stealth list for Count the Odds or true Stealth/Vanish that will break in a single global\nactions+=/call_action_list,name=stealth,if=stealthed.basic||buff.shadowmeld.up\nactions+=/call_action_list,name=cds\n# Lower priority Stealth list for Shadow Dance\nactions+=/call_action_list,name=stealth,if=variable.stealthed_cto\nactions+=/run_action_list,name=finish,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders\nactions.build+=/sepsis,cycle_targets=1,if=target.time_to_die>11&debuff.between_the_eyes.up||fight_remains<11\nactions.build+=/ghostly_strike,if=debuff.ghostly_strike.remains<=3&(spell_targets.blade_flurry<=2||buff.dreadblades.up)&!buff.subterfuge.up&target.time_to_die>=5\nactions.build+=/echoing_reprimand,if=!buff.dreadblades.up\n# High priority Ambush line to apply Find Weakness or consume HO+Audacity buff before Pistol Shot\nactions.build+=/ambush,if=settings.ambush_anyway||talent.hidden_opportunity&buff.audacity.up||talent.find_weakness&debuff.find_weakness.down\n# With Audacity + Hidden Opportunity + Fan the Hammer, use Pistol Shot to proc Audacity any time Ambush is not available\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up&!buff.subterfuge.up&!buff.shadow_dance.up\n# Use Greenskins Wickers buff immediately with Opportunity unless running Fan the Hammer\nactions.build+=/pistol_shot,if=buff.greenskins_wickers.up&(!talent.fan_the_hammer&buff.opportunity.up||buff.greenskins_wickers.remains<1.5)\n# With Fan the Hammer, consume Opportunity at max stacks or if we will get max 4+ CP and Dreadblades is not up\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&combo_points.deficit>((1+talent.quick_draw)*talent.fan_the_hammer.rank)&!buff.dreadblades.up&(!talent.hidden_opportunity||!buff.subterfuge.up&!buff.shadow_dance.up)\n## actions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=settings.ambush_anyway||talent.hidden_opportunity||talent.find_weakness&debuff.find_weakness.down\n# Use Pistol Shot with Opportunity if Combat Potency won't overcap energy, when it will exactly cap CP, or when using Quick Draw\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||!talent.weaponmaster&combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\nactions.build+=/sinister_strike\n\n# Cooldowns  Blade Flurry on 2+ enemies\nactions.cds+=/blade_flurry,if=spell_targets>=2&!buff.blade_flurry.up\nactions.cds+=/roll_the_bones,if=buff.dreadblades.down&(rtb_buffs=0||variable.rtb_reroll||variable.rtb_reroll_kir_cto)\nactions.cds+=/keep_it_rolling,if=!variable.rtb_reroll&(buff.broadside.up+buff.true_bearing.up+buff.skull_and_crossbones.up+buff.ruthless_precision.up)>2&(buff.shadow_dance.down||rtb_buffs>=6)\nactions.cds+=/call_action_list,name=stealth_cds,if=!stealthed.all||talent.count_the_odds&!variable.stealthed_cto\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!talent.improved_adrenaline_rush||combo_points<=2)\nactions.cds+=/dreadblades,if=!stealthed.all&combo_points<=2&(!talent.marked_for_death||!cooldown.marked_for_death.ready)&target.time_to_die>=10\n# If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or without any CP.\nactions.cds+=/marked_for_death,line_cd=1.5,cycle_targets=1,if=raid_event.adds.up&(target.time_to_die<combo_points.deficit||combo_points.deficit>=cp_max_spend-1)&!buff.dreadblades.up\n# If no adds will die within the next 30s, use MfD on boss without any CP.\nactions.cds+=/marked_for_death,if=raid_event.adds.in>30-raid_event.adds.duration&combo_points.deficit>=cp_max_spend-1&!buff.dreadblades.up\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.base_deficit>=100||fight_remains<charges*6)\nactions.cds+=/killing_spree,if=variable.blade_flurry_sync&!stealthed.rogue&debuff.between_the_eyes.up&energy.base_time_to_max>4\nactions.cds+=/blade_rush,if=variable.blade_flurry_sync&!buff.dreadblades.up&!buff.shadow_dance.up&energy.base_time_to_max>4&target.time_to_die>4\nactions.cds+=/shadowmeld,if=!stealthed.all&(talent.count_the_odds&variable.finish_condition||!talent.weaponmaster.enabled&variable.ambush_condition)\nactions.cds+=/potion,if=buff.bloodlust.react||fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n# Default conditions for usable items.\nactions.cds+=/use_item,name=manic_grieftorch,if=!stealthed.all&!buff.adrenaline_rush.up||fight_remains<5\nactions.cds+=/use_items,slots=trinket1,if=debuff.between_the_eyes.up||trinket.1.has_stat.any_dps||fight_remains<=20\nactions.cds+=/use_items,slots=trinket2,if=debuff.between_the_eyes.up||trinket.2.has_stat.any_dps||fight_remains<=20\n\n# Stealth Cooldowns\nactions.stealth_cds+=/variable,name=vanish_condition,value=talent.hidden_opportunity||!talent.shadow_dance||!cooldown.shadow_dance.ready\nactions.stealth_cds+=/variable,name=vanish_opportunity_condition,value=!talent.shadow_dance&talent.fan_the_hammer.rank+talent.quick_draw+talent.audacity<talent.count_the_odds+talent.keep_it_rolling\nactions.stealth_cds+=/vanish,if=talent.find_weakness&!talent.audacity&debuff.find_weakness.down&variable.ambush_condition&variable.vanish_condition\nactions.stealth_cds+=/vanish,if=talent.hidden_opportunity&!buff.audacity.up&(variable.vanish_opportunity_condition||buff.opportunity.stack<buff.opportunity.max_stack)&variable.ambush_condition&variable.vanish_condition\nactions.stealth_cds+=/vanish,if=(!talent.find_weakness||talent.audacity)&!talent.hidden_opportunity&variable.finish_condition&variable.vanish_condition\nactions.stealth_cds+=/variable,name=shadow_dance_condition,value=talent.shadow_dance&debuff.between_the_eyes.up&(!talent.ghostly_strike||debuff.ghostly_strike.up)&(!talent.dreadblades||!cooldown.dreadblades.ready)&(!talent.hidden_opportunity||!buff.audacity.up&(talent.fan_the_hammer.rank<2||!buff.opportunity.up))\nactions.stealth_cds+=/shadow_dance,if=!talent.keep_it_rolling&variable.shadow_dance_condition&buff.slice_and_dice.up&(variable.finish_condition||talent.hidden_opportunity)&(!talent.hidden_opportunity||!cooldown.vanish.ready)\nactions.stealth_cds+=/shadow_dance,if=talent.keep_it_rolling&variable.shadow_dance_condition&(cooldown.keep_it_rolling.remains<=30||cooldown.keep_it_rolling.remains>120&(variable.finish_condition||talent.hidden_opportunity))\n\n# Finishers  BtE to keep the Crit debuff up, if RP is up, or for Greenskins, unless the target is about to die.\nactions.finish+=/between_the_eyes,if=target.time_to_die>3&(debuff.between_the_eyes.remains<4||talent.greenskins_wickers&!buff.greenskins_wickers.up||!talent.greenskins_wickers&buff.ruthless_precision.up)\nactions.finish+=/slice_and_dice,if=buff.slice_and_dice.remains<fight_remains&refreshable&(!talent.swift_slasher||combo_points>=cp_max_spend)\nactions.finish+=/cold_blood\nactions.finish+=/dispatch\n\n# Stealth\nactions.stealth+=/blade_flurry,if=talent.subterfuge&talent.hidden_opportunity&spell_targets>=2&!buff.blade_flurry.up\nactions.stealth+=/cold_blood,if=variable.finish_condition\nactions.stealth+=/dispatch,if=variable.finish_condition\nactions.stealth+=/ambush,if=variable.stealthed_cto||stealthed.basic&(settings.ambush_anyway||talent.find_weakness&!debuff.find_weakness.up||talent.hidden_opportunity)",
					["spec"] = 260,
				},
				["Retribution"] = {
					["builtIn"] = true,
					["date"] = 20220405,
					["spec"] = 70,
					["desc"] = "Retribution Paladin\nApril 5, 2022\n\nChanges:\n- Integrate new priority split from SimC.\n- Make Seraphim work better with other CDs toggled off.\n- Don't waste medium/large CDs on dying packs unless it's a boss fight.\n- More adjustments to work with CDs shown separately.",
					["profile"] = "## Retribution Paladin\n## April 5, 2022\n\n## Changes:\n## - Integrate new priority split from SimC.\n## - Make Seraphim work better with other CDs toggled off.\n## - Don't waste medium/large CDs on dying packs unless it's a boss fight.\n## - More adjustments to work with CDs shown separately.\n\nactions.precombat=potion\nactions.precombat+=/blessing_of_summer\nactions.precombat+=/blessing_of_autumn\nactions.precombat+=/blessing_of_winter\nactions.precombat+=/blessing_of_spring\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\nactions.precombat+=/arcane_torrent,if=talent.final_reckoning.enabled&talent.seraphim.enabled\nactions.precombat+=/shield_of_vengeance\n\n## Executed every time the actor is available.\nactions=rebuke\nactions+=/variable,name=fr_ready,value=(holy_power>=4&time<8||holy_power>=3&(time>=8||spell_targets.divine_storm>=2&covenant.kyrian))&cooldown.avenging_wrath.remains>gcd&time_to_hpg=0&(!talent.seraphim||buff.seraphim.up)&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)&(!buff.avenging_wrath.up||holy_power=5||cooldown.hammer_of_wrath.remains||spell_targets.divine_storm>=2&covenant.kyrian)\nactions+=/variable,name=es_ready,value=(buff.crusade.down&cooldown.crusade.remains>10||buff.crusade.stack>=3||cooldown.avenging_wrath.remains>10)&(!talent.final_reckoning||cooldown.final_reckoning.remains>10||holy_power.deficit=0&action.final_reckoning.disabled)&fight_remains>8&spell_targets.divine_storm<5\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=es_fr_pooling,if=(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in<9||raid_event.adds.in>30)&(talent.execution_sentence&cooldown.execution_sentence.remains<9&spell_targets.divine_storm<5||talent.final_reckoning&cooldown.final_reckoning.remains<9)&fight_remains>8\nactions+=/call_action_list,name=es_fr_active,strict=1,if=debuff.execution_sentence.up||debuff.final_reckoning.up\nactions+=/call_action_list,name=generators\n\nactions.cooldowns=potion,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||boss&fight_remains<25\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/fireblood,if=(buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10)&!talent.execution_sentence\nactions.cooldowns+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.cooldowns+=/shield_of_vengeance,if=(!talent.execution_sentence||cooldown.execution_sentence.remains<52)&fight_remains>15\nactions.cooldowns+=/blessing_of_summer\nactions.cooldowns+=/blessing_of_autumn\nactions.cooldowns+=/blessing_of_winter\nactions.cooldowns+=/blessing_of_spring\nactions.cooldowns+=/use_item,name=inscrutable_quantum_device,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||boss&fight_remains<30\nactions.cooldowns+=/use_item,name=overwhelming_power_crystal,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||boss&fight_remains<15\nactions.cooldowns+=/use_item,name=darkmoon_deck_voracity,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||boss&fight_remains<20\nactions.cooldowns+=/use_item,name=macabre_sheet_music,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||boss&fight_remains<20\nactions.cooldowns+=/use_item,name=faulty_countermeasure,if=!talent.crusade||buff.crusade.up||boss&fight_remains<30\nactions.cooldowns+=/use_item,name=dreadfire_vessel\nactions.cooldowns+=/use_item,name=skulkers_wing\nactions.cooldowns+=/use_item,name=grim_codex\nactions.cooldowns+=/use_item,name=memory_of_past_sins\nactions.cooldowns+=/use_item,name=spare_meat_hook\nactions.cooldowns+=/use_item,name=salvaged_fusion_amplifier\nactions.cooldowns+=/use_item,name=giant_ornamental_pearl\nactions.cooldowns+=/use_item,name=windscar_whetstone\nactions.cooldowns+=/use_item,name=scars_of_fraternal_strife\nactions.cooldowns+=/use_item,name=chains_of_domination\nactions.cooldowns+=/use_item,name=earthbreakers_impact\nactions.cooldowns+=/use_item,name=heart_of_the_swarm,if=!buff.avenging_wrath.up&!buff.crusade.up\nactions.cooldowns+=/use_item,name=gladiators_badge,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack>=10||cooldown.avenging_wrath.remains>45||cooldown.crusade.remains>45\nactions.cooldowns+=/use_items,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack>=10\nactions.cooldowns+=/use_item,name=gavel_of_the_first_arbiter,if=(buff.avenging_wrath.up||buff.crusade.up)\nactions.cooldowns+=/avenging_wrath,if=(holy_power>=4&time<5||holy_power>=3&(time>5||runeforge.the_magistrates_judgment)||holy_power>=2&runeforge.vanguards_momentum&talent.final_reckoning||talent.holy_avenger&cooldown.holy_avenger.remains=0)&(!talent.seraphim||!talent.final_reckoning||cooldown.seraphim.remains>0)\nactions.cooldowns+=/crusade,if=holy_power>=4&time<5||holy_power>=3&time>5\nactions.cooldowns+=/ashen_hallow\nactions.cooldowns+=/holy_avenger,if=time_to_hpg=0&holy_power<=2&(buff.avenging_wrath.up||talent.crusade&(cooldown.crusade.remains=0||buff.crusade.up)||boss&fight_remains<20)\nactions.cooldowns+=/final_reckoning,if=(holy_power>=4&time<8||holy_power>=3&(time>=8||spell_targets.divine_storm>=2&covenant.kyrian))&cooldown.avenging_wrath.remains>gcd&time_to_hpg=0&(!talent.seraphim||buff.seraphim.up)&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)&(!buff.avenging_wrath.up||holy_power=5||cooldown.hammer_of_wrath.remains||spell_targets.divine_storm>=2&covenant.kyrian)\n\nactions.es_fr_active=fireblood\nactions.es_fr_active+=/call_action_list,name=finishers,if=holy_power=5||debuff.judgment.up||debuff.final_reckoning.up&(debuff.final_reckoning.remains<gcd.max||spell_targets.divine_storm>=2&!talent.execution_sentence)||debuff.execution_sentence.up&debuff.execution_sentence.remains<gcd.max\nactions.es_fr_active+=/divine_toll\nactions.es_fr_active+=/vanquishers_hammer\nactions.es_fr_active+=/wake_of_ashes,if=holy_power<=2&(debuff.final_reckoning.up&debuff.final_reckoning.remains<gcd*2&!runeforge.divine_resonance||debuff.execution_sentence.up&debuff.execution_sentence.remains<gcd||spell_targets.divine_storm>=5&runeforge.divine_resonance&talent.execution_sentence)\nactions.es_fr_active+=/blade_of_justice,if=conduit.expurgation&(!runeforge.divine_resonance&holy_power<=3||holy_power<=2)\nactions.es_fr_active+=/judgment,if=!debuff.judgment.up&(holy_power>=1&runeforge.the_magistrates_judgment||holy_power>=2)\nactions.es_fr_active+=/call_action_list,name=finishers\nactions.es_fr_active+=/wake_of_ashes,if=holy_power<=2\nactions.es_fr_active+=/blade_of_justice,if=holy_power<=3\nactions.es_fr_active+=/judgment,if=!debuff.judgment.up\nactions.es_fr_active+=/hammer_of_wrath\nactions.es_fr_active+=/crusader_strike\nactions.es_fr_active+=/arcane_torrent\nactions.es_fr_active+=/consecration\n\nactions.es_fr_pooling=seraphim,if=holy_power=5&(!talent.final_reckoning||cooldown.final_reckoning.remains<=gcd*3||cooldown.final_reckoning.remains>cooldown)&(!talent.execution_sentence||cooldown.execution_sentence.remains<=gcd*3||cooldown.execution_sentence.remains>cooldown||talent.final_reckoning)&(!covenant.kyrian||cooldown.divine_toll.remains<9||cooldown.divine_toll.remains>cooldown)\nactions.es_fr_pooling+=/call_action_list,name=finishers,if=holy_power=5||debuff.final_reckoning.up||buff.crusade.up&buff.crusade.stack<10\nactions.es_fr_pooling+=/vanquishers_hammer,if=buff.seraphim.up\nactions.es_fr_pooling+=/hammer_of_wrath,if=runeforge.vanguards_momentum\nactions.es_fr_pooling+=/wake_of_ashes,if=holy_power<=2&set_bonus.tier28_4pc\nactions.es_fr_pooling+=/blade_of_justice,if=holy_power<=3\nactions.es_fr_pooling+=/judgment,if=!debuff.judgment.up\nactions.es_fr_pooling+=/hammer_of_wrath\nactions.es_fr_pooling+=/crusader_strike,if=cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2||holy_power<=3&cooldown.blade_of_justice.remains>gcd*2||holy_power=4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2)\nactions.es_fr_pooling+=/seraphim,if=!talent.final_reckoning&cooldown.execution_sentence.remains<=gcd*3&(!covenant.kyrian||cooldown.divine_toll.remains<9)\nactions.es_fr_pooling+=/call_action_list,name=finishers\nactions.es_fr_pooling+=/crusader_strike\nactions.es_fr_pooling+=/arcane_torrent,if=holy_power<=4\nactions.es_fr_pooling+=/seraphim,if=(!talent.final_reckoning||cooldown.final_reckoning.remains<=gcd*3)&(!talent.execution_sentence||cooldown.execution_sentence.remains<=gcd*3||talent.final_reckoning)&(!covenant.kyrian||cooldown.divine_toll.remains<9)\nactions.es_fr_pooling+=/consecration\n\nactions.finishers=variable,name=ds_castable,value=spell_targets.divine_storm=2&!(runeforge.final_verdict||talent.righteous_verdict)||spell_targets.divine_storm>2||buff.empyrean_power.up&!debuff.judgment.up&!buff.divine_purpose.up\nactions.finishers+=/seraphim,if=(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15)&(!talent.final_reckoning||cooldown.final_reckoning.remains>cooldown)&(!talent.execution_sentence||cooldown.execution_sentence.remains>cooldown||spell_targets.divine_storm>=5)&(!raid_event.adds.exists||raid_event.adds.in>40||raid_event.adds.in<gcd||raid_event.adds.up)&(!covenant.kyrian||(cooldown.divine_toll.remains<9||cooldown.divine_toll.remains>cooldown))||fight_remains<15&fight_remains>5||buff.crusade.up&buff.crusade.stack<10\nactions.finishers+=/execution_sentence,if=(buff.crusade.down&cooldown.crusade.remains>10||buff.crusade.stack>=3||cooldown.avenging_wrath.remains>10)&(!talent.final_reckoning||cooldown.final_reckoning.remains>10||holy_power.deficit=0&(!variable.fr_ready||action.final_reckoning.disabled))&fight_remains>8&spell_targets.divine_storm<5\nactions.finishers+=/divine_storm,if=variable.ds_castable&!buff.vanquishers_hammer.up&((!talent.crusade||cooldown.crusade.remains>gcd*3)&(!talent.execution_sentence||cooldown.execution_sentence.remains>gcd*6||cooldown.execution_sentence.remains>gcd*4&holy_power>=5||spell_targets.divine_storm>=5||!talent.seraphim&cooldown.execution_sentence.remains>gcd*2||holy_power.deficit=0&(!variable.es_ready||action.execution_sentence.disabled))&(!talent.final_reckoning||cooldown.final_reckoning.remains>gcd*6||cooldown.final_reckoning.remains>gcd*4&holy_power>=5||!talent.seraphim&cooldown.final_reckoning.remains>gcd*2||holy_power.deficit=0&(!variable.fr_ready||action.final_reckoning.disabled))||talent.holy_avenger&cooldown.holy_avenger.remains<gcd*3||buff.holy_avenger.up||buff.crusade.up&buff.crusade.stack<10||fight_remains<8)\nactions.finishers+=/templars_verdict,if=(!talent.crusade||cooldown.crusade.remains>gcd*3)&(!talent.execution_sentence||cooldown.execution_sentence.remains>gcd*8||cooldown.execution_sentence.remains>gcd*6&holy_power>=4||!talent.seraphim&cooldown.execution_sentence.remains>gcd*2||holy_power.deficit=0&(!variable.es_ready||action.execution_sentence.disabled))&(!talent.final_reckoning||cooldown.final_reckoning.remains>gcd*8||cooldown.final_reckoning.remains>gcd*6&holy_power>=4||!talent.seraphim&cooldown.final_reckoning.remains>gcd*2||holy_power.deficit=0&(!variable.fr_ready||action.final_reckoning.disabled))||talent.holy_avenger&cooldown.holy_avenger.remains<gcd*3||buff.holy_avenger.up||buff.crusade.up&buff.crusade.stack<10||fight_remains<8\n\nactions.generators=call_action_list,name=finishers,if=holy_power=5||(debuff.judgment.up||holy_power=4)&buff.divine_resonance.up||buff.holy_avenger.up\nactions.generators+=/vanquishers_hammer,if=!runeforge.dutybound_gavel||!talent.final_reckoning&!talent.execution_sentence||boss&fight_remains<8\nactions.generators+=/hammer_of_wrath,if=runeforge.the_mad_paragon||covenant.venthyr&cooldown.ashen_hallow.remains>210\nactions.generators+=/wake_of_ashes,if=holy_power<=2&set_bonus.tier28_4pc&(cooldown.avenging_wrath.remains||cooldown.crusade.remains)\nactions.generators+=/divine_toll,if=holy_power<=2&!debuff.judgment.up&(!talent.seraphim||buff.seraphim.up)&(!raid_event.adds.exists||raid_event.adds.in>30||raid_event.adds.up)&(!talent.final_reckoning||debuff.final_reckoning.up||cooldown.final_reckoning.remains>20)&(!talent.execution_sentence||fight_remains<8||spell_targets.divine_storm>=5)&(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15||fight_remains<8)\nactions.generators+=/judgment,if=!debuff.judgment.up&(holy_power>=1&runeforge.the_magistrates_judgment||holy_power>=2)\nactions.generators+=/wake_of_ashes,if=(holy_power=0||holy_power<=2&cooldown.blade_of_justice.remains>gcd*2)&(!raid_event.adds.exists||raid_event.adds.in>20||raid_event.adds.up)&(!talent.seraphim||cooldown.seraphim.remains>5||covenant.kyrian)&(!talent.execution_sentence||cooldown.execution_sentence.remains>15||fight_remains<8||spell_targets.divine_storm>=5)&(!talent.final_reckoning||cooldown.final_reckoning.remains>15||fight_remains<8)&(cooldown.avenging_wrath.remains||cooldown.crusade.remains)\nactions.generators+=/call_action_list,name=finishers,if=holy_power>=3&buff.crusade.up&buff.crusade.stack<10\nactions.generators+=/blade_of_justice,if=conduit.expurgation&holy_power<=3\nactions.generators+=/judgment,if=!debuff.judgment.up\nactions.generators+=/hammer_of_wrath\nactions.generators+=/blade_of_justice,if=holy_power<=3\nactions.generators+=/call_action_list,name=finishers,if=(target.health.pct<=20||buff.avenging_wrath.up||buff.crusade.up||buff.empyrean_power.up)\nactions.generators+=/consecration,if=!consecration.up&spell_targets.divine_storm>=2\nactions.generators+=/crusader_strike,if=cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2||holy_power<=3&cooldown.blade_of_justice.remains>gcd*2||holy_power=4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2)\nactions.generators+=/call_action_list,name=finishers\nactions.generators+=/consecration,if=!consecration.up\nactions.generators+=/crusader_strike\nactions.generators+=/arcane_torrent\nactions.generators+=/consecration",
					["version"] = 20220405,
					["warnings"] = "WARNING:  The import for 'generators' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (3x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (2x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'cooldowns' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 30: Converted 'talent.X' to 'talent.X.enabled' (4x).\nLine 30: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 34: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'finishers' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (6x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (6x).\n\nWARNING:  The import for 'es_fr_active' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'es_fr_pooling' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (3x).\n\nImported 7 action lists.\n",
					["lists"] = {
						["cooldowns"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || boss & fight_remains < 25",
								["action"] = "potion",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
								["action"] = "lights_judgment",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.execution_sentence.enabled",
								["action"] = "fireblood",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains < 52 ) & fight_remains > 15",
								["action"] = "shield_of_vengeance",
							}, -- [5]
							{
								["action"] = "blessing_of_summer",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "blessing_of_autumn",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "blessing_of_winter",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "blessing_of_spring",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || boss & fight_remains < 30",
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || boss & fight_remains < 15",
								["name"] = "overwhelming_power_crystal",
								["action"] = "overwhelming_power_crystal",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || boss & fight_remains < 20",
								["name"] = "darkmoon_deck_voracity",
								["action"] = "darkmoon_deck_voracity",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || boss & fight_remains < 20",
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.crusade.enabled || buff.crusade.up || boss & fight_remains < 30",
								["name"] = "faulty_countermeasure",
								["action"] = "faulty_countermeasure",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "skulkers_wing",
								["action"] = "skulkers_wing",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "grim_codex",
								["action"] = "grim_codex",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "memory_of_past_sins",
								["action"] = "memory_of_past_sins",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "spare_meat_hook",
								["action"] = "spare_meat_hook",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "salvaged_fusion_amplifier",
								["action"] = "salvaged_fusion_amplifier",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "giant_ornamental_pearl",
								["action"] = "giant_ornamental_pearl",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "windscar_whetstone",
								["action"] = "windscar_whetstone",
							}, -- [22]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [23]
							{
								["enabled"] = true,
								["name"] = "chains_of_domination",
								["action"] = "chains_of_domination",
							}, -- [24]
							{
								["enabled"] = true,
								["name"] = "earthbreakers_impact",
								["action"] = "earthbreakers_impact",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "! buff.avenging_wrath.up & ! buff.crusade.up",
								["name"] = "heart_of_the_swarm",
								["action"] = "heart_of_the_swarm",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack >= 10 || cooldown.avenging_wrath.remains > 45 || cooldown.crusade.remains > 45",
								["name"] = "gladiators_badge",
								["action"] = "gladiators_badge",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack >= 10",
								["action"] = "use_items",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "( buff.avenging_wrath.up || buff.crusade.up )",
								["name"] = "gavel_of_the_first_arbiter",
								["action"] = "gavel_of_the_first_arbiter",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "( holy_power >= 4 & time < 5 || holy_power >= 3 & ( time > 5 || runeforge.the_magistrates_judgment.enabled ) || holy_power >= 2 & runeforge.vanguards_momentum.enabled & talent.final_reckoning.enabled || talent.holy_avenger.enabled & cooldown.holy_avenger.remains = 0 ) & ( ! talent.seraphim.enabled || ! talent.final_reckoning.enabled || cooldown.seraphim.remains > 0 )",
								["action"] = "avenging_wrath",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5",
								["action"] = "crusade",
							}, -- [31]
							{
								["action"] = "ashen_hallow",
								["enabled"] = true,
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "time_to_hpg = 0 & holy_power <= 2 & ( buff.avenging_wrath.up || talent.crusade.enabled & ( cooldown.crusade.remains = 0 || buff.crusade.up ) || boss & fight_remains < 20 )",
								["action"] = "holy_avenger",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & ( time >= 8 || spell_targets.divine_storm >= 2 & covenant.kyrian ) ) & cooldown.avenging_wrath.remains > gcd & time_to_hpg = 0 & ( ! talent.seraphim.enabled || buff.seraphim.up ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 ) & ( ! buff.avenging_wrath.up || holy_power = 5 || cooldown.hammer_of_wrath.remains || spell_targets.divine_storm >= 2 & covenant.kyrian )",
								["action"] = "final_reckoning",
							}, -- [34]
						},
						["default"] = {
							{
								["action"] = "rebuke",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & ( time >= 8 || spell_targets.divine_storm >= 2 & covenant.kyrian ) ) & cooldown.avenging_wrath.remains > gcd & time_to_hpg = 0 & ( ! talent.seraphim.enabled || buff.seraphim.up ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 ) & ( ! buff.avenging_wrath.up || holy_power = 5 || cooldown.hammer_of_wrath.remains || spell_targets.divine_storm >= 2 & covenant.kyrian )",
								["var_name"] = "fr_ready",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( buff.crusade.down & cooldown.crusade.remains > 10 || buff.crusade.stack >= 3 || cooldown.avenging_wrath.remains > 10 ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > 10 || holy_power.deficit = 0 & action.final_reckoning.disabled ) & fight_remains > 8 & spell_targets.divine_storm < 5",
								["var_name"] = "es_ready",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldowns",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in < 9 || raid_event.adds.in > 30 ) & ( talent.execution_sentence.enabled & cooldown.execution_sentence.remains < 9 & spell_targets.divine_storm < 5 || talent.final_reckoning.enabled & cooldown.final_reckoning.remains < 9 ) & fight_remains > 8",
								["list_name"] = "es_fr_pooling",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "debuff.execution_sentence.up || debuff.final_reckoning.up",
								["list_name"] = "es_fr_active",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "generators",
							}, -- [7]
						},
						["precombat"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blessing_of_summer",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "blessing_of_autumn",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "blessing_of_winter",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blessing_of_spring",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.final_reckoning.enabled & talent.seraphim.enabled",
								["action"] = "arcane_torrent",
							}, -- [7]
							{
								["action"] = "shield_of_vengeance",
								["enabled"] = true,
							}, -- [8]
						},
						["generators"] = {
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "holy_power = 5 || ( debuff.judgment.up || holy_power = 4 ) & buff.divine_resonance.up || buff.holy_avenger.up",
								["list_name"] = "finishers",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.dutybound_gavel.enabled || ! talent.final_reckoning.enabled & ! talent.execution_sentence.enabled || boss & fight_remains < 8",
								["action"] = "vanquishers_hammer",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.the_mad_paragon.enabled || covenant.venthyr & cooldown.ashen_hallow.remains > 210",
								["action"] = "hammer_of_wrath",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 2 & set_bonus.tier28_4pc & ( cooldown.avenging_wrath.remains || cooldown.crusade.remains )",
								["action"] = "wake_of_ashes",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 2 & ! debuff.judgment.up & ( ! talent.seraphim.enabled || buff.seraphim.up ) & ( ! raid_event.adds.exists || raid_event.adds.in > 30 || raid_event.adds.up ) & ( ! talent.final_reckoning.enabled || debuff.final_reckoning.up || cooldown.final_reckoning.remains > 20 ) & ( ! talent.execution_sentence.enabled || fight_remains < 8 || spell_targets.divine_storm >= 5 ) & ( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 || fight_remains < 8 )",
								["action"] = "divine_toll",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.judgment.up & ( holy_power >= 1 & runeforge.the_magistrates_judgment.enabled || holy_power >= 2 )",
								["action"] = "judgment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( holy_power = 0 || holy_power <= 2 & cooldown.blade_of_justice.remains > gcd * 2 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 20 || raid_event.adds.up ) & ( ! talent.seraphim.enabled || cooldown.seraphim.remains > 5 || covenant.kyrian ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > 15 || fight_remains < 8 || spell_targets.divine_storm >= 5 ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > 15 || fight_remains < 8 ) & ( cooldown.avenging_wrath.remains || cooldown.crusade.remains )",
								["action"] = "wake_of_ashes",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "holy_power >= 3 & buff.crusade.up & buff.crusade.stack < 10",
								["list_name"] = "finishers",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "conduit.expurgation & holy_power <= 3",
								["action"] = "blade_of_justice",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.judgment.up",
								["action"] = "judgment",
							}, -- [10]
							{
								["action"] = "hammer_of_wrath",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 3",
								["action"] = "blade_of_justice",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( target.health.pct <= 20 || buff.avenging_wrath.up || buff.crusade.up || buff.empyrean_power.up )",
								["list_name"] = "finishers",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! consecration.up & spell_targets.divine_storm >= 2",
								["action"] = "consecration",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.crusader_strike.charges_fractional >= 1.75 & ( holy_power <= 2 || holy_power <= 3 & cooldown.blade_of_justice.remains > gcd * 2 || holy_power = 4 & cooldown.blade_of_justice.remains > gcd * 2 & cooldown.judgment.remains > gcd * 2 )",
								["action"] = "crusader_strike",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "finishers",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! consecration.up",
								["action"] = "consecration",
							}, -- [17]
							{
								["action"] = "crusader_strike",
								["enabled"] = true,
							}, -- [18]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [20]
						},
						["finishers"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.divine_storm = 2 & ! ( runeforge.final_verdict.enabled || talent.righteous_verdict.enabled ) || spell_targets.divine_storm > 2 || buff.empyrean_power.up & ! debuff.judgment.up & ! buff.divine_purpose.up",
								["var_name"] = "ds_castable",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > action_cooldown ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > action_cooldown || spell_targets.divine_storm >= 5 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 40 || raid_event.adds.in < gcd || raid_event.adds.up ) & ( ! covenant.kyrian || ( cooldown.divine_toll.remains < 9 || cooldown.divine_toll.remains > action_cooldown ) ) || fight_remains < 15 & fight_remains > 5 || buff.crusade.up & buff.crusade.stack < 10",
								["action"] = "seraphim",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( buff.crusade.down & cooldown.crusade.remains > 10 || buff.crusade.stack >= 3 || cooldown.avenging_wrath.remains > 10 ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > 10 || holy_power.deficit = 0 & ( ! variable.fr_ready || action.final_reckoning.disabled ) ) & fight_remains > 8 & spell_targets.divine_storm < 5",
								["action"] = "execution_sentence",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.ds_castable & ! buff.vanquishers_hammer.up & ( ( ! talent.crusade.enabled || cooldown.crusade.remains > gcd * 3 ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > gcd * 6 || cooldown.execution_sentence.remains > gcd * 4 & holy_power >= 5 || spell_targets.divine_storm >= 5 || ! talent.seraphim.enabled & cooldown.execution_sentence.remains > gcd * 2 || holy_power.deficit = 0 & ( ! variable.es_ready || action.execution_sentence.disabled ) ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > gcd * 6 || cooldown.final_reckoning.remains > gcd * 4 & holy_power >= 5 || ! talent.seraphim.enabled & cooldown.final_reckoning.remains > gcd * 2 || holy_power.deficit = 0 & ( ! variable.fr_ready || action.final_reckoning.disabled ) ) || talent.holy_avenger.enabled & cooldown.holy_avenger.remains < gcd * 3 || buff.holy_avenger.up || buff.crusade.up & buff.crusade.stack < 10 || fight_remains < 8 )",
								["action"] = "divine_storm",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.crusade.enabled || cooldown.crusade.remains > gcd * 3 ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > gcd * 8 || cooldown.execution_sentence.remains > gcd * 6 & holy_power >= 4 || ! talent.seraphim.enabled & cooldown.execution_sentence.remains > gcd * 2 || holy_power.deficit = 0 & ( ! variable.es_ready || action.execution_sentence.disabled ) ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > gcd * 8 || cooldown.final_reckoning.remains > gcd * 6 & holy_power >= 4 || ! talent.seraphim.enabled & cooldown.final_reckoning.remains > gcd * 2 || holy_power.deficit = 0 & ( ! variable.fr_ready || action.final_reckoning.disabled ) ) || talent.holy_avenger.enabled & cooldown.holy_avenger.remains < gcd * 3 || buff.holy_avenger.up || buff.crusade.up & buff.crusade.stack < 10 || fight_remains < 8",
								["action"] = "templars_verdict",
							}, -- [5]
						},
						["es_fr_active"] = {
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "holy_power = 5 || debuff.judgment.up || debuff.final_reckoning.up & ( debuff.final_reckoning.remains < gcd.max || spell_targets.divine_storm >= 2 & ! talent.execution_sentence.enabled ) || debuff.execution_sentence.up & debuff.execution_sentence.remains < gcd.max",
								["list_name"] = "finishers",
							}, -- [2]
							{
								["action"] = "divine_toll",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "vanquishers_hammer",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 2 & ( debuff.final_reckoning.up & debuff.final_reckoning.remains < gcd * 2 & ! runeforge.divine_resonance.enabled || debuff.execution_sentence.up & debuff.execution_sentence.remains < gcd || spell_targets.divine_storm >= 5 & runeforge.divine_resonance.enabled & talent.execution_sentence.enabled )",
								["action"] = "wake_of_ashes",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "conduit.expurgation & ( ! runeforge.divine_resonance.enabled & holy_power <= 3 || holy_power <= 2 )",
								["action"] = "blade_of_justice",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.judgment.up & ( holy_power >= 1 & runeforge.the_magistrates_judgment.enabled || holy_power >= 2 )",
								["action"] = "judgment",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "finishers",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 2",
								["action"] = "wake_of_ashes",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 3",
								["action"] = "blade_of_justice",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.judgment.up",
								["action"] = "judgment",
							}, -- [11]
							{
								["action"] = "hammer_of_wrath",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "crusader_strike",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [14]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [15]
						},
						["es_fr_pooling"] = {
							{
								["enabled"] = true,
								["criteria"] = "holy_power = 5 & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains <= gcd * 3 || cooldown.final_reckoning.remains > action_cooldown ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains <= gcd * 3 || cooldown.execution_sentence.remains > action_cooldown || talent.final_reckoning.enabled ) & ( ! covenant.kyrian || cooldown.divine_toll.remains < 9 || cooldown.divine_toll.remains > action_cooldown )",
								["action"] = "seraphim",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "holy_power = 5 || debuff.final_reckoning.up || buff.crusade.up & buff.crusade.stack < 10",
								["list_name"] = "finishers",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.seraphim.up",
								["action"] = "vanquishers_hammer",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.vanguards_momentum.enabled",
								["action"] = "hammer_of_wrath",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 2 & set_bonus.tier28_4pc",
								["action"] = "wake_of_ashes",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 3",
								["action"] = "blade_of_justice",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.judgment.up",
								["action"] = "judgment",
							}, -- [7]
							{
								["action"] = "hammer_of_wrath",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.crusader_strike.charges_fractional >= 1.75 & ( holy_power <= 2 || holy_power <= 3 & cooldown.blade_of_justice.remains > gcd * 2 || holy_power = 4 & cooldown.blade_of_justice.remains > gcd * 2 & cooldown.judgment.remains > gcd * 2 )",
								["action"] = "crusader_strike",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.final_reckoning.enabled & cooldown.execution_sentence.remains <= gcd * 3 & ( ! covenant.kyrian || cooldown.divine_toll.remains < 9 )",
								["action"] = "seraphim",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "finishers",
							}, -- [11]
							{
								["action"] = "crusader_strike",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "holy_power <= 4",
								["action"] = "arcane_torrent",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains <= gcd * 3 ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains <= gcd * 3 || talent.final_reckoning.enabled ) & ( ! covenant.kyrian || cooldown.divine_toll.remains < 9 )",
								["action"] = "seraphim",
							}, -- [14]
							{
								["action"] = "consecration",
								["enabled"] = true,
							}, -- [15]
						},
					},
					["author"] = "SimC",
				},
				["Guardian"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221202,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["bear"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["criteria"] = "( ( ! ticking & time_to_die > 12 ) || ( refreshable & time_to_die > 12 ) ) & active_enemies < 8",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.bear_form.up",
								["action"] = "barkskin",
							}, -- [3]
							{
								["action"] = "convoke_the_spirits",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "berserk",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "incarnation",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.incarnation_guardian_of_ursoc.down & cooldown.incarnation_guardian_of_ursoc.remains > 60 || buff.incarnation_guardian_of_ursoc.up",
								["action"] = "rage_of_the_sleeper",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
								["action"] = "berserking",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.rage_of_the_sleeper.up & buff.tooth_and_claw.stack > 0 & active_enemies <= 6",
								["action"] = "maul",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "ironfur",
								["criteria"] = "! debuff.tooth_and_claw_debuff.up & ! buff.ironfur.up & tanking || rage > 90",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.galactic_guardian.up & buff.galactic_guardian.remains <= gcd.max + 0.5",
								["action"] = "moonfire",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.gore.up & active_enemies < 11 || buff.vicious_cycle_mangle.stack = 3",
								["action"] = "mangle",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( ( buff.incarnation.up || buff.berserk_bear.up ) & active_enemies <= 5 & ( buff.tooth_and_claw.stack >= 2 ) )",
								["action"] = "maul",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "thrash_bear",
								["criteria"] = "refreshable || dot.thrash_bear.stack < 3 || active_enemies >= 5",
								["cycle_targets"] = 1,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "rage.deficit > 10 & settings.mangle_more",
								["action"] = "mangle",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & active_enemies >= 11",
								["action"] = "swipe_bear",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ( buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1.5 ) & active_enemies <= 5 )",
								["action"] = "maul",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies <= 5 & buff.vicious_cycle_maul.stack >= 3 || active_enemies < 4 & ! talent.vicious_cycle_maul.enabled",
								["action"] = "maul",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( buff.incarnation.up & active_enemies <= 4 ) || ( buff.incarnation.up & talent.soul_of_the_forest.enabled & active_enemies <= 5 ) || ( ( rage < 90 ) & active_enemies < 11 ) || ( ( rage < 85 ) & active_enemies < 11 & talent.soul_of_the_forest.enabled )",
								["action"] = "mangle",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "thrash_bear",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "dot.thrash_bear.stack > 2",
								["action"] = "pulverize",
							}, -- [21]
							{
								["action"] = "thrash_bear",
								["enabled"] = true,
							}, -- [22]
							{
								["action"] = "swipe_bear",
								["enabled"] = true,
							}, -- [23]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["criteria"] = "! buff.prowl.up",
								["action"] = "skull_bash",
							}, -- [1]
							{
								["action"] = "soothe",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ( talent.heart_of_the_wild.enabled & buff.heart_of_the_wild.up ) || ( ( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up ) & ( ! druid.catweave_bear & ! druid.owlweave_bear ) ) )",
								["action"] = "potion",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! tanking & druid.catweave_bear & buff.tooth_and_claw.remains < 1.5 & ( buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down ) & ( cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 & dot.moonfire.remains >= gcd.max + 0.5 ) || ( buff.cat_form.up & energy > 25 & druid.catweave_bear = 1 & buff.tooth_and_claw.remains < 1.5 ) || ( buff.heart_of_the_wild.up & energy > 90 & druid.catweave_bear = 1 & buff.tooth_and_claw.remains < 1.5 )",
								["action"] = "run_action_list",
								["list_name"] = "catweave",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! tanking & druid.owlweave_bear & buff.tooth_and_claw.remains < 1.5 & ( buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & cooldown.starsurge.up )",
								["action"] = "run_action_list",
								["list_name"] = "owlweave",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! buff.bear_form.up",
								["action"] = "bear_form",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "mitigation",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "bear",
							}, -- [10]
						},
						["catweave"] = {
							{
								["enabled"] = true,
								["description"] = "if you read this know that Kitch is a dummy",
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.cat_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.cat_form.up",
								["action"] = "cat_form",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.prowl.up",
								["action"] = "rake",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up",
								["action"] = "heart_of_the_wild",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "dot.rake.refreshable || energy < 45",
								["action"] = "rake",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "dot.rip.refreshable & combo_points >= 1",
								["action"] = "rip",
							}, -- [6]
							{
								["action"] = "convoke_the_spirits",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "combo_points >= 4 & energy > 50",
								["action"] = "ferocious_bite",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "combo_points <= 5",
								["action"] = "shred",
							}, -- [9]
						},
						["mitigation"] = {
							{
								["enabled"] = true,
								["criteria"] = "incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste",
								["action"] = "ironfur",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "health.pct < 65",
								["action"] = "regrowth",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "health.pct < 65",
								["action"] = "renewal",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "tanking & health.pct < 65",
								["action"] = "frenzied_regeneration",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! druid.catweave_bear & ! druid.owlweave_bear ) || active_enemies >= 2",
								["action"] = "empower_bond",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
								["action"] = "barkskin",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
								["action"] = "survival_instincts",
							}, -- [7]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up",
								["action"] = "mark_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & ( soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled )",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ( druid.catweave_bear & buff.cat_form.up || druid.owlweave_bear & buff.moonkin_form.up || buff.moonkin_form.up & talent.balance_affinity.enabled )",
								["action"] = "heart_of_the_wild",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.cat_form.up & druid.catweave_bear",
								["action"] = "prowl",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! buff.any_form.up & ! druid.owlweave_bear & ! druid.catweave_bear & ! action.convoke_the_spirits.known",
								["action"] = "bear_form",
							}, -- [5]
						},
						["cconvoke"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.cat_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.cat_form.up",
								["action"] = "cat_form",
							}, -- [2]
							{
								["action"] = "convoke_the_spirits",
								["enabled"] = true,
							}, -- [3]
						},
						["owlweave"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.cat_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.galactic_guardian.up & buff.galactic_guardian.remains <= gcd.max + 1",
								["action"] = "moonfire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.sunfire.refreshable",
								["action"] = "sunfire",
							}, -- [3]
							{
								["action"] = "starsurge",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20221202,
					["warnings"] = "Imported 7 action lists.\n",
					["spec"] = 104,
					["profile"] = "actions.precombat+=/mark_of_the_wild,if=!buff.prowl.up\nactions.precombat+=/fleshcraft,if=!buff.prowl.up&(soulbind.pustule_eruption.enabled||soulbind.volatile_solvent.enabled),interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&(druid.catweave_bear&buff.cat_form.up||druid.owlweave_bear&buff.moonkin_form.up)\nactions.precombat+=/prowl,if=buff.cat_form.up&druid.catweave_bear\nactions.precombat+=/bear_form,if=!buff.any_form.up||!druid.owlweave_bear&!druid.catweave_bear&!action.convoke_the_spirits.known\n\n# Executed every time the actor is available.\nactions=skull_bash,if=!buff.prowl.up\nactions+=/soothe\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/potion,if=((talent.heart_of_the_wild.enabled&buff.heart_of_the_wild.up)||((buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)&(!druid.catweave_bear&!druid.owlweave_bear)))\nactions+=/run_action_list,name=catweave,if=!tanking&druid.catweave_bear&buff.tooth_and_claw.remains<1.5&(buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down)&(cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0&dot.moonfire.remains>=gcd+0.5)||(buff.cat_form.up&energy>25&druid.catweave_bear=1&buff.tooth_and_claw.remains<1.5)||(buff.heart_of_the_wild.up&energy>90&druid.catweave_bear=1&buff.tooth_and_claw.remains<1.5)\nactions+=/run_action_list,name=owlweave,if=!tanking&druid.owlweave_bear&buff.tooth_and_claw.remains<1.5&(buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&cooldown.starsurge.up)\nactions+=/bear_form,if=!buff.bear_form.up\nactions+=/call_action_list,name=mitigation\nactions+=/run_action_list,name=bear\n\nactions.bear+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled\nactions.bear+=/moonfire,cycle_targets=1,if=((!ticking&time_to_die>12)||(refreshable&time_to_die>12))&active_enemies<8\nactions.bear+=/barkskin,if=buff.bear_form.up\nactions.bear+=/convoke_the_spirits\nactions.bear+=/berserk_bear\nactions.bear+=/incarnation\nactions.bear+=/rage_of_the_sleeper,if=buff.incarnation_guardian_of_ursoc.down&cooldown.incarnation_guardian_of_ursoc.remains>60||buff.incarnation_guardian_of_ursoc.up\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/maul,if=buff.rage_of_the_sleeper.up&buff.tooth_and_claw.stack>0&active_enemies<=6\nactions.bear+=/ironfur,cycle_targets=1,if=!debuff.tooth_and_claw_debuff.up&!buff.ironfur.up&tanking||rage>90\nactions.bear+=/moonfire,if=buff.galactic_guardian.up&buff.galactic_guardian.remains<=gcd+0.5\nactions.bear+=/mangle,if=buff.gore.up&active_enemies<11||buff.vicious_cycle_mangle.stack=3\nactions.bear+=/maul,if=((buff.incarnation.up||buff.berserk_bear.up)&active_enemies<=5&(buff.tooth_and_claw.stack>=2))\nactions.bear+=/thrash_bear,cycle_targets=1,if=refreshable||dot.thrash_bear.stack<3||active_enemies>=5\nactions.bear+=/mangle,if=rage.deficit>10&settings.mangle_more\nactions.bear+=/swipe,if=buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&active_enemies>=11\nactions.bear+=/maul,if=((buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1.5)&active_enemies<=5)\nactions.bear+=/maul,if=active_enemies<=5&buff.vicious_cycle_maul.stack>=3||active_enemies<4&!talent.vicious_cycle_maul.enabled\nactions.bear+=/mangle,if=(buff.incarnation.up&active_enemies<=4)||(buff.incarnation.up&talent.soul_of_the_forest.enabled&active_enemies<=5)||((rage<90)&active_enemies<11)||((rage<85)&active_enemies<11&talent.soul_of_the_forest.enabled)\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/pulverize,if=dot.thrash_bear.stack>2\nactions.bear+=/thrash_bear\nactions.bear+=/swipe_bear\n\nactions.catweave=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.cat_form.up\nactions.catweave+=/cat_form,if=!buff.cat_form.up\nactions.catweave+=/rake,if=buff.prowl.up\nactions.catweave+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up\nactions.catweave+=/rake,if=dot.rake.refreshable||energy<45\nactions.catweave+=/rip,if=dot.rip.refreshable&combo_points>=1\nactions.catweave+=/convoke_the_spirits\nactions.catweave+=/ferocious_bite,if=combo_points>=4&energy>50\nactions.catweave+=/shred,if=combo_points<=5\n\nactions.cconvoke+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.cat_form.up\nactions.cconvoke+=/cat_form,if=!buff.cat_form.up\nactions.cconvoke+=/convoke_the_spirits\n\nactions.mitigation=ironfur,if=incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste\nactions.mitigation+=/regrowth,if=health.pct<65\nactions.mitigation+=/renewal,if=health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/empower_bond,if=(!druid.catweave_bear&!druid.owlweave_bear)||active_enemies>=2\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max\n\nactions.owlweave=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.cat_form.up\nactions.owlweave+=/moonfire,if=buff.galactic_guardian.up&buff.galactic_guardian.remains<=gcd+1\nactions.owlweave+=/sunfire,if=dot.sunfire.refreshable\nactions.owlweave+=/starsurge",
				},
				["Marksmanship"] = {
					["source"] = "# https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221130,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["trickshots"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.steady_focus.enabled & steady_focus_count & buff.steady_focus.remains < 8",
								["action"] = "steady_shot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.razor_fragments.up",
								["action"] = "kill_shot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.rapid_fire.remains < gcd.max || ca_active || ! talent.streamline.enabled",
								["action"] = "double_tap",
							}, -- [3]
							{
								["action"] = "explosive_shot",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "stampede",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "wailing_arrow",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & talent.hydras_bite.enabled",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 7",
								["action"] = "barrage",
							}, -- [9]
							{
								["action"] = "volley",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "trueshot",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.trick_shots.remains >= execute_time & ( talent.surging_shots.enabled || buff.double_tap.up & talent.streamline.enabled & ! ca_active )",
								["action"] = "rapid_fire",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "aimed_shot",
								["cycle_targets"] = 1,
								["criteria"] = "talent.serpentstalkers_trickery.enabled & ( buff.trick_shots.remains >= execute_time & ( buff.precise_shots.down || buff.trueshot.up || full_recharge_time < cast_time + gcd.max ) )",
								["description"] = "For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "aimed_shot",
								["cycle_targets"] = 1,
								["criteria"] = "( buff.trick_shots.remains >= execute_time & ( buff.precise_shots.down || buff.trueshot.up || full_recharge_time < cast_time + gcd.max ) )",
								["description"] = "For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.trick_shots.remains >= execute_time",
								["action"] = "rapid_fire",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.trick_shots.up & buff.precise_shots.up & focus > cost + action.aimed_shot.cost & active_enemies < 4",
								["action"] = "chimaera_shot",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.trick_shots.down || ( buff.precise_shots.up || buff.bulletstorm.stack = 10 ) & focus > cost + action.aimed_shot.cost",
								["action"] = "multishot",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["cycle_targets"] = 1,
								["criteria"] = "refreshable & talent.poison_injection.enabled & ! talent.serpentstalkers_trickery.enabled",
								["description"] = "Only use baseline Serpent Sting as a filler in cleave if it's the only source of applying Latent Poison.",
							}, -- [18]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "focus > cost + action.aimed_shot.cost",
								["action"] = "kill_shot",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "focus > cost + action.aimed_shot.cost",
								["action"] = "multishot",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.down",
								["action"] = "bag_of_tricks",
							}, -- [22]
							{
								["action"] = "steady_shot",
								["enabled"] = true,
							}, -- [23]
						},
						["default"] = {
							{
								["action"] = "counter_shot",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "tranquilizing_shot",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! trinket.t1.has_use_buff || buff.trueshot.up",
								["description"] = "New trinket lines are under construction.",
								["slots"] = "trinket1",
								["action"] = "trinket1",
							}, -- [3]
							{
								["enabled"] = true,
								["slots"] = "trinket2",
								["action"] = "trinket2",
								["criteria"] = "! trinket.t2.has_use_buff || buff.trueshot.up",
							}, -- [4]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 3 || ! talent.trick_shots.enabled",
								["action"] = "call_action_list",
								["list_name"] = "st",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2",
								["action"] = "call_action_list",
								["list_name"] = "trickshots",
							}, -- [8]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.kill_command.enabled || talent.beast_master.enabled",
								["action"] = "summon_pet",
							}, -- [1]
							{
								["enabled"] = true,
								["precast_time"] = "10",
								["action"] = "double_tap",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 3 & ( ! talent.volley.enabled || active_enemies < 2 )",
								["action"] = "aimed_shot",
								["description"] = "Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 || ! talent.steady_focus.enabled",
								["action"] = "wailing_arrow",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 || talent.volley.enabled & active_enemies = 2",
								["action"] = "steady_shot",
								["description"] = "Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.",
							}, -- [5]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 13",
								["action"] = "berserking",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
								["action"] = "blood_fury",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
								["action"] = "ancestral_call",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 9",
								["action"] = "fireblood",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.down",
								["action"] = "lights_judgment",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.up & ( buff.bloodlust.up || target.health.pct < 20 ) || boss & fight_remains < 26",
								["action"] = "potion",
							}, -- [6]
						},
						["st"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.steady_focus.enabled & ( steady_focus_count & buff.steady_focus.remains < 5 || buff.steady_focus.down & ! buff.trueshot.up )",
								["action"] = "steady_shot",
							}, -- [1]
							{
								["action"] = "kill_shot",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "steel_trap",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "serpent_sting",
								["criteria"] = "refreshable & ! talent.serpentstalkers_trickery.enabled & buff.trueshot.down",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["action"] = "explosive_shot",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( cooldown.rapid_fire.remains < gcd.max || ca_active || ! talent.streamline.enabled ) & ( ! raid_event.adds.exists || raid_event.adds.up & ( raid_event.adds.in < 10 & raid_event.adds.remains < 3 || raid_event.adds.in > action_cooldown || active_enemies > 1 ) || ! raid_event.adds.up & ( raid_event.adds.count = 1 || raid_event.adds.in > action_cooldown ) )",
								["action"] = "double_tap",
								["description"] = "With at least Streamline, save Double Tap for Rapid Fire unless Careful Aim is active.",
							}, -- [6]
							{
								["action"] = "stampede",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "death_chakram",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "wailing_arrow",
							}, -- [9]
							{
								["action"] = "volley",
								["enabled"] = true,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.surging_shots.enabled || buff.double_tap.up & talent.streamline.enabled & ! ca_active",
								["action"] = "rapid_fire",
								["description"] = "With at least Streamline, Double Tap Rapid Fire unless Careful Aim is active.",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! raid_event.adds.exists || ! raid_event.adds.up & ( raid_event.adds.duration + raid_event.adds.in < 25 || raid_event.adds.in > 60 ) || raid_event.adds.up & raid_event.adds.remains > 10 || active_enemies > 1 || boss & fight_remains < 25",
								["action"] = "trueshot",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.bombardment.up & buff.trick_shots.down & active_enemies > 1 || talent.salvo.enabled & buff.salvo.down & ! talent.volley.enabled",
								["action"] = "multishot",
								["description"] = "Trigger Trick Shots from Bombardment if it isn't already up, or trigger Salvo if Volley isn't being used to trigger it.",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "aimed_shot",
								["cycle_targets"] = 1,
								["criteria"] = "talent.serpentstalkers_trickery.enabled & ( ( buff.precise_shots.down || ( buff.trueshot.up || full_recharge_time < gcd.max + cast_time ) & ( ! talent.chimaera_shot.enabled || active_enemies < 2 ) ) || buff.trick_shots.remains > execute_time & active_enemies > 1 )",
								["description"] = "For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. On one target don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise, and on two targets don't overwrite Precise Shots if you have Chimaera Shot, but ignore those general rules if we can cleave it.",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "aimed_shot",
								["cycle_targets"] = 1,
								["criteria"] = "( buff.precise_shots.down || ( buff.trueshot.up || full_recharge_time < gcd.max + cast_time ) & ( ! talent.chimaera_shot.enabled || active_enemies < 2 ) ) || buff.trick_shots.remains > execute_time & active_enemies > 1",
								["description"] = "For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.steady_focus.enabled & buff.steady_focus.remains < execute_time * 2",
								["action"] = "steady_shot",
								["description"] = "Refresh Steady Focus if it would run out while refreshing it.",
							}, -- [16]
							{
								["action"] = "rapid_fire",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.down",
								["action"] = "wailing_arrow",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.precise_shots.up || focus > cost + action.aimed_shot.cost",
								["action"] = "chimaera_shot",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.precise_shots.up || focus > cost + action.aimed_shot.cost",
								["action"] = "arcane_shot",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.trueshot.down",
								["action"] = "bag_of_tricks",
							}, -- [21]
							{
								["action"] = "steady_shot",
								["enabled"] = true,
							}, -- [22]
						},
					},
					["version"] = 20221130,
					["warnings"] = "The import for 'trickshots' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 3: Converted 'talent.streamline' to 'talent.streamline.enabled' (1x).\nLine 8: Converted 'talent.hydras_bite' to 'talent.hydras_bite.enabled' (1x).\nLine 12: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\nLine 12: Converted 'talent.streamline' to 'talent.streamline.enabled' (1x).\nLine 13: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 18: Converted 'talent.poison_injection' to 'talent.poison_injection.enabled' (1x).\nLine 18: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'talent.trick_shots' to 'talent.trick_shots.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'talent.kill_command' to 'talent.kill_command.enabled' (1x).\nLine 1: Converted 'talent.beast_master' to 'talent.beast_master.enabled' (1x).\nLine 3: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 4: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 5: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 4: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 6: Converted 'talent.streamline' to 'talent.streamline.enabled' (1x).\nLine 11: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\nLine 11: Converted 'talent.streamline' to 'talent.streamline.enabled' (1x).\nLine 13: Converted 'talent.salvo' to 'talent.salvo.enabled' (1x).\nLine 13: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 14: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 14: Converted 'talent.chimaera_shot' to 'talent.chimaera_shot.enabled' (1x).\nLine 15: Converted 'talent.chimaera_shot' to 'talent.chimaera_shot.enabled' (1x).\nLine 16: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "actions.precombat+=/summon_pet,if=talent.kill_command||talent.beast_master\nactions.precombat+=/double_tap,precast_time=10\n# Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.\nactions.precombat+=/aimed_shot,if=active_enemies<3&(!talent.volley||active_enemies<2)\nactions.precombat+=/wailing_arrow,if=active_enemies>2||!talent.steady_focus\n# Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.\nactions.precombat+=/steady_shot,if=active_enemies>2||talent.volley&active_enemies=2\n\nactions=counter_shot\nactions+=/tranquilizing_shot\n# New trinket lines are under construction.\nactions+=/use_items,slots=trinket1,if=!trinket.1.has_use_buff||buff.trueshot.up\nactions+=/use_items,slots=trinket2,if=!trinket.2.has_use_buff||buff.trueshot.up\nactions+=/use_items\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=st,if=active_enemies<3||!talent.trick_shots\nactions+=/call_action_list,name=trickshots,if=active_enemies>2\n\nactions.cds+=/berserking,if=boss&fight_remains<13\nactions.cds+=/blood_fury,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<9\nactions.cds+=/lights_judgment,if=buff.trueshot.down\nactions.cds+=/potion,if=buff.trueshot.up&(buff.bloodlust.up||target.health.pct<20)||boss&fight_remains<26\n\nactions.st+=/steady_shot,if=talent.steady_focus&(steady_focus_count&buff.steady_focus.remains<5||buff.steady_focus.down&!buff.trueshot.up)\nactions.st+=/kill_shot\nactions.st+=/steel_trap\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&!talent.serpentstalkers_trickery&buff.trueshot.down\nactions.st+=/explosive_shot\n# With at least Streamline, save Double Tap for Rapid Fire unless Careful Aim is active.\nactions.st+=/double_tap,if=(cooldown.rapid_fire.remains<gcd||ca_active||!talent.streamline)&(!raid_event.adds.exists||raid_event.adds.up&(raid_event.adds.in<10&raid_event.adds.remains<3||raid_event.adds.in>cooldown||active_enemies>1)||!raid_event.adds.up&(raid_event.adds.count=1||raid_event.adds.in>cooldown))\nactions.st+=/stampede\nactions.st+=/death_chakram\nactions.st+=/wailing_arrow,if=active_enemies>1\nactions.st+=/volley\n# With at least Streamline, Double Tap Rapid Fire unless Careful Aim is active.\nactions.st+=/rapid_fire,if=talent.surging_shots||buff.double_tap.up&talent.streamline&!ca_active\nactions.st+=/trueshot,if=!raid_event.adds.exists||!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10||active_enemies>1||boss&fight_remains<25\n# Trigger Trick Shots from Bombardment if it isn't already up, or trigger Salvo if Volley isn't being used to trigger it.\nactions.st+=/multishot,if=buff.bombardment.up&buff.trick_shots.down&active_enemies>1||talent.salvo&buff.salvo.down&!talent.volley\n# For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. On one target don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise, and on two targets don't overwrite Precise Shots if you have Chimaera Shot, but ignore those general rules if we can cleave it.\nactions.st+=/aimed_shot,cycle_targets=1,if=talent.serpentstalkers_trickery&((buff.precise_shots.down||(buff.trueshot.up||full_recharge_time<gcd+cast_time)&(!talent.chimaera_shot||active_enemies<2))||buff.trick_shots.remains>execute_time&active_enemies>1)\n# For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.\nactions.st+=/aimed_shot,cycle_targets=1,if=(buff.precise_shots.down||(buff.trueshot.up||full_recharge_time<gcd+cast_time)&(!talent.chimaera_shot||active_enemies<2))||buff.trick_shots.remains>execute_time&active_enemies>1\n# Refresh Steady Focus if it would run out while refreshing it.\nactions.st+=/steady_shot,if=talent.steady_focus&buff.steady_focus.remains<execute_time*2\nactions.st+=/rapid_fire\nactions.st+=/wailing_arrow,if=buff.trueshot.down\nactions.st+=/chimaera_shot,if=buff.precise_shots.up||focus>cost+action.aimed_shot.cost\nactions.st+=/arcane_shot,if=buff.precise_shots.up||focus>cost+action.aimed_shot.cost\nactions.st+=/bag_of_tricks,if=buff.trueshot.down\nactions.st+=/steady_shot\n\nactions.trickshots+=/steady_shot,if=talent.steady_focus&steady_focus_count&buff.steady_focus.remains<8\nactions.trickshots+=/kill_shot,if=buff.razor_fragments.up\nactions.trickshots+=/double_tap,if=cooldown.rapid_fire.remains<gcd||ca_active||!talent.streamline\nactions.trickshots+=/explosive_shot\nactions.trickshots+=/death_chakram\nactions.trickshots+=/stampede\nactions.trickshots+=/wailing_arrow\nactions.trickshots+=/serpent_sting,cycle_targets=1,if=refreshable&talent.hydras_bite\nactions.trickshots+=/barrage,if=active_enemies>7\nactions.trickshots+=/volley\nactions.trickshots+=/trueshot\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time&(talent.surging_shots||buff.double_tap.up&talent.streamline&!ca_active)\n# For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.\nactions.trickshots+=/aimed_shot,cycle_targets=1,if=talent.serpentstalkers_trickery&(buff.trick_shots.remains>=execute_time&(buff.precise_shots.down||buff.trueshot.up||full_recharge_time<cast_time+gcd))\n# For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.\nactions.trickshots+=/aimed_shot,cycle_targets=1,if=(buff.trick_shots.remains>=execute_time&(buff.precise_shots.down||buff.trueshot.up||full_recharge_time<cast_time+gcd))\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time\nactions.trickshots+=/chimaera_shot,if=buff.trick_shots.up&buff.precise_shots.up&focus>cost+action.aimed_shot.cost&active_enemies<4\nactions.trickshots+=/multishot,if=buff.trick_shots.down||(buff.precise_shots.up||buff.bulletstorm.stack=10)&focus>cost+action.aimed_shot.cost\n# Only use baseline Serpent Sting as a filler in cleave if it's the only source of applying Latent Poison.\nactions.trickshots+=/serpent_sting,cycle_targets=1,if=refreshable&talent.poison_injection&!talent.serpentstalkers_trickery\nactions.trickshots+=/steel_trap\nactions.trickshots+=/kill_shot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/multishot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/bag_of_tricks,if=buff.trueshot.down\nactions.trickshots+=/steady_shot",
					["spec"] = 254,
				},
				["Enhancement"] = {
					["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/sc_shaman.cpp",
					["builtIn"] = true,
					["date"] = 20221218,
					["spec"] = 263,
					["desc"] = "",
					["lists"] = {
						["single"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack >= 1",
								["action"] = "windstrike",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_hand.up || buff.ashen_catalyst.stack = 8 || ( buff.ashen_catalyst.stack >= 5 & buff.maelstrom_of_elements.up & buff.maelstrom_weapon.stack <= 6 )",
								["action"] = "lava_lash",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.windfury_totem.up",
								["action"] = "windfury_totem",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up",
								["action"] = "stormstrike",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up",
								["action"] = "crash_lightning",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up",
								["action"] = "ice_strike",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up",
								["action"] = "sundering",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.primordial_wave.down & ( raid_event.adds.in > 42 || raid_event.adds.in < 6 )",
								["action"] = "primordial_wave",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! ticking",
								["action"] = "flame_shock",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.up & raid_event.adds.in > buff.primordial_wave.remains & ( ! buff.splintered_elements.up || fight_remains <= 12 )",
								["action"] = "lightning_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) & buff.maelstrom_weapon.stack >= 8",
								["action"] = "elemental_blast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.hailstorm.enabled",
								["action"] = "ice_strike",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier29_2pc & buff.maelstrom_of_elements.down & buff.maelstrom_weapon.stack <= 5",
								["action"] = "stormstrike",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.hailstorm.up",
								["action"] = "frost_shock",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.molten_assault.enabled & dot.flame_shock.refreshable",
								["action"] = "lava_lash",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.deeply_rooted_elements.enabled || buff.earthen_weapon.up || buff.legacy_of_the_frost_witch.up",
								["action"] = "windstrike",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "talent.deeply_rooted_elements.enabled || buff.earthen_weapon.up || buff.legacy_of_the_frost_witch.up",
								["action"] = "stormstrike",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( talent.elemental_spirits.enabled & buff.maelstrom_weapon.stack = 10 ) || ( ! talent.elemental_spirits.enabled & buff.maelstrom_weapon.stack >= 5 )",
								["action"] = "elemental_blast",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "lava_burst",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack = 10 & buff.primordial_wave.down",
								["action"] = "lightning_bolt",
							}, -- [20]
							{
								["action"] = "windstrike",
								["enabled"] = true,
							}, -- [21]
							{
								["action"] = "stormstrike",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 10",
								["action"] = "windfury_totem",
							}, -- [23]
							{
								["action"] = "ice_strike",
								["enabled"] = true,
							}, -- [24]
							{
								["action"] = "lava_lash",
								["enabled"] = true,
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) & buff.maelstrom_weapon.stack >= 5",
								["action"] = "elemental_blast",
							}, -- [26]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
								["action"] = "lightning_bolt",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in >= 40",
								["action"] = "sundering",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "talent.swirling_maelstrom.enabled & active_dot.flame_shock",
								["action"] = "fire_nova",
							}, -- [30]
							{
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [31]
							{
								["action"] = "crash_lightning",
								["enabled"] = true,
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock",
								["action"] = "fire_nova",
							}, -- [33]
							{
								["action"] = "earth_elemental",
								["enabled"] = true,
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_shock",
								["action"] = "flame_shock",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 30",
								["action"] = "windfury_totem",
							}, -- [36]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up || ! buff.crash_lightning.up",
								["action"] = "crash_lightning",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( active_dot.flame_shock >= active_enemies || active_dot.flame_shock > 5 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack >= ( 5 + 5 * talent.overflowing_maelstrom.enabled ) & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
								["action"] = "lightning_bolt",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.doom_winds_talent.up",
								["action"] = "sundering",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= active_enemies )",
								["action"] = "fire_nova",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! buff.primordial_wave.up",
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.thorims_invocation.enabled & ti_chain_lightning & buff.maelstrom_weapon.stack > 1",
								["action"] = "windstrike",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.lashing_flames.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
								["action"] = "lava_lash",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
								["action"] = "lava_lash",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! ticking",
								["action"] = "flame_shock",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_nova.enabled & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.hailstorm.enabled",
								["action"] = "ice_strike",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
								["action"] = "frost_shock",
							}, -- [12]
							{
								["action"] = "sundering",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 4",
								["action"] = "fire_nova",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.lashing_flames.enabled",
								["action"] = "lava_lash",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 3",
								["action"] = "fire_nova",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack = 10 & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
								["action"] = "elemental_blast",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack = 10",
								["action"] = "chain_lightning",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.cl_crash_lightning.up",
								["action"] = "crash_lightning",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up & buff.ashen_catalyst.stack = 8",
								["action"] = "lava_lash",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "windstrike",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up & ( buff.converging_storms.stack = 6 || ( set_bonus.tier29_2pc & buff.maelstrom_of_elements.down & buff.maelstrom_weapon.stack <= 5 ) )",
								["action"] = "stormstrike",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.molten_assault.enabled",
								["action"] = "lava_lash",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "talent.swirling_maelstrom.enabled",
								["action"] = "ice_strike",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "stormstrike",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "ice_strike",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "lava_lash",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack >= 5 & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
								["action"] = "elemental_blast",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 2",
								["action"] = "fire_nova",
							}, -- [29]
							{
								["action"] = "crash_lightning",
								["enabled"] = true,
							}, -- [30]
							{
								["action"] = "windstrike",
								["enabled"] = true,
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "talent.molten_assault.enabled",
								["action"] = "lava_lash",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "talent.swirling_maelstrom.enabled",
								["action"] = "ice_strike",
							}, -- [33]
							{
								["action"] = "stormstrike",
								["enabled"] = true,
							}, -- [34]
							{
								["action"] = "ice_strike",
								["enabled"] = true,
							}, -- [35]
							{
								["action"] = "lava_lash",
								["enabled"] = true,
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_shock",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [37]
							{
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "chain_lightning",
							}, -- [39]
							{
								["action"] = "earth_elemental",
								["enabled"] = true,
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 30",
								["action"] = "windfury_totem",
							}, -- [41]
						},
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "( talent.ascendance.enabled & raid_event.adds.in >= 90 & cooldown.ascendance.remains < 10 ) || ( talent.hot_hand.enabled & buff.molten_weapon.up ) || buff.icy_edge.up || ( talent.stormflurry.enabled & buff.crackling_surge.up ) || active_enemies > 1 || fight_remains < 30",
								["action"] = "potion",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "interrupt of casts.",
								["action"] = "wind_shear",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "settings.hostile_dispel",
								["action"] = "purge",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "settings.hostile_dispel",
								["action"] = "greater_purge",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "the_first_sigil",
								["criteria"] = "( talent.ascendance.enabled & raid_event.adds.in >= 90 & cooldown.ascendance.remains < 10 ) || ( talent.hot_hand.enabled & buff.molten_weapon.up ) || buff.icy_edge.up || ( talent.stormflurry.enabled & buff.crackling_surge.up ) || active_enemies > 1 || fight_remains < 30",
								["name"] = "the_first_sigil",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "cache_of_acquired_treasures",
								["criteria"] = "buff.acquired_sword.up || fight_remains < 25",
								["name"] = "cache_of_acquired_treasures",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up || fight_remains < 31 || raid_event.adds.in < 16 || active_enemies > 1",
								["name"] = "scars_of_fraternal_strife",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["criteria"] = "! variable.trinket1_is_weird",
								["slots"] = "trinket1",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "trinket2",
								["criteria"] = "! variable.trinket2_is_weird",
								["slots"] = "trinket2",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "blood_fury",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
								["action"] = "berserking",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "fireblood",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "ancestral_call",
							}, -- [13]
							{
								["action"] = "feral_spirit",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "( ti_lightning_bolt & active_enemies = 1 & raid_event.adds.in >= 90 ) || ( ti_chain_lightning & active_enemies > 1 )",
								["action"] = "ascendance",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in >= 90 || active_enemies > 1",
								["action"] = "doom_winds",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "if only one enemy, priority follows the 'single' action list.",
								["criteria"] = "active_enemies = 1",
								["list_name"] = "single",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "on multiple enemies, the priority follows the 'aoe' action list.",
								["criteria"] = "active_enemies > 1",
								["list_name"] = "aoe",
							}, -- [18]
						},
						["precombat"] = {
							{
								["action"] = "windfury_weapon",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "flametongue_weapon",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
								["action"] = "lightning_shield",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
								["action"] = "earth_shield",
							}, -- [4]
							{
								["action"] = "windfury_totem",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.is.the_first_sigil || trinket.t1.is.scars_of_fraternal_strife || trinket.t1.is.cache_of_acquired_treasures",
								["var_name"] = "trinket1_is_weird",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.is.the_first_sigil || trinket.t2.is.scars_of_fraternal_strife || trinket.t2.is.cache_of_acquired_treasures",
								["var_name"] = "trinket2_is_weird",
							}, -- [7]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'precombat' required some automated changes.\nLine 6: Converted 'trinket.1.is.the_first_sigil' to 'trinket.t1.is.the_first_sigil' (1x).\nLine 6: Converted 'trinket.1.is.scars_of_fraternal_strife' to 'trinket.t1.is.scars_of_fraternal_strife' (1x).\nLine 6: Converted 'trinket.1.is.cache_of_acquired_treasures' to 'trinket.t1.is.cache_of_acquired_treasures' (1x).\nLine 7: Converted 'trinket.2.is.the_first_sigil' to 'trinket.t2.is.the_first_sigil' (1x).\nLine 7: Converted 'trinket.2.is.scars_of_fraternal_strife' to 'trinket.t2.is.scars_of_fraternal_strife' (1x).\nLine 7: Converted 'trinket.2.is.cache_of_acquired_treasures' to 'trinket.t2.is.cache_of_acquired_treasures' (1x).\n\nImported 4 action lists.\n",
					["profile"] = "actions.precombat+=/windfury_weapon\nactions.precombat+=/flametongue_weapon\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/windfury_totem\nactions.precombat+=/variable,name=trinket1_is_weird,value=trinket.1.is.the_first_sigil||trinket.1.is.scars_of_fraternal_strife||trinket.1.is.cache_of_acquired_treasures\nactions.precombat+=/variable,name=trinket2_is_weird,value=trinket.2.is.the_first_sigil||trinket.2.is.scars_of_fraternal_strife||trinket.2.is.cache_of_acquired_treasures\n\nactions+=/potion,if=(talent.ascendance.enabled&raid_event.adds.in>=90&cooldown.ascendance.remains<10)||(talent.hot_hand.enabled&buff.molten_weapon.up)||buff.icy_edge.up||(talent.stormflurry.enabled&buff.crackling_surge.up)||active_enemies>1||fight_remains<30\n# interrupt of casts.\nactions+=/wind_shear\nactions+=/purge,if=settings.hostile_dispel\nactions+=/greater_purge,if=settings.hostile_dispel\nactions+=/use_item,name=the_first_sigil,if=(talent.ascendance.enabled&raid_event.adds.in>=90&cooldown.ascendance.remains<10)||(talent.hot_hand.enabled&buff.molten_weapon.up)||buff.icy_edge.up||(talent.stormflurry.enabled&buff.crackling_surge.up)||active_enemies>1||fight_remains<30\nactions+=/use_item,name=cache_of_acquired_treasures,if=buff.acquired_sword.up||fight_remains<25\nactions+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up||fight_remains<31||raid_event.adds.in<16||active_enemies>1\nactions+=/use_items,slots=trinket1,if=!variable.trinket1_is_weird\nactions+=/use_items,slots=trinket2,if=!variable.trinket2_is_weird\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/feral_spirit\nactions+=/ascendance,if=(ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=90)||(ti_chain_lightning&active_enemies>1)\nactions+=/doom_winds,if=raid_event.adds.in>=90||active_enemies>1\n# if only one enemy, priority follows the 'single' action list.\nactions+=/call_action_list,name=single,if=active_enemies=1\n# on multiple enemies, the priority follows the 'aoe' action list.\nactions+=/call_action_list,name=aoe,if=active_enemies>1\n\nactions.single=windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>=1\nactions.single+=/lava_lash,if=buff.hot_hand.up||buff.ashen_catalyst.stack=8||(buff.ashen_catalyst.stack>=5&buff.maelstrom_of_elements.up&buff.maelstrom_weapon.stack<=6)\nactions.single+=/windfury_totem,if=!buff.windfury_totem.up\nactions.single+=/stormstrike,if=buff.doom_winds_talent.up\nactions.single+=/crash_lightning,if=buff.doom_winds_talent.up\nactions.single+=/ice_strike,if=buff.doom_winds_talent.up\nactions.single+=/sundering,if=buff.doom_winds_talent.up\nactions.single+=/primordial_wave,if=buff.primordial_wave.down&(raid_event.adds.in>42||raid_event.adds.in<6)\nactions.single+=/flame_shock,if=!ticking\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.up&raid_event.adds.in>buff.primordial_wave.remains&(!buff.splintered_elements.up||fight_remains<=12)\nactions.single+=/elemental_blast,if=talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)&buff.maelstrom_weapon.stack>=8\nactions.single+=/ice_strike,if=talent.hailstorm.enabled\nactions.single+=/stormstrike,if=set_bonus.tier29_2pc&buff.maelstrom_of_elements.down&buff.maelstrom_weapon.stack<=5\nactions.single+=/frost_shock,if=buff.hailstorm.up\nactions.single+=/lava_lash,if=talent.molten_assault.enabled&dot.flame_shock.refreshable\nactions.single+=/windstrike,if=talent.deeply_rooted_elements.enabled||buff.earthen_weapon.up||buff.legacy_of_the_frost_witch.up\nactions.single+=/stormstrike,if=talent.deeply_rooted_elements.enabled||buff.earthen_weapon.up||buff.legacy_of_the_frost_witch.up\nactions.single+=/elemental_blast,if=(talent.elemental_spirits.enabled&buff.maelstrom_weapon.stack=10)||(!talent.elemental_spirits.enabled&buff.maelstrom_weapon.stack>=5)\nactions.single+=/lava_burst,if=buff.maelstrom_weapon.stack>=5\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack=10&buff.primordial_wave.down\nactions.single+=/windstrike\nactions.single+=/stormstrike\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<10\nactions.single+=/ice_strike\nactions.single+=/lava_lash\nactions.single+=/elemental_blast,if=talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)&buff.maelstrom_weapon.stack>=5\nactions.single+=/bag_of_tricks\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/sundering,if=raid_event.adds.in>=40\nactions.single+=/fire_nova,if=talent.swirling_maelstrom.enabled&active_dot.flame_shock\nactions.single+=/frost_shock\nactions.single+=/crash_lightning\nactions.single+=/fire_nova,if=active_dot.flame_shock\nactions.single+=/earth_elemental\nactions.single+=/flame_shock,if=settings.filler_shock\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<30\n\nactions.aoe+=/crash_lightning,if=buff.doom_winds_talent.up||!buff.crash_lightning.up\nactions.aoe+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||active_dot.flame_shock>5)&buff.primordial_wave.up&buff.maelstrom_weapon.stack>=(5+5*talent.overflowing_maelstrom.enabled)&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.aoe+=/sundering,if=buff.doom_winds_talent.up\nactions.aoe+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=active_enemies)\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\nactions.aoe+=/windstrike,if=talent.thorims_invocation.enabled&ti_chain_lightning&buff.maelstrom_weapon.stack>1\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/lava_lash,if=talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/flame_shock,if=!ticking\nactions.aoe+=/flame_shock,cycle_targets=1,if=talent.fire_nova.enabled&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/ice_strike,if=talent.hailstorm.enabled\nactions.aoe+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe+=/sundering\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=4\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack=10&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack=10\nactions.aoe+=/crash_lightning,if=buff.cl_crash_lightning.up\nactions.aoe+=/lava_lash,if=buff.crash_lightning.up&buff.ashen_catalyst.stack=8\nactions.aoe+=/windstrike,if=buff.crash_lightning.up\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up&(buff.converging_storms.stack=6||(set_bonus.tier29_2pc&buff.maelstrom_of_elements.down&buff.maelstrom_weapon.stack<=5))\nactions.aoe+=/lava_lash,if=buff.crash_lightning.up,if=talent.molten_assault.enabled\nactions.aoe+=/ice_strike,if=buff.crash_lightning.up,if=talent.swirling_maelstrom.enabled\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up\nactions.aoe+=/ice_strike,if=buff.crash_lightning.up\nactions.aoe+=/lava_lash,if=buff.crash_lightning.up\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack>=5&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=2\nactions.aoe+=/crash_lightning\nactions.aoe+=/windstrike\nactions.aoe+=/lava_lash,if=talent.molten_assault.enabled\nactions.aoe+=/ice_strike,if=talent.swirling_maelstrom.enabled\nactions.aoe+=/stormstrike\nactions.aoe+=/ice_strike\nactions.aoe+=/lava_lash\nactions.aoe+=/flame_shock,cycle_targets=1,if=settings.filler_shock\nactions.aoe+=/frost_shock\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/earth_elemental\nactions.aoe+=/windfury_totem,if=buff.windfury_totem.remains<30",
					["author"] = "SimC",
				},
				["Elemental"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221202,
					["spec"] = 262,
					["desc"] = "",
					["profile"] = "# Ensure weapon enchant is applied.\nactions.precombat+=/flametongue_weapon,if=talent.improved_flametongue_weapon.enabled\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/potion\n\n# Executed every time the actor is available.\n# Interrupt of casts.\nactions+=/wind_shear\n# Enable more movement.\nactions=spiritwalkers_grace,moving=1,if=movement.distance>6\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/bag_of_tricks,if=!talent.ascendance.enabled||!buff.ascendance.up\nactions+=/use_items\nactions+=/meteor\nactions+=/tempest,if=buff.call_lightning.up\nactions+=/vesper_totem\nactions+=/fae_transfusion,if=action.fae_transfusion.known&!runeforge.seeds_of_rampant_growth.equipped&(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up)&spell_targets.chain_lightning<3\nactions+=/fae_transfusion,if=action.fae_transfusion.known&runeforge.seeds_of_rampant_growth.equipped&(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up||spell_targets.chain_lightning>=3)&(cooldown.fire_elemental.remains>20||cooldown.storm_elemental.remains>20)\nactions+=/natures_swiftness\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2&(spell_targets.chain_lightning>2||spell_targets.lava_beam>2)\nactions+=/run_action_list,name=single_target\n\n# Keep your cooldowns rolling.\nactions.aoe=fire_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/storm_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/stormkeeper,if=!buff.stormkeeper.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&buff.surge_of_power.up&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled\n# Spread Flame Shock using Surge of Power.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&(!talent.lightning_rod.enabled||talent.skybreakers_fiery_demise.enabled)\n# Spread Flame Shock against low target counts if Master of the Elements was selected.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled\n# Spread Flame Shock to gamble on Deeply Rooted Element procs.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled\n# JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg\nactions.aoe+=/ascendance\n# Keep your cooldowns rolling.\nactions.aoe+=/liquid_magma_totem\n# Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.\nactions.aoe+=/lava_burst,cycle_targets=1,if=cooldown_react&buff.lava_surge.up&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(maelstrom>=60-5*talent.eye_of_the_storm.rank-2*talent.flow_of_power.enabled)&(!talent.echoes_of_great_sundering.enabled||buff.echoes_of_great_sundering.up)&(!buff.ascendance.up&active_enemies>3&talent.unrelenting_calamity.enabled||active_enemies>3&!talent.unrelenting_calamity.enabled||active_enemies=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&active_enemies>3&(spell_targets.chain_lightning>3||spell_targets.lava_beam>3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled&active_enemies=3&(spell_targets.chain_lightning=3||spell_targets.lava_beam=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=buff.echoes_of_great_sundering.up\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/elemental_blast,cycle_targets=1,if=(talent.echoes_of_great_sundering.rank>1||legendary.echoes_of_great_sundering.enabled)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/elemental_blast,if=(talent.echoes_of_great_sundering.rank>1||legendary.echoes_of_great_sundering.enabled)\n# Elemental Blast is stronger than Earthquake against 3 targets.\nactions.aoe+=/elemental_blast,if=active_enemies=3&!talent.echoes_of_great_sundering.enabled\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/earth_shock,cycle_targets=1,if=(talent.echoes_of_great_sundering.rank>1||legendary.echoes_of_great_sundering.enabled)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earth_shock,if=(talent.echoes_of_great_sundering.rank>1||legendary.echoes_of_great_sundering.enabled)\n# Stormkeeper is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.stormkeeper.up\n# Stormkeeper is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.power_of_the_maelstrom.up\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.power_of_the_maelstrom.up\n# Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.\nactions.aoe+=/lava_beam,if=active_enemies>=6&buff.surge_of_power.up\n# Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.\nactions.aoe+=/chain_lightning,if=active_enemies>=6&buff.surge_of_power.up\n# Proc Deeply Rooted Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&buff.lava_surge.up&talent.deeply_rooted_elements.enabled&buff.windspeakers_lava_resurgence.up\n# Consume Master of the Elements with Lava Beam.\nactions.aoe+=/lava_beam,if=buff.master_of_the_elements.up\n# Proc Master of the Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&active_enemies=3&talent.master_of_the_elements.enabled\n# Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.\nactions.aoe+=/lava_burst,if=buff.lava_surge.up&talent.deeply_rooted_elements.enabled\n# Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.\nactions.aoe+=/icefury,if=talent.electrified_shocks.enabled&active_enemies<5\n# Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.\nactions.aoe+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&!debuff.electrified_shocks.up&active_enemies<5\nactions.aoe+=/lava_beam\nactions.aoe+=/chain_lightning\nactions.aoe+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.aoe+=/frost_shock,moving=1\n\n# Keep your cooldowns rolling.\nactions.single_target=fire_elemental\n# Keep your cooldowns rolling.\nactions.single_target+=/storm_elemental\n# Reset LMT CD as early as possible.\nactions.single_target+=/totemic_recall,if=cooldown.liquid_magma_totem.remains>45\n# Keep your cooldowns rolling.\nactions.single_target+=/liquid_magma_totem\n# Use Primordial Wave as much as possible without wasting buffs.\nactions.single_target+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&!buff.splintered_elements.up\nactions.single_target+=/flame_shock,cycle_targets=1,if=active_enemies=1&refreshable&!buff.surge_of_power.up\n# Spread Flame Shock to multiple targets only if talents were selected that benefit from it.\nactions.single_target+=/flame_shock,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&refreshable&!buff.surge_of_power.up&(talent.deeply_rooted_elements.enabled||talent.ascendance.enabled||talent.primordial_wave.enabled||talent.searing_flames.enabled||talent.magma_chamber.enabled),cycle_targets=1\nactions.single_target+=/stormkeeper,if=!buff.stormkeeper.up&!buff.ascendance.up\nactions.single_target+=/ascendance,if=!buff.stormkeeper.up\nactions.single_target+=/cancel_buff,name=lava_surge,if=buff.stormkeeper.up&buff.surge_of_power.up\nactions.single_target+=/lava_burst,if=buff.stormkeeper.up&buff.surge_of_power.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Buff stormkeeper with MotE when not using Surge.\nactions.single_target+=/lava_burst,if=buff.stormkeeper.up&!buff.master_of_the_elements.up&!talent.surge_of_power.enabled&talent.master_of_the_elements.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&buff.master_of_the_elements.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&!talent.master_of_the_elements.enabled\n# Surge of Power is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.surge_of_power.up\nactions.single_target+=/icefury,if=talent.electrified_shocks.enabled\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&(!debuff.electrified_shocks.up||buff.icefury.remains<=gcd)\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&maelstrom>=50&debuff.electrified_shocks.remains<2*gcd&buff.stormkeeper.up\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.power_of_the_maelstrom.up\n# Windspeaker's Lava Resurgence is strong. Don't sit on it.\nactions.single_target+=/lava_burst,if=buff.windspeakers_lava_resurgence.up\n# Lava Surge is neat. Utilize it.\nactions.single_target+=/lava_burst,if=cooldown_react&buff.lava_surge.up\n# Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.\nactions.single_target+=/lava_burst,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&maelstrom>=50&!talent.swelling_maelstrom.enabled&maelstrom<=80\n# Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.\nactions.single_target+=/lava_burst,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&maelstrom>=50&talent.swelling_maelstrom.enabled&maelstrom<=130\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.\nactions.single_target+=/earthquake,if=(legendary.echoes_of_great_sundering.enabled||talent.echoes_of_great_sundering.rank>1)&buff.echoes_of_great_sundering.up&(!talent.elemental_blast.enabled&active_enemies<2||active_enemies>1)\n# Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.\nactions.single_target+=/earthquake,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled\nactions.single_target+=/elemental_blast\nactions.single_target+=/earth_shock\n# Utilize present buffs.\nactions.single_target+=/lava_burst,cycle_targets=1,if=buff.flux_melting.up&active_enemies>1\n# Single target Lava Burst is stronk.\nactions.single_target+=/lava_burst,if=active_enemies=1&talent.deeply_rooted_elements.enabled\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.flux_melting.enabled&!buff.flux_melting.up\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&(talent.electrified_shocks.enabled&!debuff.electrified_shocks.up||buff.icefury.remains<6)\n# Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.\nactions.single_target+=/lightning_bolt,if=buff.power_of_the_maelstrom.up&talent.unrelenting_calamity.enabled\nactions.single_target+=/icefury\n# Spam Lightning Bolt if Storm Elemental is active. But honor all previous priorities.\nactions.single_target+=/lightning_bolt,if=pet.storm_elemental.active&debuff.lightning_rod.up&(debuff.electrified_shocks.up||buff.power_of_the_maelstrom.up)\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.master_of_the_elements.up&!buff.lava_surge.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled&cooldown.lava_burst.charges_fractional<1.0&talent.echoes_of_the_elements.enabled\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/lightning_bolt,if=buff.master_of_the_elements.up&!buff.lava_surge.up&(cooldown.lava_burst.charges_fractional<1.0&talent.echoes_of_the_elements.enabled)\nactions.single_target+=/lava_burst,cycle_targetrs=1,if=dot.flame_shock.remains>2\n# Use your Icefury buffs if you didn't improve the talent.\nactions.single_target+=/frost_shock,if=buff.icefury.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled\n# Casting Chain Lightning at two targets is mor efficient than Lightning Bolt.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Filler spell. Always available. Always the bottom line.\nactions.single_target+=/lightning_bolt\nactions.single_target+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.single_target+=/flame_shock,moving=1,if=movement.distance>6\n# Frost Shock is our movement filler.\nactions.single_target+=/frost_shock,moving=1",
					["version"] = 20221202,
					["warnings"] = "Imported 4 action lists.\n",
					["lists"] = {
						["single_target"] = {
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "fire_elemental",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "storm_elemental",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "totemic_recall",
								["description"] = "Reset LMT CD as early as possible.",
								["criteria"] = "cooldown.liquid_magma_totem.remains > 45",
							}, -- [3]
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "liquid_magma_totem",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
								["description"] = "Use Primordial Wave as much as possible without wasting buffs.",
								["criteria"] = "! buff.primordial_wave.up & ! buff.splintered_elements.up",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & refreshable & ! buff.surge_of_power.up",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & refreshable & ! buff.surge_of_power.up & ( talent.deeply_rooted_elements.enabled || talent.ascendance.enabled || talent.primordial_wave.enabled || talent.searing_flames.enabled || talent.magma_chamber.enabled )",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock to multiple targets only if talents were selected that benefit from it.",
								["action"] = "flame_shock",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! buff.stormkeeper.up & ! buff.ascendance.up",
								["action"] = "stormkeeper",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! buff.stormkeeper.up",
								["action"] = "ascendance",
							}, -- [9]
							{
								["enabled"] = true,
								["buff_name"] = "lava_surge",
								["criteria"] = "buff.stormkeeper.up & buff.surge_of_power.up",
								["action"] = "cancel_buff",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.up & buff.surge_of_power.up",
								["action"] = "lava_burst",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "lava_beam",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "chain_lightning",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Buff stormkeeper with MotE when not using Surge.",
								["criteria"] = "buff.stormkeeper.up & ! buff.master_of_the_elements.up & ! talent.surge_of_power.enabled & talent.master_of_the_elements.enabled",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & buff.master_of_the_elements.up",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "Surge of Power is strong and should be used.",
								["criteria"] = "buff.surge_of_power.up",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "talent.electrified_shocks.enabled",
								["action"] = "icefury",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ( ! debuff.electrified_shocks.up || buff.icefury.remains <= gcd.max )",
								["action"] = "frost_shock",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & maelstrom >= 50 & debuff.electrified_shocks.remains < 2 * gcd.max & buff.stormkeeper.up",
								["action"] = "frost_shock",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.power_of_the_maelstrom.up",
								["action"] = "lava_beam",
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Windspeaker's Lava Resurgence is strong. Don't sit on it.",
								["criteria"] = "buff.windspeakers_lava_resurgence.up",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Lava Surge is neat. Utilize it.",
								["criteria"] = "cooldown_react & buff.lava_surge.up",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.",
								["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & maelstrom >= 50 & ! talent.swelling_maelstrom.enabled & maelstrom <= 80",
							}, -- [24]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.",
								["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & maelstrom >= 50 & talent.swelling_maelstrom.enabled & maelstrom <= 130",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "earthquake",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.",
								["criteria"] = "( legendary.echoes_of_great_sundering.enabled || talent.echoes_of_great_sundering.rank > 1 ) & buff.echoes_of_great_sundering.up & ( ! talent.elemental_blast.enabled & active_enemies < 2 || active_enemies > 1 )",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "earthquake",
								["description"] = "Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.",
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & ! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled",
							}, -- [27]
							{
								["action"] = "elemental_blast",
								["enabled"] = true,
							}, -- [28]
							{
								["action"] = "earth_shock",
								["enabled"] = true,
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
								["description"] = "Utilize present buffs.",
								["criteria"] = "buff.flux_melting.up & active_enemies > 1",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Single target Lava Burst is stronk.",
								["criteria"] = "active_enemies = 1 & talent.deeply_rooted_elements.enabled",
							}, -- [31]
							{
								["enabled"] = true,
								["action"] = "frost_shock",
								["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
								["criteria"] = "buff.icefury.up & talent.flux_melting.enabled & ! buff.flux_melting.up",
							}, -- [32]
							{
								["enabled"] = true,
								["action"] = "frost_shock",
								["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
								["criteria"] = "buff.icefury.up & ( talent.electrified_shocks.enabled & ! debuff.electrified_shocks.up || buff.icefury.remains < 6 )",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.",
								["criteria"] = "buff.power_of_the_maelstrom.up & talent.unrelenting_calamity.enabled",
							}, -- [34]
							{
								["action"] = "icefury",
								["enabled"] = true,
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "Spam Lightning Bolt if Storm Elemental is active. But honor all previous priorities.",
								["criteria"] = "pet.storm_elemental.active & debuff.lightning_rod.up & ( debuff.electrified_shocks.up || buff.power_of_the_maelstrom.up )",
							}, -- [36]
							{
								["enabled"] = true,
								["action"] = "frost_shock",
								["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
								["criteria"] = "buff.icefury.up & buff.master_of_the_elements.up & ! buff.lava_surge.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled & cooldown.lava_burst.charges_fractional < 1.0 & talent.echoes_of_the_elements.enabled",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "lightning_bolt",
								["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
								["criteria"] = "buff.master_of_the_elements.up & ! buff.lava_surge.up & ( cooldown.lava_burst.charges_fractional < 1.0 & talent.echoes_of_the_elements.enabled )",
							}, -- [38]
							{
								["enabled"] = true,
								["cycle_targetrs"] = "1",
								["criteria"] = "dot.flame_shock.remains > 2",
								["action"] = "lava_burst",
							}, -- [39]
							{
								["enabled"] = true,
								["action"] = "frost_shock",
								["description"] = "Use your Icefury buffs if you didn't improve the talent.",
								["criteria"] = "buff.icefury.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled",
							}, -- [40]
							{
								["enabled"] = true,
								["action"] = "chain_lightning",
								["description"] = "Casting Chain Lightning at two targets is mor efficient than Lightning Bolt.",
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
							}, -- [41]
							{
								["enabled"] = true,
								["description"] = "Filler spell. Always available. Always the bottom line.",
								["action"] = "lightning_bolt",
							}, -- [42]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["enabled"] = true,
								["criteria"] = "refreshable",
							}, -- [43]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["moving"] = 1,
								["criteria"] = "movement.distance > 6",
							}, -- [44]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "frost_shock",
								["moving"] = 1,
								["description"] = "Frost Shock is our movement filler.",
							}, -- [45]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "fire_elemental",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "storm_elemental",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "stormkeeper",
								["description"] = "Keep your cooldowns rolling.",
								["criteria"] = "! buff.stormkeeper.up",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
								["criteria"] = "! buff.primordial_wave.up & buff.surge_of_power.up & ! buff.splintered_elements.up",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
								["criteria"] = "! buff.primordial_wave.up & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & ! buff.splintered_elements.up",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
								["criteria"] = "! buff.primordial_wave.up & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock using Surge of Power.",
								["criteria"] = "refreshable & buff.surge_of_power.up & ( ! talent.lightning_rod.enabled || talent.skybreakers_fiery_demise.enabled )",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock against low target counts if Master of the Elements was selected.",
								["criteria"] = "refreshable & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["description"] = "Spread Flame Shock to gamble on Deeply Rooted Element procs.",
								["criteria"] = "refreshable & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg",
								["action"] = "ascendance",
							}, -- [10]
							{
								["enabled"] = true,
								["description"] = "Keep your cooldowns rolling.",
								["action"] = "liquid_magma_totem",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
								["description"] = "Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.",
								["criteria"] = "cooldown_react & buff.lava_surge.up & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( maelstrom >= 60 - 5 * talent.eye_of_the_storm.rank - 2 * talent.flow_of_power.enabled ) & ( ! talent.echoes_of_great_sundering.enabled || buff.echoes_of_great_sundering.up ) & ( ! buff.ascendance.up & active_enemies > 3 & talent.unrelenting_calamity.enabled || active_enemies > 3 & ! talent.unrelenting_calamity.enabled || active_enemies = 3 )",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "earthquake",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
								["criteria"] = "! talent.echoes_of_great_sundering.enabled & active_enemies > 3 & ( spell_targets.chain_lightning > 3 || spell_targets.lava_beam > 3 )",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "earthquake",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
								["criteria"] = "! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled & active_enemies = 3 & ( spell_targets.chain_lightning = 3 || spell_targets.lava_beam = 3 )",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "earthquake",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
								["criteria"] = "buff.echoes_of_great_sundering.up",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "elemental_blast",
								["cycle_targets"] = 1,
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
								["criteria"] = "( talent.echoes_of_great_sundering.rank > 1 || legendary.echoes_of_great_sundering.enabled )",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "elemental_blast",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
								["criteria"] = "( talent.echoes_of_great_sundering.rank > 1 || legendary.echoes_of_great_sundering.enabled )",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "elemental_blast",
								["description"] = "Elemental Blast is stronger than Earthquake against 3 targets.",
								["criteria"] = "active_enemies = 3 & ! talent.echoes_of_great_sundering.enabled",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "earth_shock",
								["cycle_targets"] = 1,
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
								["criteria"] = "( talent.echoes_of_great_sundering.rank > 1 || legendary.echoes_of_great_sundering.enabled )",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "earth_shock",
								["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
								["criteria"] = "( talent.echoes_of_great_sundering.rank > 1 || legendary.echoes_of_great_sundering.enabled )",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "lava_beam",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "buff.stormkeeper.up",
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "chain_lightning",
								["description"] = "Stormkeeper is strong and should be used.",
								["criteria"] = "buff.stormkeeper.up",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "lava_beam",
								["description"] = "Power of the Maelstrom is strong and should be used.",
								["criteria"] = "buff.power_of_the_maelstrom.up",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "chain_lightning",
								["description"] = "Power of the Maelstrom is strong and should be used.",
								["criteria"] = "buff.power_of_the_maelstrom.up",
							}, -- [24]
							{
								["enabled"] = true,
								["action"] = "lava_beam",
								["description"] = "Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.",
								["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "chain_lightning",
								["description"] = "Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.",
								["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
								["description"] = "Proc Deeply Rooted Elements against 3 targets.",
								["criteria"] = "dot.flame_shock.remains > 0 & buff.lava_surge.up & talent.deeply_rooted_elements.enabled & buff.windspeakers_lava_resurgence.up",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "lava_beam",
								["description"] = "Consume Master of the Elements with Lava Beam.",
								["criteria"] = "buff.master_of_the_elements.up",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
								["description"] = "Proc Master of the Elements against 3 targets.",
								["criteria"] = "dot.flame_shock.remains > 0 & active_enemies = 3 & talent.master_of_the_elements.enabled",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["description"] = "Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.",
								["criteria"] = "buff.lava_surge.up & talent.deeply_rooted_elements.enabled",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "icefury",
								["description"] = "Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.",
								["criteria"] = "talent.electrified_shocks.enabled & active_enemies < 5",
							}, -- [31]
							{
								["enabled"] = true,
								["action"] = "frost_shock",
								["description"] = "Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.",
								["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ! debuff.electrified_shocks.up & active_enemies < 5",
							}, -- [32]
							{
								["action"] = "lava_beam",
								["enabled"] = true,
							}, -- [33]
							{
								["action"] = "chain_lightning",
								["enabled"] = true,
							}, -- [34]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["enabled"] = true,
								["criteria"] = "refreshable",
							}, -- [35]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [36]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Interrupt of casts.",
								["action"] = "wind_shear",
							}, -- [1]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "spiritwalkers_grace",
								["moving"] = 1,
								["description"] = "Enable more movement.",
								["criteria"] = "movement.distance > 6",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "blood_fury",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
								["action"] = "berserking",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "fireblood",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "ancestral_call",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || ! buff.ascendance.up",
								["action"] = "bag_of_tricks",
							}, -- [7]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "meteor",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_lightning.up",
								["action"] = "tempest",
							}, -- [10]
							{
								["action"] = "vesper_totem",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "action.fae_transfusion.known & ! runeforge.seeds_of_rampant_growth.equipped & ( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up ) & spell_targets.chain_lightning < 3",
								["action"] = "fae_transfusion",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "action.fae_transfusion.known & runeforge.seeds_of_rampant_growth.equipped & ( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up || spell_targets.chain_lightning >= 3 ) & ( cooldown.fire_elemental.remains > 20 || cooldown.storm_elemental.remains > 20 )",
								["action"] = "fae_transfusion",
							}, -- [13]
							{
								["action"] = "natures_swiftness",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 2 & ( spell_targets.chain_lightning > 2 || spell_targets.lava_beam > 2 )",
								["list_name"] = "aoe",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "single_target",
							}, -- [16]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["action"] = "flametongue_weapon",
								["description"] = "Ensure weapon enchant is applied.",
								["criteria"] = "talent.improved_flametongue_weapon.enabled",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
								["action"] = "lightning_shield",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
								["action"] = "earth_shield",
							}, -- [3]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["author"] = "SimulationCraft",
				},
				["Feral"] = {
					["builtIn"] = true,
					["date"] = 20221203,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["bloodtalons"] = {
							{
								["enabled"] = true,
								["action"] = "rake",
								["criteria"] = "( refreshable || 1.4 * persistent_multiplier > dot.rake.pmultiplier ) & buff.bt_rake.down",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & buff.bt_moonfire.down",
								["action"] = "lunar_inspiration",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_brutal_slash.down",
								["action"] = "brutal_slash",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "thrash_cat",
								["criteria"] = "refreshable & buff.bt_thrash.down",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat > 1 & buff.bt_swipe.down",
								["action"] = "swipe_cat",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_shred.down",
								["action"] = "shred",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_swipe.down",
								["action"] = "swipe_cat",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_thrash.down",
								["action"] = "thrash_cat",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_rake.down & combo_points > 4",
								["action"] = "rake",
							}, -- [9]
						},
						["finisher"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.primal_wrath > 2",
								["action"] = "primal_wrath",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "primal_wrath",
								["criteria"] = "refreshable & spell_targets.primal_wrath > 1",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "rip",
								["criteria"] = "refreshable & target.time_to_die >= settings.rip_duration",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "ferocious_bite",
								["criteria"] = "( active_dot.rip > 0 || target.time_to_die < settings.rip_duration ) & ( ! buff.bs_inc.up || buff.bs_inc.up & ! talent.soul_of_the_forest.enabled )",
								["max_energy"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( active_dot.rip > 0 || target.time_to_die < settings.rip_duration ) & ( buff.bs_inc.up & talent.soul_of_the_forest.enabled )",
								["action"] = "ferocious_bite",
							}, -- [5]
						},
						["clearcasting"] = {
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "thrash_cat",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat > 1",
								["action"] = "swipe_cat",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.brutal_slash > 5 & talent.moment_of_clarity.enabled",
								["action"] = "brutal_slash",
							}, -- [3]
							{
								["action"] = "shred",
								["enabled"] = true,
							}, -- [4]
						},
						["builder"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react",
								["action"] = "run_action_list",
								["list_name"] = "clearcasting",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "rake",
								["criteria"] = "refreshable || ( buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier & dot.rake.duration > 6 )",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "lunar_inspiration",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "thrash_cat",
							}, -- [4]
							{
								["action"] = "brutal_slash",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat > 1",
								["action"] = "swipe_cat",
							}, -- [6]
							{
								["action"] = "shred",
								["enabled"] = true,
							}, -- [7]
						},
						["owlweaving"] = {
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["line_cd"] = "4*gcd",
							}, -- [1]
						},
						["default"] = {
							{
								["action"] = "prowl",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "skull_bash",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "soothe",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "prowl",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "tigers_fury",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.prowl.up || buff.shadowmeld.up",
								["action"] = "rake",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! buff.cat_form.up",
								["action"] = "cat_form",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.bloodtalons.enabled & buff.bloodtalons.down",
								["var_name"] = "need_bt",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldown",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "adaptive_swarm",
								["criteria"] = "( ( ! dot.adaptive_swarm_damage.ticking || dot.adaptive_swarm_damage.remains < 2 ) & ( dot.adaptive_swarm_damage.stack < 3 || ! dot.adaptive_swarm_heal.stack > 1 ) & ! action.adaptive_swarm_heal.in_flight & ! action.adaptive_swarm_damage.in_flight & ! action.adaptive_swarm.in_flight ) & target.time_to_die > 5 || active_enemies > 2 & ! dot.adaptive_swarm_damage.ticking & energy < 35 & target.time_to_die > 5",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "combo_points < 2",
								["action"] = "feral_frenzy",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "spell_targets.swipe_cat > 1 & talent.primal_wrath.enabled",
								["list_name"] = "aoe",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.apex_predators_craving.up",
								["action"] = "ferocious_bite",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "combo_points = 5",
								["list_name"] = "finisher",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.need_bt & ! buff.bs_inc.up",
								["action"] = "call_action_list",
								["list_name"] = "bloodtalons",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "combo_points < 5 & buff.bs_inc.up",
								["list_name"] = "berserk_builders",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "combo_points < 5",
								["list_name"] = "builder",
							}, -- [17]
						},
						["berserk_builders"] = {
							{
								["enabled"] = true,
								["action"] = "rake",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat > 1",
								["action"] = "swipe_cat",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_bt_triggers = 2 & buff.bt_brutal_slash.down",
								["action"] = "brutal_slash",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "lunar_inspiration",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["action"] = "shred",
								["enabled"] = true,
							}, -- [5]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["action"] = "primal_wrath",
								["description"] = "AoE",
								["criteria"] = "combo_points = 5",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.apex_predators_craving.up & buff.sabertooth.down",
								["action"] = "ferocious_bite",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.need_bt & active_bt_triggers >= 1",
								["action"] = "run_action_list",
								["list_name"] = "bloodtalons",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "thrash_cat",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "At this target count BRS also crushes everything except full thrashes",
								["action"] = "brutal_slash",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "rake",
								["cycle_targets"] = 1,
								["criteria"] = "refreshable || active_dot.rake < cycle_enemies",
								["description"] = "This means that a full rake (5.5+ ticks) is stronger up to 10ish targets",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "lunar_inspiration",
								["cycle_targets"] = 1,
								["criteria"] = "refreshable & cycle_enemies - active_dot.lunar_inspiration > 2",
								["description"] = "Full Lis beat Swipe up til around 3-ish targets depending on haste",
							}, -- [7]
							{
								["action"] = "swipe_cat",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "shred",
								["description"] = "If we have BrS and nothing better to cast, check if Thrash DD beats Shred",
								["criteria"] = "action.shred.damage > action.thrash_cat.damage",
							}, -- [9]
							{
								["action"] = "thrash_cat",
								["enabled"] = true,
							}, -- [10]
						},
						["cooldown"] = {
							{
								["action"] = "berserk",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "incarnation_avatar_of_ashamane",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.tigers_fury.up & combo_points < 3 || boss & fight_remains < 5",
								["action"] = "convoke_the_spirits",
							}, -- [3]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.tigers_fury.up & buff.bs_inc.down & combo_points < 4 & buff.sudden_ambush.down & dot.rake.pmultiplier < 1.6 & energy > 40 & druid.rake.ticks_gained_on_refresh > spell_targets.swipe_cat * 2 - 2 & target.time_to_die > 5",
								["action"] = "shadowmeld",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.bs_inc.up || boss & fight_remains < cooldown.bs_inc.remains || boss & fight_remains < 35",
								["action"] = "potion",
							}, -- [6]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [7]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.prowl.down",
								["action"] = "mark_of_the_wild",
							}, -- [1]
							{
								["action"] = "prowl",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "cat_form",
								["enabled"] = true,
							}, -- [3]
						},
					},
					["version"] = 20221203,
					["warnings"] = "Imported 10 action lists.\n",
					["spec"] = 103,
					["profile"] = "actions.precombat+=/mark_of_the_wild,if=buff.prowl.down\nactions.precombat+=/prowl\nactions.precombat+=/cat_form\n\nactions+=/prowl\nactions+=/skull_bash\nactions+=/soothe\nactions+=/prowl\nactions+=/tigers_fury\nactions+=/rake,if=buff.prowl.up||buff.shadowmeld.up\nactions+=/cat_form,if=!buff.cat_form.up\nactions+=/variable,name=need_bt,value=talent.bloodtalons.enabled&buff.bloodtalons.down\nactions+=/call_action_list,name=cooldown\nactions+=/adaptive_swarm,cycle_targets=1,if=((!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&(dot.adaptive_swarm_damage.stack<3||!dot.adaptive_swarm_heal.stack>1)&!action.adaptive_swarm_heal.in_flight&!action.adaptive_swarm_damage.in_flight&!action.adaptive_swarm.in_flight)&target.time_to_die>5||active_enemies>2&!dot.adaptive_swarm_damage.ticking&energy<35&target.time_to_die>5\nactions+=/feral_frenzy,if=combo_points<2\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.swipe_cat>1&talent.primal_wrath.enabled\nactions+=/ferocious_bite,if=buff.apex_predators_craving.up\nactions+=/call_action_list,name=finisher,strict=1,if=combo_points=5\nactions+=/call_action_list,name=bloodtalons,if=variable.need_bt&!buff.bs_inc.up\nactions+=/call_action_list,name=berserk_builders,strict=1,if=combo_points<5&buff.bs_inc.up\nactions+=/call_action_list,name=builder,strict=1,if=combo_points<5\n\n# AoE\n## actions.aoe+=/pool_resource,for_next=1\nactions.aoe+=/primal_wrath,if=combo_points=5\nactions.aoe+=/ferocious_bite,if=buff.apex_predators_craving.up&buff.sabertooth.down\nactions.aoe+=/run_action_list,name=bloodtalons,if=variable.need_bt&active_bt_triggers>=1\n## actions.aoe+=/pool_resource,for_next=1\nactions.aoe+=/thrash_cat,cycle_targets=1,if=refreshable\n# At this target count BRS also crushes everything except full thrashes\nactions.aoe+=/brutal_slash\n## actions.aoe+=/pool_resource,for_next=1\n## TODO: actions.aoe+=/rake,target_if=max:dot.rake.ticks_gained_on_refresh.pmult,if=((dot.rake.ticks_gained_on_refresh.pmult*(1+talent.doubleclawed_rake.enabled))>(spell_targets.swipe_cat*0.216+3.32))\n# This means that a full rake (5.5+ ticks) is stronger up to 10ish targets\nactions.aoe+=/rake,cycle_targets=1,if=refreshable||active_dot.rake<cycle_enemies\n## TODO: actions.aoe+=/lunar_inspiration,target_if=max((ticks_gained_on_refresh+1)-(spell_targets.swipe_cat*2.492))\n# Full Lis beat Swipe up til around 3-ish targets depending on haste\nactions.aoe+=/lunar_inspiration,cycle_targets=1,if=refreshable&cycle_enemies-active_dot.lunar_inspiration>2\nactions.aoe+=/swipe_cat\n# If we have BrS and nothing better to cast, check if Thrash DD beats Shred\nactions.aoe+=/shred,if=action.shred.damage>action.thrash_cat.damage\nactions.aoe+=/thrash_cat\n\nactions.bloodtalons+=/rake,cycle_targets=1,if=(refreshable||1.4*persistent_multiplier>dot.rake.pmultiplier)&buff.bt_rake.down\nactions.bloodtalons+=/lunar_inspiration,if=refreshable&buff.bt_moonfire.down\nactions.bloodtalons+=/brutal_slash,if=buff.bt_brutal_slash.down\nactions.bloodtalons+=/thrash_cat,cycle_targets=1,if=refreshable&buff.bt_thrash.down\nactions.bloodtalons+=/swipe_cat,if=spell_targets.swipe_cat>1&buff.bt_swipe.down\nactions.bloodtalons+=/shred,if=buff.bt_shred.down\nactions.bloodtalons+=/swipe_cat,if=buff.bt_swipe.down\nactions.bloodtalons+=/thrash_cat,if=buff.bt_thrash.down\nactions.bloodtalons+=/rake,if=buff.bt_rake.down&combo_points>4\n\nactions.berserk_builders+=/rake,cycle_targets=1,if=refreshable\nactions.berserk_builders+=/swipe_cat,if=spell_targets.swipe_cat>1\nactions.berserk_builders+=/brutal_slash,if=active_bt_triggers=2&buff.bt_brutal_slash.down\nactions.berserk_builders+=/moonfire_cat,cycle_targets=1,if=refreshable\nactions.berserk_builders+=/shred\n\nactions.builder+=/run_action_list,name=clearcasting,if=buff.clearcasting.react\nactions.builder+=/rake,cycle_targets=1,if=refreshable||(buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier&dot.rake.duration>6)\nactions.builder+=/moonfire_cat,target_if=refreshable\n## actions.builder+=/pool_resource,for_next=1\nactions.builder+=/thrash_cat,target_if=refreshable\nactions.builder+=/brutal_slash\nactions.builder+=/swipe_cat,if=spell_targets.swipe_cat>1\nactions.builder+=/shred\n\nactions.clearcasting+=/thrash_cat,if=refreshable\nactions.clearcasting+=/swipe_cat,if=spell_targets.swipe_cat>1\nactions.clearcasting+=/brutal_slash,if=spell_targets.brutal_slash>5&talent.moment_of_clarity.enabled\nactions.clearcasting+=/shred\n\nactions.cooldown+=/berserk\nactions.cooldown+=/incarnation\nactions.cooldown+=/convoke_the_spirits,if=buff.tigers_fury.up&combo_points<3||boss&fight_remains<5\nactions.cooldown+=/berserking\nactions.cooldown+=/shadowmeld,if=buff.tigers_fury.up&buff.bs_inc.down&combo_points<4&buff.sudden_ambush.down&dot.rake.pmultiplier<1.6&energy>40&druid.rake.ticks_gained_on_refresh>spell_targets.swipe_cat*2-2&target.time_to_die>5\nactions.cooldown+=/potion,if=buff.bs_inc.up||boss&fight_remains<cooldown.bs_inc.remains||boss&fight_remains<35\nactions.cooldown+=/use_items\n\nactions.finisher+=/primal_wrath,if=spell_targets.primal_wrath>2\nactions.finisher+=/primal_wrath,cycle_targets=1,if=refreshable&spell_targets.primal_wrath>1\nactions.finisher+=/rip,cycle_targets=1,if=refreshable&target.time_to_die>=settings.rip_duration\n## actions.finisher+=/pool_resource,for_next=1\nactions.finisher+=/ferocious_bite,max_energy=1,if=(active_dot.rip>0||target.time_to_die<settings.rip_duration)&(!buff.bs_inc.up||buff.bs_inc.up&!talent.soul_of_the_forest.enabled)\nactions.finisher+=/ferocious_bite,if=(active_dot.rip>0||target.time_to_die<settings.rip_duration)&(buff.bs_inc.up&talent.soul_of_the_forest.enabled)\n\nactions.owlweaving+=/sunfire,line_cd=4*gcd",
				},
				["Fury"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["single_target"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.whirlwind > 1 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up || raid_event.adds.in < 2 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up",
								["action"] = "whirlwind",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < gcd.max",
								["action"] = "execute",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 )",
								["action"] = "thunderous_roar",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 ) & ( talent.dancing_blades.enabled & buff.dancing_blades.remains < 5 || ! talent.dancing_blades.enabled )",
								["action"] = "odyns_fury",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up",
								["action"] = "execute",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.wrath_and_fury.enabled & buff.enrage.up",
								["action"] = "crushing_blow",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.recklessness.up || buff.enrage.remains < gcd.max || ( rage > 110 & talent.overwhelming_rage.enabled ) || ( rage > 80 & ! talent.overwhelming_rage.enabled )",
								["action"] = "rampage",
							}, -- [7]
							{
								["action"] = "execute",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled & ! talent.wrath_and_fury.enabled",
								["action"] = "bloodbath",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.down || ( talent.annihilator.enabled & ! buff.recklessness.up )",
								["action"] = "bloodthirst",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! talent.annihilator.enabled & buff.enrage.up || talent.tenderize.enabled",
								["action"] = "onslaught",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
								["action"] = "raging_blow",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
								["action"] = "crushing_blow",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.down || ! talent.wrath_and_fury.enabled",
								["action"] = "bloodbath",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled",
								["action"] = "crushing_blow",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "! talent.wrath_and_fury.enabled",
								["action"] = "bloodthirst",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1",
								["action"] = "raging_blow",
							}, -- [17]
							{
								["action"] = "rampage",
								["enabled"] = true,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.annihilator.enabled",
								["action"] = "slam",
							}, -- [19]
							{
								["action"] = "bloodbath",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "raging_blow",
								["enabled"] = true,
							}, -- [21]
							{
								["action"] = "crushing_blow",
								["enabled"] = true,
							}, -- [22]
							{
								["action"] = "whirlwind",
								["enabled"] = true,
							}, -- [23]
							{
								["action"] = "wrecking_throw",
								["enabled"] = true,
							}, -- [24]
							{
								["action"] = "storm_bolt",
								["enabled"] = true,
							}, -- [25]
						},
						["multi_target"] = {
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15 || active_enemies > 1 || boss & fight_remains < 12",
								["action"] = "recklessness",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & talent.titanic_rage.enabled & ( ! buff.meat_cleaver.up || buff.avatar.up || buff.recklessness.up )",
								["action"] = "odyns_fury",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.whirlwind > 1 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up || raid_event.adds.in < 2 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up",
								["action"] = "whirlwind",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < gcd.max",
								["action"] = "execute",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 )",
								["action"] = "thunderous_roar",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & buff.enrage.up & raid_event.adds.in > 15",
								["action"] = "odyns_fury",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.wrath_and_fury.enabled & buff.enrage.up",
								["action"] = "crushing_blow",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up",
								["action"] = "execute",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & raid_event.adds.in > 15",
								["action"] = "odyns_fury",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.recklessness.up || buff.enrage.remains < gcd.max || ( rage > 110 & talent.overwhelming_rage.enabled ) || ( rage > 80 & ! talent.overwhelming_rage.enabled )",
								["action"] = "rampage",
							}, -- [10]
							{
								["action"] = "execute",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled & ! talent.wrath_and_fury.enabled",
								["action"] = "bloodbath",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.down || ( talent.annihilator.enabled & ! buff.recklessness.up )",
								["action"] = "bloodthirst",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.annihilator.enabled & buff.enrage.up || talent.tenderize.enabled",
								["action"] = "onslaught",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
								["action"] = "raging_blow",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
								["action"] = "crushing_blow",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.down || ! talent.wrath_and_fury.enabled",
								["action"] = "bloodbath",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled",
								["action"] = "crushing_blow",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "! talent.wrath_and_fury.enabled",
								["action"] = "bloodthirst",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "charges >= 1",
								["action"] = "raging_blow",
							}, -- [20]
							{
								["action"] = "rampage",
								["enabled"] = true,
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "talent.annihilator.enabled",
								["action"] = "slam",
							}, -- [22]
							{
								["action"] = "bloodbath",
								["enabled"] = true,
							}, -- [23]
							{
								["action"] = "raging_blow",
								["enabled"] = true,
							}, -- [24]
							{
								["action"] = "crushing_blow",
								["enabled"] = true,
							}, -- [25]
							{
								["action"] = "whirlwind",
								["enabled"] = true,
							}, -- [26]
						},
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "time <= 0.5 || movement.distance > 5",
								["action"] = "charge",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( raid_event.movement.distance > 25 & raid_event.movement.in > 45 )",
								["action"] = "heroic_leap",
							}, -- [2]
							{
								["action"] = "pummel",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "conquerors_banner",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.avatar.remains < 3",
								["action"] = "ravager",
							}, -- [7]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.recklessness.up",
								["action"] = "berserking",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.recklessness.down",
								["action"] = "lights_judgment",
							}, -- [10]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.recklessness.down & buff.enrage.up",
								["action"] = "bag_of_tricks",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "talent.titans_torment.enabled & buff.enrage.up & raid_event.adds.in > 15 || ! talent.titans_torment.enabled & ( buff.recklessness.up || boss & fight_remains < 20 )",
								["action"] = "avatar",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! raid_event.adds.exists & ( talent.annihilator.enabled & cooldown.avatar.remains < 1 || cooldown.avatar.remains > 40 || ! talent.avatar.enabled || boss & fight_remains < 12 )",
								["action"] = "recklessness",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "! raid_event.adds.exists & ! talent.annihilator.enabled || boss & fight_remains < 12",
								["action"] = "recklessness",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.enrage.up & ( buff.recklessness.up || buff.avatar.up || boss & fight_remains < 20 || active_enemies > 1 ) & raid_event.adds.in > 15",
								["action"] = "spear_of_bastion",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 2",
								["list_name"] = "multi_target",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "single_target",
							}, -- [19]
						},
						["precombat"] = {
							{
								["toggle"] = "on",
								["action"] = "berserker_stance",
								["enabled"] = true,
							}, -- [1]
							{
								["toggle"] = "on",
								["action"] = "battle_stance",
								["enabled"] = true,
							}, -- [2]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'single_target' required some automated changes.\nLine 1: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 1: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 4: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 4: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 6: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 7: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 7: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 9: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 9: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 10: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 11: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 11: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 12: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 13: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 14: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 15: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 16: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 19: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\n\nThe import for 'multi_target' required some automated changes.\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 3: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 7: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 10: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 10: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 12: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 12: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 13: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 14: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 14: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 15: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 16: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 17: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 18: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 19: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 22: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 14: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 14: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 15: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 15: Converted 'talent.avatar' to 'talent.avatar.enabled' (1x).\nLine 16: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\n\nImported 4 action lists.\n",
					["profile"] = "actions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/battle_stance,toggle=on\n+actions.precombat+=/use_item,name=algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=(raid_event.movement.distance>25&raid_event.movement.in>45)\nactions+=/pummel\nactions+=/potion\nactions+=/conquerors_banner\nactions+=/use_items\nactions+=/ravager,if=cooldown.avatar.remains<3\nactions+=/blood_fury\nactions+=/berserking,if=buff.recklessness.up\nactions+=/lights_judgment,if=buff.recklessness.down\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks,if=buff.recklessness.down&buff.enrage.up\nactions+=/avatar,if=talent.titans_torment&buff.enrage.up&raid_event.adds.in>15||!talent.titans_torment&(buff.recklessness.up||boss&fight_remains<20)\nactions+=/recklessness,if=!raid_event.adds.exists&(talent.annihilator&cooldown.avatar.remains<1||cooldown.avatar.remains>40||!talent.avatar||boss&fight_remains<12)\nactions+=/recklessness,if=!raid_event.adds.exists&!talent.annihilator||boss&fight_remains<12\nactions+=/spear_of_bastion,if=buff.enrage.up&(buff.recklessness.up||buff.avatar.up||boss&fight_remains<20||active_enemies>1)&raid_event.adds.in>15\nactions+=/call_action_list,name=multi_target,strict=1,if=active_enemies>2\nactions+=/call_action_list,name=single_target\n\nactions.multi_target+=/recklessness,if=raid_event.adds.in>15||active_enemies>1||boss&fight_remains<12\nactions.multi_target+=/odyns_fury,if=active_enemies>1&talent.titanic_rage&(!buff.meat_cleaver.up||buff.avatar.up||buff.recklessness.up)\nactions.multi_target+=/whirlwind,if=spell_targets.whirlwind>1&talent.improved_whirlwind&!buff.meat_cleaver.up||raid_event.adds.in<2&talent.improved_whirlwind&!buff.meat_cleaver.up\nactions.multi_target+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<gcd\nactions.multi_target+=/thunderous_roar,if=buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)\nactions.multi_target+=/odyns_fury,if=active_enemies>1&buff.enrage.up&raid_event.adds.in>15\nactions.multi_target+=/crushing_blow,if=talent.wrath_and_fury&buff.enrage.up\nactions.multi_target+=/execute,if=buff.enrage.up\nactions.multi_target+=/odyns_fury,if=buff.enrage.up&raid_event.adds.in>15\nactions.multi_target+=/rampage,if=buff.recklessness.up||buff.enrage.remains<gcd||(rage>110&talent.overwhelming_rage)||(rage>80&!talent.overwhelming_rage)\nactions.multi_target+=/execute\nactions.multi_target+=/bloodbath,if=buff.enrage.up&talent.reckless_abandon&!talent.wrath_and_fury\nactions.multi_target+=/bloodthirst,if=buff.enrage.down||(talent.annihilator&!buff.recklessness.up)\nactions.multi_target+=/onslaught,if=!talent.annihilator&buff.enrage.up||talent.tenderize\nactions.multi_target+=/raging_blow,if=charges>1&talent.wrath_and_fury\nactions.multi_target+=/crushing_blow,if=charges>1&talent.wrath_and_fury\nactions.multi_target+=/bloodbath,if=buff.enrage.down||!talent.wrath_and_fury\nactions.multi_target+=/crushing_blow,if=buff.enrage.up&talent.reckless_abandon\nactions.multi_target+=/bloodthirst,if=!talent.wrath_and_fury\nactions.multi_target+=/raging_blow,if=charges>=1\nactions.multi_target+=/rampage\nactions.multi_target+=/slam,if=talent.annihilator\nactions.multi_target+=/bloodbath\nactions.multi_target+=/raging_blow\nactions.multi_target+=/crushing_blow\nactions.multi_target+=/whirlwind\n\nactions.single_target+=/whirlwind,if=spell_targets.whirlwind>1&talent.improved_whirlwind&!buff.meat_cleaver.up||raid_event.adds.in<2&talent.improved_whirlwind&!buff.meat_cleaver.up\nactions.single_target+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<gcd\nactions.single_target+=/thunderous_roar,if=buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)\nactions.single_target+=/odyns_fury,if=buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)&(talent.dancing_blades&buff.dancing_blades.remains<5||!talent.dancing_blades)\nactions.single_target+=/execute,if=buff.enrage.up\nactions.single_target+=/crushing_blow,if=talent.wrath_and_fury&buff.enrage.up\nactions.single_target+=/rampage,if=buff.recklessness.up||buff.enrage.remains<gcd||(rage>110&talent.overwhelming_rage)||(rage>80&!talent.overwhelming_rage)\nactions.single_target+=/execute\nactions.single_target+=/bloodbath,if=buff.enrage.up&talent.reckless_abandon&!talent.wrath_and_fury\nactions.single_target+=/bloodthirst,if=buff.enrage.down||(talent.annihilator&!buff.recklessness.up)\nactions.single_target+=/onslaught,if=!talent.annihilator&buff.enrage.up||talent.tenderize\nactions.single_target+=/raging_blow,if=charges>1&talent.wrath_and_fury\nactions.single_target+=/crushing_blow,if=charges>1&talent.wrath_and_fury\nactions.single_target+=/bloodbath,if=buff.enrage.down||!talent.wrath_and_fury\nactions.single_target+=/crushing_blow,if=buff.enrage.up&talent.reckless_abandon\nactions.single_target+=/bloodthirst,if=!talent.wrath_and_fury\nactions.single_target+=/raging_blow,if=charges>1\nactions.single_target+=/rampage\nactions.single_target+=/slam,if=talent.annihilator\nactions.single_target+=/bloodbath\nactions.single_target+=/raging_blow\nactions.single_target+=/crushing_blow\nactions.single_target+=/whirlwind\nactions.single_target+=/wrecking_throw\nactions.single_target+=/storm_bolt",
					["spec"] = 72,
				},
				["Affliction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221115,
					["spec"] = 265,
					["desc"] = "",
					["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=dots_ready,value=active_dot.corruption>0&active_dot.agony>0&active_dot.unstable_affliction>0&(!talent.siphon_life.enabled||active_dot.siphon_life>0)&(dot.phantom_singularity.ticking||!talent.phantom_singularity.enabled)\nactions.precombat+=/seed_of_corruption,line_cd=10,if=spell_targets.seed_of_corruption_aoe>=3\nactions.precombat+=/haunt\nactions.precombat+=/soul_swap\nactions.precombat+=/unstable_affliction,if=!ticking\n\n## Executed every time the actor is available.\nactions=spell_lock\nactions+=/devour_magic\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>3\nactions+=/malefic_rapture,if=buff.calamitous_crescendo.up\n# Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.\nactions+=/call_action_list,name=necro_mw,strict=1,if=action.decimating_bolt.known&runeforge.malefic_wrath&active_enemies=1&talent.phantom_singularity\n# Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.\nactions+=/call_action_list,name=trinket_split_check\nactions+=/call_action_list,name=delayed_trinkets\nactions+=/call_action_list,name=stat_trinkets,strict=1,if=(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking||dot.phantom_singularity.ticking)&soul_shard>3||dot.vile_taint.ticking||talent.sow_the_seeds\nactions+=/call_action_list,name=damage_trinkets,if=action.soul_rot.known&(!variable.trinket_split||cooldown.soul_rot.remains>20||(variable.trinket_one&cooldown.soul_rot.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.soul_rot.remains<trinket.2.cooldown.remains))||action.impending_catastrophe.known&(!variable.trinket_split||cooldown.impending_catastrophe.remains>20||(variable.trinket_one&cooldown.impending_catastrophe.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.impending_catastrophe.remains<trinket.2.cooldown.remains))||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&(!variable.trinket_split||cooldown.phantom_singularity.remains>20||(variable.trinket_one&cooldown.phantom_singularity.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.phantom_singularity.remains<trinket.2.cooldown.remains))||!talent.phantom_singularity.enabled&(!variable.trinket_split||cooldown.summon_darkglare.remains>20||(variable.trinket_one&cooldown.summon_darkglare.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.summon_darkglare.remains<trinket.2.cooldown.remains))\n# Burn soul shards if fight is almost over\nactions+=/malefic_rapture,if=boss&fight_remains<execute_time*soul_shard&dot.unstable_affliction.ticking\n# If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set\nactions+=/call_action_list,name=darkglare_prep,if=(action.impending_catastrophe.known&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(action.soul_rot.known&dot.soul_rot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||((action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2)\n# Refresh dots early if going into a shard spending phase\nactions+=/call_action_list,name=dot_prep,if=(action.soul_rot.known&!dot.soul_rot.ticking&cooldown.soul_rot.remains<4)||(action.impending_catastrophe.known&!dot.impending_catastrophe_dot.ticking&cooldown.impending_catastrophe.remains<4)||((action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&talent.phantom_singularity&!dot.phantom_singularity.ticking&cooldown.phantom_singularity.remains<4)\n# Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)\nactions+=/phantom_singularity,if=action.soul_rot.known&time>5&cooldown.soul_rot.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=action.impending_catastrophe.known&time>5&cooldown.impending_catastrophe.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt\nactions+=/phantom_singularity,if=action.decimating_bolt.known&runeforge.malefic_wrath&time>5&cooldown.decimating_bolt.remains<3&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Other covenants (including non-MW Necro) cast PS on cooldown\nactions+=/phantom_singularity,if=(action.scouring_tithe.known||covenant.none||(action.decimating_bolt.known&!runeforge.malefic_wrath))&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=boss&fight_remains<16\n# If Phantom Singularity is ticking, it's time to use other major dots\nactions+=/call_action_list,name=covenant,strict=1,if=dot.phantom_singularity.ticking&(action.soul_rot.known||action.impending_catastrophe.known)\nactions+=/agony,cycle_targets=1,if=dot.agony.remains<4\nactions+=/haunt\n# Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.\nactions+=/seed_of_corruption,if=active_enemies>2&talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight\nactions+=/seed_of_corruption,if=active_enemies>2&talent.siphon_life&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.remains<4\nactions+=/vile_taint,if=(soul_shard>1||active_enemies>2)&cooldown.summon_darkglare.remains>12\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&dot.unstable_affliction.remains<4\nactions+=/siphon_life,cycle_targets=1,if=dot.siphon_life.remains<4\nactions+=/call_action_list,name=covenant,strict=1,if=!action.decimating_bolt.known\n# Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption\nactions+=/corruption,cycle_targets=1,if=active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)&dot.corruption.remains<2\n# After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping\nactions+=/malefic_rapture,if=soul_shard>4&time>21\n# When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied\nactions+=/call_action_list,name=darkglare_prep,if=(action.impending_catastrophe.known&!talent.phantom_singularity&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready)||(action.soul_rot.known&!talent.phantom_singularity&dot.soul_rot.ticking&cooldown.summon_darkglare.ready)||((action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&cooldown.summon_darkglare.ready)\n# Catch-all item usage for anything not specified elsewhere\nactions+=/call_action_list,name=item\n## Refresh Shadow Embrace before spending shards on Malefic Rapture\nactions+=/call_action_list,name=se,if=talent.shadow_embrace.enabled&(debuff.shadow_embrace.stack<(2-action.shadow_bolt.in_flight)||debuff.shadow_embrace.remains<3)\n# Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff\nactions+=/malefic_rapture,if=(dot.vile_taint.ticking||dot.impending_catastrophe_dot.ticking||dot.soul_rot.ticking)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\n# Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&cooldown.soul_rot.remains>20&buff.malefic_wrath.remains<4\n# Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&(action.decimating_bolt.known||action.scouring_tithe.known)&buff.malefic_wrath.remains<4\n# Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it\nactions+=/malefic_rapture,if=talent.phantom_singularity&(dot.phantom_singularity.ticking||cooldown.phantom_singularity.remains>25||boss&time_to_die<cooldown.phantom_singularity.remains)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\nactions+=/malefic_rapture,if=talent.sow_the_seeds\n# Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks\nactions+=/drain_life,if=buff.inevitable_demise.stack>40||buff.inevitable_demise.up&boss&fight_remains<4\nactions+=/call_action_list,name=covenant\nactions+=/agony,cycle_targets=1,if=refreshable\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions+=/siphon_life,cycle_targets=1,if=refreshable\nactions+=/corruption,cycle_targets=1,if=refreshable&active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions+=/shadow_bolt\n\nactions.aoe=phantom_singularity\nactions.aoe+=/haunt\nactions.aoe+=/call_action_list,name=darkglare_prep,if=action.impending_catastrophe.known&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||action.soul_rot.known&dot.soul_rot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds&can_seed\nactions.aoe+=/seed_of_corruption,if=!talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.refreshable\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<4&!dot.agony.ticking\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony>=4&refreshable&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions.aoe+=/unstable_affliction,cycle_targets=1,if=!ticking&pvptalent.rampant_afflictions.enabled&active_dot.unstable_affliction<3\nactions.aoe+=/vile_taint,if=soul_shard>1\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=!action.decimating_bolt.known\nactions.aoe+=/call_action_list,name=darkglare_prep,if=(action.impending_catastrophe.known&(cooldown.impending_catastrophe.ready||dot.impending_catastrophe_dot.ticking)&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))&((action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(action.soul_rot.known&(cooldown.soul_rot.ready||dot.soul_rot.ticking)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))\nactions.aoe+=/call_action_list,name=item\nactions.aoe+=/call_action_list,name=delayed_trinkets\nactions.aoe+=/call_action_list,name=damage_trinkets\nactions.aoe+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.aoe+=/malefic_rapture,if=dot.vile_taint.ticking\nactions.aoe+=/malefic_rapture,if=dot.soul_rot.ticking&!talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=!talent.vile_taint\nactions.aoe+=/malefic_rapture,if=soul_shard>4\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<=3&refreshable&!dot.siphon_life.ticking\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=action.decimating_bolt.known\nactions.aoe+=/drain_life,if=buff.inevitable_demise.stack>=50||boss&buff.inevitable_demise.up&fight_remains<5||buff.inevitable_demise.stack>=35&dot.soul_rot.ticking\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions.aoe+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.aoe+=/shadow_bolt\n\nactions.covenant=impending_catastrophe,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<10||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/impending_catastrophe,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/decimating_bolt,if=cooldown.summon_darkglare.remains>5&(debuff.haunt.remains>4||!talent.haunt)\nactions.covenant+=/soul_rot,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<5||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/soul_rot,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/scouring_tithe\n\nactions.damage_trinkets=use_item,name=soul_igniter\nactions.damage_trinkets+=/use_item,name=dreadfire_vessel\nactions.damage_trinkets+=/use_item,name=glyph_of_assimilation\nactions.damage_trinkets+=/use_item,name=unchained_gladiators_shackles\nactions.damage_trinkets+=/use_item,name=ebonsoul_vice\nactions.damage_trinkets+=/use_item,name=resonant_reservoir\nactions.damage_trinkets+=/use_item,name=architects_ingenuity_core\nactions.damage_trinkets+=/use_item,name=grim_eclipse\nactions.damage_trinkets+=/use_item,name=toe_knees_promise\nactions.damage_trinkets+=/use_item,name=mrrgrias_favor\nactions.damage_trinkets+=/use_item,name=cosmic_gladiators_resonator\n\nactions.darkglare_prep=vile_taint\nactions.darkglare_prep+=/potion\nactions.darkglare_prep+=/fireblood\nactions.darkglare_prep+=/blood_fury\nactions.darkglare_prep+=/berserking\nactions.darkglare_prep+=/call_action_list,name=covenant,strict=1,if=!action.decimating_bolt.known\nactions.darkglare_prep+=/summon_darkglare\n\nactions.delayed_trinkets=use_item,name=grim_eclipse,if=(action.soul_rot.known&cooldown.soul_rot.remains<6)||(action.impending_catastrophe.known&cooldown.impending_catastrophe.remains<6)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)\nactions.delayed_trinkets+=/use_item,name=empyreal_ordnance,if=(action.soul_rot.known&cooldown.soul_rot.remains<20)||(action.impending_catastrophe.known&cooldown.impending_catastrophe.remains<20)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)\nactions.delayed_trinkets+=/use_item,name=sunblood_amethyst,if=(action.soul_rot.known&cooldown.soul_rot.remains<6)||(action.impending_catastrophe.known&cooldown.impending_catastrophe.remains<6)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)\nactions.delayed_trinkets+=/use_item,name=soulletting_ruby,if=(action.soul_rot.known&cooldown.soul_rot.remains<8)||(action.impending_catastrophe.known&cooldown.impending_catastrophe.remains<8)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)\nactions.delayed_trinkets+=/use_item,name=shadowed_orb_of_torment,if=(action.soul_rot.known&cooldown.soul_rot.remains<4)||(action.impending_catastrophe.known&cooldown.impending_catastrophe.remains<4)||(action.decimating_bolt.known||action.scouring_tithe.known||covenant.none)\n\nactions.dot_prep=agony,if=dot.agony.remains<8&cooldown.summon_darkglare.remains>dot.agony.remains\nactions.dot_prep+=/siphon_life,if=dot.siphon_life.remains<8&cooldown.summon_darkglare.remains>dot.siphon_life.remains\nactions.dot_prep+=/unstable_affliction,if=dot.unstable_affliction.remains<8&cooldown.summon_darkglare.remains>dot.unstable_affliction.remains\nactions.dot_prep+=/corruption,if=dot.corruption.remains<8&cooldown.summon_darkglare.remains>dot.corruption.remains\n\nactions.item=use_items\n\nactions.necro_mw=variable,name=dots_ticking,value=dot.corruption.remains>2&dot.agony.remains>2&dot.unstable_affliction.remains>2&(!talent.siphon_life||dot.siphon_life.remains>2)\n# Trinkets align with PS for Shadow Embrace, DB for Haunt.\nactions.necro_mw+=/variable,name=trinket_delay,value=cooldown.phantom_singularity.remains,value_else=cooldown.decimating_bolt.remains,op=setif,condition=talent.shadow_embrace,if=action.decimating_bolt.known\n# Burn soul shards if the fight will be ending soon.\nactions.necro_mw+=/malefic_rapture,if=time_to_die<execute_time*soul_shard&dot.unstable_affliction.ticking\n# Cast haunt to refresh before falloff.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<2+execute_time\n# High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<gcd.max+execute_time\n# Fire delayed trinkets in anticipation of Decimating Bolt.\nactions.necro_mw+=/use_item,name=empyreal_ordnance,if=variable.trinket_delay<20\nactions.necro_mw+=/use_item,name=sunblood_amethyst,if=variable.trinket_delay<6\nactions.necro_mw+=/use_item,name=soulletting_ruby,if=variable.trinket_delay<8\nactions.necro_mw+=/use_item,name=shadowed_orb_of_torment,if=variable.trinket_delay<4\n# If the player is using Haunt, fire PS on cooldown then follow with DB\nactions.necro_mw+=/phantom_singularity,if=talent.haunt&variable.dots_ticking\nactions.necro_mw+=/decimating_bolt,if=talent.haunt&cooldown.phantom_singularity.remains>0\n# If the player is using SE, fire DB on cooldown then following with PS\nactions.necro_mw+=/decimating_bolt,if=talent.shadow_embrace&variable.dots_ticking\nactions.necro_mw+=/phantom_singularity,if=talent.shadow_embrace&cooldown.decimating_bolt.remains>0\nactions.necro_mw+=/unstable_affliction,if=dot.unstable_affliction.remains<6\nactions.necro_mw+=/agony,if=dot.agony.remains<4\nactions.necro_mw+=/siphon_life,if=dot.siphon_life.remains<4\nactions.necro_mw+=/corruption,if=dot.corruption.remains<4\n# Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<2*gcd.max+execute_time\n# Call darkglare_prep if Phantom Singularity is currently ticking\nactions.necro_mw+=/call_action_list,name=darkglare_prep,strict=1,if=dot.phantom_singularity.ticking\n# Utilize any other stat trinkets if Phantom Singularity is ticking\nactions.necro_mw+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking\n# Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)\nactions.necro_mw+=/malefic_rapture,if=time>7&(buff.malefic_wrath.stack<3||buff.malefic_wrath.remains<4.5)\n# Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.\nactions.necro_mw+=/malefic_rapture,if=(dot.phantom_singularity.ticking||time_to_die<cooldown.phantom_singularity.remains)&(buff.malefic_wrath.stack<3||soul_shard>1)\n# Additional Drain Soul cast when PS is ticking\nactions.necro_mw+=/drain_soul,if=dot.phantom_singularity.ticking\n# Low - priority dot refresh when refreshable.\nactions.necro_mw+=/agony,if=refreshable\nactions.necro_mw+=/unstable_affliction,if=refreshable\nactions.necro_mw+=/corruption,if=refreshable\nactions.necro_mw+=/siphon_life,if=talent.siphon_life&refreshable\n# Fleshcraft to maintain Volatile Solvent.\nactions.necro_mw+=/fleshcraft,if=soulbind.volatile_solvent,cancel_if=buff.volatile_solvent_humanoid.up\n# Low-priority haunt refresh.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<3\n# Uninterruptible DS channel if we have the DB buff.\nactions.necro_mw+=/drain_soul,if=buff.decimating_bolt.up\nactions.necro_mw+=/drain_soul,if=talent.shadow_embrace&debuff.shadow_embrace.remains<3||debuff.shadow_embrace.stack<3,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/shadow_bolt\n\nactions.se=haunt\nactions.se+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.se+=/shadow_bolt\n\nactions.stat_trinkets=use_item,name=the_first_sigil\nactions.stat_trinkets+=/use_item,name=scars_of_fraternal_strife\nactions.stat_trinkets+=/use_item,name=inscrutable_quantum_device\nactions.stat_trinkets+=/use_item,name=instructors_divine_bell\nactions.stat_trinkets+=/use_item,name=overflowing_anima_cage\nactions.stat_trinkets+=/use_item,name=darkmoon_deck_putrescence\nactions.stat_trinkets+=/use_item,name=macabre_sheet_music\nactions.stat_trinkets+=/use_item,name=flame_of_battle\nactions.stat_trinkets+=/use_item,name=wakeners_frond\nactions.stat_trinkets+=/use_item,name=tablet_of_despair\nactions.stat_trinkets+=/use_item,name=gladiators_badge\nactions.stat_trinkets+=/use_item,name=obelisk_of_the_void\nactions.stat_trinkets+=/use_item,name=horn_of_valor\nactions.stat_trinkets+=/use_item,name=moonlit_prism\nactions.stat_trinkets+=/use_item,name=figurehead_of_the_naglfar\nactions.stat_trinkets+=/blood_fury\nactions.stat_trinkets+=/fireblood\nactions.stat_trinkets+=/berserking\n\n# We don't support ^ as XOR in Lua, so I've converted this to arithmetic.\nactions.trinket_split_check=variable,name=special_equipped,value=((1*equipped.empyreal_ordnance)+(1*equipped.inscrutable_quantum_device)+(1*equipped.soulletting_ruby)+(1*equipped.sunblood_amethyst))=1\nactions.trinket_split_check+=/variable,name=trinket_one,value=(trinket.1.has_proc&trinket.1.has_cooldown)\nactions.trinket_split_check+=/variable,name=trinket_two,value=(trinket.2.has_proc&trinket.2.has_cooldown)\nactions.trinket_split_check+=/variable,name=damage_trinket,value=(!(trinket.1.has_proc&trinket.1.has_cooldown))||(!(trinket.2.has_proc&trinket.2.has_cooldown))||equipped.glyph_of_assimilation\nactions.trinket_split_check+=/variable,name=trinket_split,value=(variable.trinket_one&variable.damage_trinket)||(variable.trinket_two&variable.damage_trinket)||(1*variable.trinket_one)+(1*variable.special_equipped)=1||(1*variable.trinket_two)+(1*variable.special_equipped)=1",
					["version"] = 20221115,
					["warnings"] = "The import for 'trinket_split_check' required some automated changes.\nLine 2: Converted 'trinket.1.has_proc' to 'trinket.t1.has_proc' (1x).\nLine 2: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.has_proc' to 'trinket.t2.has_proc' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.has_proc' to 'trinket.t1.has_proc' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.has_proc' to 'trinket.t2.has_proc' (1x).\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\n\nThe import for 'damage_trinkets' required some automated changes.\nLine 9: Unsupported use_item action [ toe_knees_promise]; entry disabled.\nLine 10: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\n\nThe import for 'stat_trinkets' required some automated changes.\nLine 12: Unsupported use_item action [ obelisk_of_the_void]; entry disabled.\nLine 15: Unsupported use_item action [ figurehead_of_the_naglfar]; entry disabled.\n\nThe import for 'covenant' required some automated changes.\nLine 1: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 1: Converted 'conduit.corrupting_leer' to 'conduit.corrupting_leer.enabled' (1x).\nLine 2: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 3: Converted 'talent.haunt' to 'talent.haunt.enabled' (1x).\nLine 4: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 4: Converted 'conduit.corrupting_leer' to 'conduit.corrupting_leer.enabled' (1x).\nLine 5: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 5: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 8: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 11: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 12: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 13: Converted 'trinket.empyreal_ordnance.cooldown.remains' to 'cooldown.empyreal_ordnance.remains'.\nLine 14: Converted 'trinket.empyreal_ordnance.cooldown.remains' to 'cooldown.empyreal_ordnance.remains'.\nLine 15: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 15: Converted 'trinket.empyreal_ordnance.cooldown.remains' to 'cooldown.empyreal_ordnance.remains'.\nLine 16: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 16: Converted 'trinket.empyreal_ordnance.cooldown.remains' to 'cooldown.empyreal_ordnance.remains'.\nLine 21: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 22: Converted 'talent.siphon_life' to 'talent.siphon_life.enabled' (1x).\nLine 27: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 27: Converted 'talent.siphon_life' to 'talent.siphon_life.enabled' (1x).\nLine 29: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 29: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 32: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 33: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 34: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 35: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 35: Converted 'runeforge.malefic_wrath' to 'runeforge.malefic_wrath.enabled' (1x).\nLine 36: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 42: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 42: Converted 'talent.siphon_life' to 'talent.siphon_life.enabled' (1x).\nLine 43: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 3: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 4: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 5: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 12: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 12: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 12: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 16: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 18: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 19: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 24: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nThe import for 'necro_mw' required some automated changes.\nLine 1: Converted 'talent.siphon_life' to 'talent.siphon_life.enabled' (1x).\nLine 2: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 10: Converted 'talent.haunt' to 'talent.haunt.enabled' (1x).\nLine 11: Converted 'talent.haunt' to 'talent.haunt.enabled' (1x).\nLine 12: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 13: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 27: Converted 'talent.siphon_life' to 'talent.siphon_life.enabled' (1x).\nLine 28: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\nLine 31: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\n\nImported 13 action lists.\n",
					["lists"] = {
						["darkglare_prep"] = {
							{
								["action"] = "vile_taint",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! action.decimating_bolt.known",
								["list_name"] = "covenant",
							}, -- [6]
							{
								["action"] = "summon_darkglare",
								["enabled"] = true,
							}, -- [7]
						},
						["trinket_split_check"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ( 1 * equipped.empyreal_ordnance ) + ( 1 * equipped.inscrutable_quantum_device ) + ( 1 * equipped.soulletting_ruby ) + ( 1 * equipped.sunblood_amethyst ) ) = 1",
								["var_name"] = "special_equipped",
								["description"] = "We don't support ",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t1.has_proc & trinket.t1.has_cooldown )",
								["var_name"] = "trinket_one",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_proc & trinket.t2.has_cooldown )",
								["var_name"] = "trinket_two",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! ( trinket.t1.has_proc & trinket.t1.has_cooldown ) ) || ( ! ( trinket.t2.has_proc & trinket.t2.has_cooldown ) ) || equipped.glyph_of_assimilation",
								["var_name"] = "damage_trinket",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.trinket_one & variable.damage_trinket ) || ( variable.trinket_two & variable.damage_trinket ) || ( 1 * variable.trinket_one ) + ( 1 * variable.special_equipped ) = 1 || ( 1 * variable.trinket_two ) + ( 1 * variable.special_equipped ) = 1",
								["var_name"] = "trinket_split",
							}, -- [5]
						},
						["damage_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vice",
								["action"] = "ebonsoul_vice",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [8]
							{
								["enabled"] = false,
								["name"] = "toe_knees_promise",
							}, -- [9]
							{
								["enabled"] = false,
								["name"] = "mrrgrias_favor",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [11]
						},
						["delayed_trinkets"] = {
							{
								["enabled"] = true,
								["criteria"] = "( action.soul_rot.known & cooldown.soul_rot.remains < 6 ) || ( action.impending_catastrophe.known & cooldown.impending_catastrophe.remains < 6 ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none )",
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( action.soul_rot.known & cooldown.soul_rot.remains < 20 ) || ( action.impending_catastrophe.known & cooldown.impending_catastrophe.remains < 20 ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none )",
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( action.soul_rot.known & cooldown.soul_rot.remains < 6 ) || ( action.impending_catastrophe.known & cooldown.impending_catastrophe.remains < 6 ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none )",
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( action.soul_rot.known & cooldown.soul_rot.remains < 8 ) || ( action.impending_catastrophe.known & cooldown.impending_catastrophe.remains < 8 ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none )",
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( action.soul_rot.known & cooldown.soul_rot.remains < 4 ) || ( action.impending_catastrophe.known & cooldown.impending_catastrophe.remains < 4 ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none )",
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [5]
						},
						["stat_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "tablet_of_despair",
								["action"] = "tablet_of_despair",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "gladiators_badge",
								["action"] = "gladiators_badge",
							}, -- [11]
							{
								["enabled"] = false,
								["name"] = "obelisk_of_the_void",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "horn_of_valor",
								["action"] = "horn_of_valor",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [14]
							{
								["enabled"] = false,
								["name"] = "figurehead_of_the_naglfar",
							}, -- [15]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [18]
						},
						["covenant"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 10 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "impending_catastrophe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "impending_catastrophe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.summon_darkglare.remains > 5 & ( debuff.haunt.remains > 4 || ! talent.haunt.enabled )",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 5 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "soul_rot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "soul_rot",
							}, -- [5]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [6]
						},
						["dot_prep"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 8 & cooldown.summon_darkglare.remains > dot.agony.remains",
								["action"] = "agony",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 8 & cooldown.summon_darkglare.remains > dot.siphon_life.remains",
								["action"] = "siphon_life",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 8 & cooldown.summon_darkglare.remains > dot.unstable_affliction.remains",
								["action"] = "unstable_affliction",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 8 & cooldown.summon_darkglare.remains > dot.corruption.remains",
								["action"] = "corruption",
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 3",
								["list_name"] = "aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.calamitous_crescendo.up",
								["action"] = "malefic_rapture",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.",
								["strict"] = 1,
								["criteria"] = "action.decimating_bolt.known & runeforge.malefic_wrath.enabled & active_enemies = 1 & talent.phantom_singularity.enabled",
								["list_name"] = "necro_mw",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.",
								["list_name"] = "trinket_split_check",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking || dot.phantom_singularity.ticking ) & soul_shard > 3 || dot.vile_taint.ticking || talent.sow_the_seeds.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "action.soul_rot.known & ( ! variable.trinket_split || cooldown.soul_rot.remains > 20 || ( variable.trinket_one & cooldown.soul_rot.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.soul_rot.remains < trinket.t2.cooldown.remains ) ) || action.impending_catastrophe.known & ( ! variable.trinket_split || cooldown.impending_catastrophe.remains > 20 || ( variable.trinket_one & cooldown.impending_catastrophe.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.impending_catastrophe.remains < trinket.t2.cooldown.remains ) ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & ( ! variable.trinket_split || cooldown.phantom_singularity.remains > 20 || ( variable.trinket_one & cooldown.phantom_singularity.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.phantom_singularity.remains < trinket.t2.cooldown.remains ) ) || ! talent.phantom_singularity.enabled & ( ! variable.trinket_split || cooldown.summon_darkglare.remains > 20 || ( variable.trinket_one & cooldown.summon_darkglare.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.summon_darkglare.remains < trinket.t2.cooldown.remains ) )",
								["list_name"] = "damage_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Burn soul shards if fight is almost over",
								["criteria"] = "boss & fight_remains < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set",
								["criteria"] = "( action.impending_catastrophe.known & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( action.soul_rot.known & dot.soul_rot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2 )",
								["list_name"] = "darkglare_prep",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Refresh dots early if going into a shard spending phase",
								["criteria"] = "( action.soul_rot.known & ! dot.soul_rot.ticking & cooldown.soul_rot.remains < 4 ) || ( action.impending_catastrophe.known & ! dot.impending_catastrophe_dot.ticking & cooldown.impending_catastrophe.remains < 4 ) || ( ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & talent.phantom_singularity.enabled & ! dot.phantom_singularity.ticking & cooldown.phantom_singularity.remains < 4 )",
								["list_name"] = "dot_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["description"] = "Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)",
								["criteria"] = "action.soul_rot.known & time > 5 & cooldown.soul_rot.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "action.impending_catastrophe.known & time > 5 & cooldown.impending_catastrophe.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [14]
							{
								["enabled"] = true,
								["description"] = "Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt",
								["criteria"] = "action.decimating_bolt.known & runeforge.malefic_wrath.enabled & time > 5 & cooldown.decimating_bolt.remains < 3 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [15]
							{
								["enabled"] = true,
								["description"] = "Other covenants (including non-MW Necro) cast PS on cooldown",
								["criteria"] = "( action.scouring_tithe.known || covenant.none || ( action.decimating_bolt.known & ! runeforge.malefic_wrath.enabled ) ) & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 16",
								["action"] = "phantom_singularity",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If Phantom Singularity is ticking, it's time to use other major dots",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking & ( action.soul_rot.known || action.impending_catastrophe.known )",
								["list_name"] = "covenant",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
								["cycle_targets"] = 1,
							}, -- [19]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [20]
							{
								["enabled"] = true,
								["description"] = "Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.",
								["criteria"] = "active_enemies > 2 & talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight",
								["action"] = "seed_of_corruption",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.siphon_life.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.remains < 4",
								["action"] = "seed_of_corruption",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( soul_shard > 1 || active_enemies > 2 ) & cooldown.summon_darkglare.remains > 12",
								["action"] = "vile_taint",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & dot.unstable_affliction.remains < 4",
								["action"] = "unstable_affliction",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
								["cycle_targets"] = 1,
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! action.decimating_bolt.known",
								["list_name"] = "covenant",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["cycle_targets"] = 1,
								["description"] = "Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption",
								["criteria"] = "active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled ) & dot.corruption.remains < 2",
							}, -- [27]
							{
								["enabled"] = true,
								["description"] = "After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping",
								["criteria"] = "soul_shard > 4 & time > 21",
								["action"] = "malefic_rapture",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied",
								["criteria"] = "( action.impending_catastrophe.known & ! talent.phantom_singularity.enabled & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready ) || ( action.soul_rot.known & ! talent.phantom_singularity.enabled & dot.soul_rot.ticking & cooldown.summon_darkglare.ready ) || ( ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & cooldown.summon_darkglare.ready )",
								["list_name"] = "darkglare_prep",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Catch-all item usage for anything not specified elsewhere",
								["list_name"] = "item",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < ( 2 - action.shadow_bolt.in_flight ) || debuff.shadow_embrace.remains < 3 )",
								["list_name"] = "se",
							}, -- [31]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff",
								["criteria"] = "( dot.vile_taint.ticking || dot.impending_catastrophe_dot.ticking || dot.soul_rot.ticking ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [32]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)",
								["criteria"] = "runeforge.malefic_wrath.enabled & cooldown.soul_rot.remains > 20 & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant",
								["criteria"] = "runeforge.malefic_wrath.enabled & ( action.decimating_bolt.known || action.scouring_tithe.known ) & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
							}, -- [34]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it",
								["criteria"] = "talent.phantom_singularity.enabled & ( dot.phantom_singularity.ticking || cooldown.phantom_singularity.remains > 25 || boss & time_to_die < cooldown.phantom_singularity.remains ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [36]
							{
								["enabled"] = true,
								["description"] = "Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks",
								["criteria"] = "buff.inevitable_demise.stack > 40 || buff.inevitable_demise.up & boss & fight_remains < 4",
								["action"] = "drain_life",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "agony",
								["cycle_targets"] = 1,
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "siphon_life",
								["cycle_targets"] = 1,
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled )",
								["action"] = "corruption",
								["cycle_targets"] = 1,
							}, -- [42]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
							}, -- [43]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [44]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [45]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.corruption > 0 & active_dot.agony > 0 & active_dot.unstable_affliction > 0 & ( ! talent.siphon_life.enabled || active_dot.siphon_life > 0 ) & ( dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled )",
								["var_name"] = "dots_ready",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.seed_of_corruption_aoe >= 3",
								["action"] = "seed_of_corruption",
								["line_cd"] = "10",
							}, -- [8]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "soul_swap",
								["enabled"] = true,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! ticking",
								["action"] = "unstable_affliction",
							}, -- [11]
						},
						["aoe"] = {
							{
								["action"] = "phantom_singularity",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "action.impending_catastrophe.known & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || action.soul_rot.known & dot.soul_rot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2",
								["list_name"] = "darkglare_prep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled & can_seed",
								["action"] = "seed_of_corruption",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.refreshable",
								["action"] = "seed_of_corruption",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.agony < 4 & ! dot.agony.ticking",
								["action"] = "agony",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.agony >= 4 & refreshable & dot.agony.ticking",
								["action"] = "agony",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! ticking & pvptalent.rampant_afflictions.enabled & active_dot.unstable_affliction < 3",
								["action"] = "unstable_affliction",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 1",
								["action"] = "vile_taint",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! action.decimating_bolt.known",
								["list_name"] = "covenant",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( action.impending_catastrophe.known & ( cooldown.impending_catastrophe.ready || dot.impending_catastrophe_dot.ticking ) & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) & ( ( action.decimating_bolt.known || action.scouring_tithe.known || covenant.none ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( action.soul_rot.known & ( cooldown.soul_rot.ready || dot.soul_rot.ticking ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) )",
								["list_name"] = "darkglare_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.vile_taint.ticking",
								["action"] = "malefic_rapture",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "dot.soul_rot.ticking & ! talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "! talent.vile_taint.enabled",
								["action"] = "malefic_rapture",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4",
								["action"] = "malefic_rapture",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.siphon_life <= 3 & refreshable & ! dot.siphon_life.ticking",
								["action"] = "siphon_life",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "action.decimating_bolt.known",
								["list_name"] = "covenant",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack >= 50 || boss & buff.inevitable_demise.up & fight_remains < 5 || buff.inevitable_demise.stack >= 35 & dot.soul_rot.ticking",
								["action"] = "drain_life",
							}, -- [23]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
							}, -- [24]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [25]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [26]
						},
						["item"] = {
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [1]
						},
						["se"] = {
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [1]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [3]
						},
						["necro_mw"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "dot.corruption.remains > 2 & dot.agony.remains > 2 & dot.unstable_affliction.remains > 2 & ( ! talent.siphon_life.enabled || dot.siphon_life.remains > 2 )",
								["var_name"] = "dots_ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Trinkets align with PS for Shadow Embrace, DB for Haunt.",
								["value"] = "cooldown.phantom_singularity.remains",
								["var_name"] = "trinket_delay",
								["action"] = "variable",
								["value_else"] = "cooldown.decimating_bolt.remains",
								["criteria"] = "action.decimating_bolt.known",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Burn soul shards if the fight will be ending soon.",
								["criteria"] = "time_to_die < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
							}, -- [3]
							{
								["enabled"] = true,
								["description"] = "Cast haunt to refresh before falloff.",
								["criteria"] = "dot.haunt.remains < 2 + execute_time",
								["action"] = "haunt",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.",
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < gcd.max + execute_time",
								["action"] = "malefic_rapture",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.trinket_delay < 20",
								["description"] = "Fire delayed trinkets in anticipation of Decimating Bolt.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 6",
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 8",
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 4",
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "If the player is using Haunt, fire PS on cooldown then follow with DB",
								["criteria"] = "talent.haunt.enabled & variable.dots_ticking",
								["action"] = "phantom_singularity",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & cooldown.phantom_singularity.remains > 0",
								["action"] = "decimating_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["description"] = "If the player is using SE, fire DB on cooldown then following with PS",
								["criteria"] = "talent.shadow_embrace.enabled & variable.dots_ticking",
								["action"] = "decimating_bolt",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & cooldown.decimating_bolt.remains > 0",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 6",
								["action"] = "unstable_affliction",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 4",
								["action"] = "corruption",
							}, -- [17]
							{
								["enabled"] = true,
								["description"] = "Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh",
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < 2 * gcd.max + execute_time",
								["action"] = "malefic_rapture",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call darkglare_prep if Phantom Singularity is currently ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "darkglare_prep",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Utilize any other stat trinkets if Phantom Singularity is ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "stat_trinkets",
							}, -- [20]
							{
								["enabled"] = true,
								["description"] = "Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)",
								["criteria"] = "time > 7 & ( buff.malefic_wrath.stack < 3 || buff.malefic_wrath.remains < 4.5 )",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["description"] = "Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.",
								["criteria"] = "( dot.phantom_singularity.ticking || time_to_die < cooldown.phantom_singularity.remains ) & ( buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["description"] = "Additional Drain Soul cast when PS is ticking",
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "drain_soul",
							}, -- [23]
							{
								["enabled"] = true,
								["description"] = "Low - priority dot refresh when refreshable.",
								["criteria"] = "refreshable",
								["action"] = "agony",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "unstable_affliction",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "corruption",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.siphon_life.enabled & refreshable",
								["action"] = "siphon_life",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent_humanoid.up",
								["description"] = "Fleshcraft to maintain Volatile Solvent.",
								["criteria"] = "soulbind.volatile_solvent.enabled",
							}, -- [28]
							{
								["enabled"] = true,
								["description"] = "Low-priority haunt refresh.",
								["criteria"] = "dot.haunt.remains < 3",
								["action"] = "haunt",
							}, -- [29]
							{
								["enabled"] = true,
								["description"] = "Uninterruptible DS channel if we have the DB buff.",
								["criteria"] = "buff.decimating_bolt.up",
								["action"] = "drain_soul",
							}, -- [30]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["criteria"] = "talent.shadow_embrace.enabled & debuff.shadow_embrace.remains < 3 || debuff.shadow_embrace.stack < 3",
							}, -- [31]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [33]
						},
					},
					["author"] = "SimC",
				},
				["Subtlety"] = {
					["builtIn"] = true,
					["date"] = 20221218,
					["spec"] = 261,
					["desc"] = "",
					["lists"] = {
						["stealthed"] = {
							{
								["enabled"] = true,
								["criteria"] = "( buff.stealth.up || buff.vanish.up ) & ( spell_targets.shuriken_storm < 4 || variable.priority_rotation )",
								["action"] = "shadowstrike",
								["description"] = "Stealthed Rotation  If Stealth/vanish are up, use Shadowstrike to benefit from the passive bonus and Find Weakness, even if we are at max CP (unless using Master Assassin)",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.danse_macabre.stack < 5 & ( combo_points.deficit = 2 || combo_points.deficit = 3 ) & ( buff.premeditation.up || effective_combo_points < 7 ) & ( spell_targets.shuriken_storm <= 8 || talent.lingering_shadow.enabled )",
								["var_name"] = "gloomblade_condition",
								["description"] = "Variable to Gloomblade / Backstab when on 4 or 5 combo points with premediation and when the combo point is not anima charged",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.gloomblade_condition & buff.silent_storm.up & ! debuff.find_weakness.remains",
								["action"] = "shuriken_storm",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.gloomblade_condition",
								["action"] = "gloomblade",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.gloomblade_condition & talent.danse_macabre.enabled & buff.danse_macabre.stack <= 2 & spell_targets.shuriken_storm <= 2",
								["action"] = "backstab",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "variable.effective_combo_points >= cp_max_spend",
								["list_name"] = "finish",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Finish earlier with Shuriken tornado up.",
								["criteria"] = "buff.shuriken_tornado.up & combo_points.deficit <= 2",
								["list_name"] = "finish",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Also safe to finish at 4+ CP with exactly 4 targets. (Same as outside stealth.)",
								["criteria"] = "spell_targets.shuriken_storm >= 4 - talent.seal_fate.enabled & variable.effective_combo_points >= 4",
								["list_name"] = "finish",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Finish at lower combo points if you are talented in DS, SS or Seal Fate",
								["criteria"] = "combo_points.deficit <= 1 + ( talent.seal_fate.enabled || talent.deeper_stratagem.enabled || talent.secret_stratagem.enabled )",
								["list_name"] = "finish",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.perforated_veins.stack >= 5 & spell_targets.shuriken_storm < 3",
								["action"] = "gloomblade",
								["description"] = "Use Gloomblade or Backstab when close to hitting max PV stacks",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.perforated_veins.stack >= 5 & spell_targets.shuriken_storm < 3",
								["action"] = "backstab",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "stealthed.sepsis & spell_targets.shuriken_storm < 4",
								["action"] = "shadowstrike",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets >= 3 + buff.the_rotten.up & ( ! buff.premeditation.up || spell_targets >= 7 )",
								["action"] = "shuriken_storm",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "debuff.find_weakness.remains <= 1 || cooldown.symbols_of_death.remains < 18 & debuff.find_weakness.remains < cooldown.symbols_of_death.remains",
								["action"] = "shadowstrike",
								["description"] = "Shadowstrike to refresh Find Weakness and to ensure we can carry over a full FW into the next SoD if possible.",
							}, -- [14]
							{
								["action"] = "shadowstrike",
								["enabled"] = true,
							}, -- [15]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Restealth if possible (no vulnerable enemies in combat)",
								["action"] = "stealth",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Interrupt on cooldown to allow simming interactions with that",
								["action"] = "kick",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.slice_and_dice.up || spell_targets.shuriken_storm >= cp_max_spend",
								["var_name"] = "snd_condition",
								["description"] = "Used to determine whether cooldowns wait for SnD based on targets.",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "is_next_cp_animacharged",
								["value"] = "combo_points = 1 & buff.echoing_reprimand_2.up || combo_points = 2 & buff.echoing_reprimand_3.up || combo_points = 3 & buff.echoing_reprimand_4.up || combo_points = 4 & buff.echoing_reprimand_5.up",
								["description"] = "Check to see if the next CP (in the event of a ShT proc) is Animacharged",
								["criteria"] = "talent.echoing_reprimand.enabled",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "effective_combo_points",
								["var_name"] = "effective_combo_points",
								["description"] = "Account for ShT reaction time by ignoring low-CP animacharged matches in the 0.5s preceeding a potential ShT proc",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "combo_points",
								["var_name"] = "effective_combo_points",
								["criteria"] = "talent.echoing_reprimand.enabled & effective_combo_points > combo_points & combo_points.deficit > 2 & time_to_sht_plus.4 < 0.5 & ! variable.is_next_cp_animacharged",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Check CDs at first",
								["list_name"] = "cds",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.shuriken_storm < cp_max_spend & buff.slice_and_dice.remains < gcd.max & fight_remains > 6 & combo_points >= 4",
								["action"] = "slice_and_dice",
								["description"] = "Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).",
								["criteria"] = "stealthed.all",
								["list_name"] = "stealthed",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "25 + talent.vigor.enabled * 20 + talent.master_of_shadows.enabled * 20 + talent.shadow_focus.enabled * 25 + talent.alacrity.enabled * 20 + 25 * ( spell_targets.shuriken_storm >= 4 )",
								["var_name"] = "stealth_threshold",
								["description"] = "Used to define when to use stealth CDs or builders",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Consider using a Stealth CD when reaching the energy threshold",
								["criteria"] = "energy.deficit <= variable.stealth_threshold",
								["list_name"] = "stealth_cds",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "variable.effective_combo_points >= cp_max_spend",
								["list_name"] = "finish",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Finish at maximum or close to maximum combo point value",
								["criteria"] = "combo_points.deficit <= 1 || fight_remains <= 1 & variable.effective_combo_points >= 3",
								["list_name"] = "finish",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Finish at 4+ against 4 targets (outside stealth)",
								["criteria"] = "spell_targets.shuriken_storm >= ( 4 - talent.seal_fate.enabled ) & variable.effective_combo_points >= 4",
								["list_name"] = "finish",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Use a builder when reaching the energy threshold",
								["criteria"] = "energy.deficit <= variable.stealth_threshold",
								["list_name"] = "build",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "energy.deficit >= 15 + energy.regen",
								["action"] = "arcane_torrent",
								["description"] = "Lowest priority in all of the APL because it causes a GCD",
							}, -- [16]
							{
								["action"] = "arcane_pulse",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [18]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [19]
						},
						["precombat"] = {
							{
								["action"] = "apply_poison",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "stealth",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "marked_for_death",
								["precombat_seconds"] = "15",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "slice_and_dice",
								["precombat_seconds"] = "1",
							}, -- [4]
						},
						["build"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets >= 2 + ( buff.lingering_shadow.up || buff.perforated_veins.up )",
								["action"] = "shuriken_storm",
								["description"] = "Builders",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.echoing_reprimand.enabled || ! ( variable.is_next_cp_animacharged & ( time_to_sht_plus.3 < 0.5 || time_to_sht_plus.4 < 1 ) & energy < 60 )",
								["var_name"] = "anima_helper",
								["description"] = "Build immediately unless the next CP is Animacharged and we won't cap energy waiting for it.",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.anima_helper",
								["action"] = "gloomblade",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.anima_helper",
								["action"] = "backstab",
							}, -- [4]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["criteria"] = "! buff.shadow_dance.up & buff.shuriken_tornado.up & buff.shuriken_tornado.remains <= 3.5",
								["use_off_gcd"] = 1,
								["description"] = "Cooldowns  Use Dance off-gcd before the first Shuriken Storm from Tornado comes in.",
								["action"] = "shadow_dance",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.shuriken_tornado.up & buff.shuriken_tornado.remains <= 3.5",
								["use_off_gcd"] = 1,
								["description"] = "(Unless already up because we took Shadow Focus) use Symbols off-gcd before the first Shuriken Storm from Tornado comes in.",
								["action"] = "symbols_of_death",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.secret_technique.enabled & combo_points >= 5",
								["action"] = "cold_blood",
								["description"] = "Cold Blood on 5 combo points when not playing Secret Technique",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & combo_points >= 5 & target.time_to_die > 10",
								["action"] = "flagellation",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
								["criteria"] = "talent.shuriken_tornado.enabled & ! talent.shadow_focus.enabled",
								["description"] = "Pool for Tornado pre-SoD with ShD ready when not running SF.",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.shuriken_storm <= 1 & energy >= 60 & variable.snd_condition & cooldown.symbols_of_death.up & cooldown.shadow_dance.charges >= 1 & ( ! talent.flagellation.enabled & ! cooldown.flagellation.up || buff.flagellation_buff.up || spell_targets.shuriken_storm >= 5 ) & combo_points <= 2 & ! buff.premeditation.up",
								["action"] = "shuriken_tornado",
								["description"] = "Use Tornado pre SoD when we have the energy whether from pooling without SF or just generally.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & combo_points.deficit >= 1 & target.time_to_die >= 16",
								["action"] = "sepsis",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 10 || cooldown.flagellation.up & combo_points >= 5 )",
								["action"] = "symbols_of_death",
								["description"] = "Use Symbols on cooldown (after first SnD) unless we are going to pop Tornado and do not have Shadow Focus.",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "marked_for_death",
								["line_cd"] = "1.5",
								["description"] = "If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or not stealthed without any CP.",
								["criteria"] = "raid_event.adds.up & ( target.time_to_die < combo_points.deficit || ! stealthed.all & combo_points.deficit >= cp_max_spend )",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 30 - raid_event.adds.duration & combo_points.deficit >= cp_max_spend",
								["action"] = "marked_for_death",
								["description"] = "If no adds will die within the next 30s, use MfD on boss without any CP.",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & combo_points.deficit >= 2",
								["action"] = "shadow_blades",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & combo_points.deficit >= 3 & ( variable.priority_rotation || spell_targets.shuriken_storm <= 4 || talent.resounding_clarity.enabled ) & ( buff.shadow_dance.up || ! talent.danse_macabre.enabled )",
								["action"] = "echoing_reprimand",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "variable.snd_condition & buff.symbols_of_death.up & combo_points <= 2 & ( ! buff.premeditation.up || spell_targets.shuriken_storm > 4 )",
								["action"] = "shuriken_tornado",
								["description"] = "With SF, if not already done, use Tornado with SoD up.",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.shadow_dance.ready & ! stealthed.all & spell_targets.shuriken_storm >= 3 & ! talent.flagellation.enabled",
								["action"] = "shuriken_tornado",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! buff.shadow_dance.up & fight_remains <= 8 + talent.subterfuge.enabled",
								["action"] = "shadow_dance",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.symbols_of_death.remains >= 3 & ! buff.thistle_tea.up & ( energy.deficit >= 100 || cooldown.thistle_tea.charges_fractional >= 2.75 & buff.shadow_dance.up ) || buff.shadow_dance.up & ! buff.thistle_tea.up & spell_targets.shuriken_storm >= 3 || ! buff.thistle_tea.up & fight_remains <= ( 6 * cooldown.thistle_tea.charges )",
								["action"] = "thistle_tea",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.bloodlust.react || fight_remains < 30 || buff.symbols_of_death.up & ( buff.shadow_blades.up || cooldown.shadow_blades.remains <= 10 )",
								["action"] = "potion",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.symbols_of_death.up",
								["action"] = "blood_fury",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.symbols_of_death.up",
								["action"] = "berserking",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.symbols_of_death.up",
								["action"] = "fireblood",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.symbols_of_death.up",
								["action"] = "ancestral_call",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.symbols_of_death.up || fight_remains < 20",
								["action"] = "use_items",
								["description"] = "Default fallback for usable items: Use with Symbols of Death.",
							}, -- [22]
						},
						["stealth_cds"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.shadow_dance.charges_fractional >= 0.75 + talent.shadow_dance.enabled",
								["var_name"] = "shd_threshold",
								["description"] = "Stealth Cooldowns  Helper Variable",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.danse_macabre.enabled || spell_targets.shuriken_storm >= 3 ) & ! variable.shd_threshold & combo_points.deficit > 1",
								["action"] = "vanish",
								["description"] = "Vanish if we are capping on Dance charges. Early before first dance if we have no Nightstalker but Dark Shadow in order to get Rupture up (no Master Assassin).",
							}, -- [2]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
								["criteria"] = "race.night_elf",
								["extra_amount"] = "40",
								["description"] = "Pool for Shadowmeld + Shadowstrike unless we are about to cap on Dance charges. Only when Find Weakness is about to run out.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "energy >= 40 & energy.deficit >= 10 & ! variable.shd_threshold & combo_points.deficit > 4",
								["action"] = "shadowmeld",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "combo_points <= 1",
								["var_name"] = "shd_combo_points",
								["description"] = "CP thresholds for entering Shadow Dance Default to start dance with 0 or 1 combo point",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "shd_combo_points",
								["value"] = "combo_points.deficit <= 1",
								["description"] = "Use stealth cooldowns with high combo points when playing shuriken tornado or with high target counts",
								["criteria"] = "spell_targets.shuriken_storm > ( 4 - 2 * talent.shuriken_tornado.enabled ) || variable.priority_rotation & spell_targets.shuriken_storm >= 4",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "shd_combo_points",
								["value"] = "1",
								["description"] = "Use stealth cooldowns on any combo point on 4 targets",
								["criteria"] = "spell_targets.shuriken_storm = ( 4 - talent.seal_fate.enabled )",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( variable.shd_combo_points & ( buff.symbols_of_death.remains >= ( 2.2 - talent.flagellation.enabled ) || variable.shd_threshold ) || buff.flagellation.up || buff.flagellation_persist.remains >= 6 || spell_targets.shuriken_storm >= 4 & cooldown.symbols_of_death.remains > 10 ) & ! buff.the_rotten.up",
								["action"] = "shadow_dance",
								["description"] = "Dance during Symbols or above threshold.",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.shd_combo_points & fight_remains < cooldown.symbols_of_death.remains || ! talent.shadow_dance.enabled & dot.rupture.ticking & spell_targets.shuriken_storm <= 4",
								["action"] = "shadow_dance",
								["description"] = "Burn Dances charges if before the fight ends if SoD won't be ready in time.",
							}, -- [9]
						},
						["finish"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.premeditation.enabled & spell_targets.shuriken_storm < 5",
								["var_name"] = "premed_snd_condition",
								["description"] = "Finishers  While using Premeditation, avoid casting Slice and Dice when Shadow Dance is soon to be used, except for Kyrian",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! variable.premed_snd_condition & spell_targets.shuriken_storm < 6 & ! buff.shadow_dance.up & buff.slice_and_dice.remains < fight_remains & refreshable",
								["action"] = "slice_and_dice",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.premed_snd_condition & cooldown.shadow_dance.charges_fractional < 1.75 & buff.slice_and_dice.remains < cooldown.symbols_of_death.remains & ( cooldown.shadow_dance.ready & buff.symbols_of_death.remains - buff.shadow_dance.remains < 1.2 )",
								["action"] = "slice_and_dice",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.thistle_tea.up & spell_targets.shuriken_storm = 1 || buff.shadow_dance.up & ( spell_targets.shuriken_storm = 1 || dot.rupture.ticking & spell_targets.shuriken_storm >= 2 )",
								["var_name"] = "skip_rupture",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.skip_rupture || variable.priority_rotation ) & target.time_to_die - remains > 6 & refreshable",
								["action"] = "rupture",
								["description"] = "Keep up Rupture if it is about to run out.",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.skip_rupture & buff.finality_rupture.up & cooldown.shadow_dance.remains < 12 & cooldown.shadow_dance.charges_fractional <= 1 & spell_targets.shuriken_storm = 1 & ( talent.dark_brew.enabled || talent.danse_macabre.enabled )",
								["action"] = "rupture",
								["description"] = "Refresh Rupture early for Finality",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.shadow_dance.up & ( buff.danse_macabre.stack >= 3 || ! talent.danse_macabre.enabled )",
								["action"] = "cold_blood",
								["description"] = "Sync Cold Blood with Secret Technique when possible",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.shadow_dance.up & ( buff.danse_macabre.stack >= 3 || ! talent.danse_macabre.enabled )",
								["action"] = "secret_technique",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "rupture",
								["cycle_targets"] = 1,
								["description"] = "Multidotting targets that will live for the duration of Rupture, refresh during pandemic.",
								["criteria"] = "! variable.skip_rupture & ! variable.priority_rotation & spell_targets.shuriken_storm >= 2 & target.time_to_die >= ( 2 * combo_points ) & refreshable",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! variable.skip_rupture & remains < cooldown.symbols_of_death.remains + 10 & cooldown.symbols_of_death.remains <= 5 & target.time_to_die - remains > cooldown.symbols_of_death.remains + 5",
								["action"] = "rupture",
								["description"] = "Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! variable.priority_rotation & spell_targets >= 3",
								["action"] = "black_powder",
							}, -- [11]
							{
								["action"] = "eviscerate",
								["enabled"] = true,
							}, -- [12]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.lingering_shadow' to 'talent.lingering_shadow.enabled' (1x).\nLine 5: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 8: Converted 'talent.seal_fate' to 'talent.seal_fate.enabled' (1x).\nLine 9: Converted 'talent.seal_fate' to 'talent.seal_fate.enabled' (1x).\nLine 9: Converted 'talent.deeper_stratagem' to 'talent.deeper_stratagem.enabled' (1x).\nLine 9: Converted 'talent.secret_stratagem' to 'talent.secret_stratagem.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 6: Converted 'time_to_sht.4.plus' to 'time_to_sht_plus.4' (1x).\nLine 14: Converted 'talent.seal_fate' to 'talent.seal_fate.enabled' (1x).\n\nThe import for 'finish' required some automated changes.\nLine 6: Converted 'talent.dark_brew' to 'talent.dark_brew.enabled' (1x).\nLine 6: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 7: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 8: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 3: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 8: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 12: Converted 'talent.resounding_clarity' to 'talent.resounding_clarity.enabled' (1x).\nLine 12: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 2: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 7: Converted 'talent.seal_fate' to 'talent.seal_fate.enabled' (1x).\nLine 9: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 2: Converted 'time_to_sht.3.plus' to 'time_to_sht_plus.3' (1x).\nLine 2: Converted 'time_to_sht.4.plus' to 'time_to_sht_plus.4' (1x).\n\nImported 7 action lists.\n",
					["author"] = "SimC",
					["profile"] = "actions.precombat+=/apply_poison\nactions.precombat+=/stealth\nactions.precombat+=/marked_for_death,precombat_seconds=15\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Used to determine whether cooldowns wait for SnD based on targets.\nactions+=/variable,name=snd_condition,value=buff.slice_and_dice.up||spell_targets.shuriken_storm>=cp_max_spend\n# Check to see if the next CP (in the event of a ShT proc) is Animacharged\nactions+=/variable,name=is_next_cp_animacharged,if=talent.echoing_reprimand.enabled,value=combo_points=1&buff.echoing_reprimand_2.up||combo_points=2&buff.echoing_reprimand_3.up||combo_points=3&buff.echoing_reprimand_4.up||combo_points=4&buff.echoing_reprimand_5.up\n# Account for ShT reaction time by ignoring low-CP animacharged matches in the 0.5s preceeding a potential ShT proc\nactions+=/variable,name=effective_combo_points,value=effective_combo_points\nactions+=/variable,name=effective_combo_points,if=talent.echoing_reprimand.enabled&effective_combo_points>combo_points&combo_points.deficit>2&time_to_sht.4.plus<0.5&!variable.is_next_cp_animacharged,value=combo_points\n# Check CDs at first\nactions+=/call_action_list,name=cds\n# Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up\nactions+=/slice_and_dice,if=spell_targets.shuriken_storm<cp_max_spend&buff.slice_and_dice.remains<gcd.max&fight_remains>6&combo_points>=4\n# Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).\nactions+=/run_action_list,name=stealthed,if=stealthed.all\n## Only change rotation if we have priority_rotation set.\n## actions+=/variable,name=priority_rotation,value=priority_rotation\n# Used to define when to use stealth CDs or builders\nactions+=/variable,name=stealth_threshold,value=25+talent.vigor.enabled*20+talent.master_of_shadows.enabled*20+talent.shadow_focus.enabled*25+talent.alacrity.enabled*20+25*(spell_targets.shuriken_storm>=4)\n# Consider using a Stealth CD when reaching the energy threshold\nactions+=/call_action_list,name=stealth_cds,if=energy.deficit<=variable.stealth_threshold\nactions+=/call_action_list,name=finish,if=variable.effective_combo_points>=cp_max_spend\n# Finish at maximum or close to maximum combo point value\nactions+=/call_action_list,name=finish,if=combo_points.deficit<=1||fight_remains<=1&variable.effective_combo_points>=3\n# Finish at 4+ against 4 targets (outside stealth)\nactions+=/call_action_list,name=finish,if=spell_targets.shuriken_storm>=(4-talent.seal_fate)&variable.effective_combo_points>=4\n# Use a builder when reaching the energy threshold\nactions+=/call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold\n# Lowest priority in all of the APL because it causes a GCD\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders\nactions.build+=/shuriken_storm,if=spell_targets>=2+(buff.lingering_shadow.up||buff.perforated_veins.up)\n# Build immediately unless the next CP is Animacharged and we won't cap energy waiting for it.\nactions.build+=/variable,name=anima_helper,value=!talent.echoing_reprimand.enabled||!(variable.is_next_cp_animacharged&(time_to_sht.3.plus<0.5||time_to_sht.4.plus<1)&energy<60)\nactions.build+=/gloomblade,if=variable.anima_helper\nactions.build+=/backstab,if=variable.anima_helper\n\n# Cooldowns  Use Dance off-gcd before the first Shuriken Storm from Tornado comes in.\nactions.cds+=/shadow_dance,use_off_gcd=1,if=!buff.shadow_dance.up&buff.shuriken_tornado.up&buff.shuriken_tornado.remains<=3.5\n# (Unless already up because we took Shadow Focus) use Symbols off-gcd before the first Shuriken Storm from Tornado comes in.\nactions.cds+=/symbols_of_death,use_off_gcd=1,if=buff.shuriken_tornado.up&buff.shuriken_tornado.remains<=3.5\n# Cold Blood on 5 combo points when not playing Secret Technique\nactions.cds+=/cold_blood,if=!talent.secret_technique&combo_points>=5\nactions.cds+=/flagellation,cycle_targets=1,if=variable.snd_condition&combo_points>=5&target.time_to_die>10\n# Pool for Tornado pre-SoD with ShD ready when not running SF.\nactions.cds+=/pool_resource,for_next=1,if=talent.shuriken_tornado.enabled&!talent.shadow_focus.enabled\n# Use Tornado pre SoD when we have the energy whether from pooling without SF or just generally.\nactions.cds+=/shuriken_tornado,if=spell_targets.shuriken_storm<=1&energy>=60&variable.snd_condition&cooldown.symbols_of_death.up&cooldown.shadow_dance.charges>=1&(!talent.flagellation.enabled&!cooldown.flagellation.up||buff.flagellation_buff.up||spell_targets.shuriken_storm>=5)&combo_points<=2&!buff.premeditation.up\nactions.cds+=/sepsis,if=variable.snd_condition&combo_points.deficit>=1&target.time_to_die>=16\n# Use Symbols on cooldown (after first SnD) unless we are going to pop Tornado and do not have Shadow Focus.\nactions.cds+=/symbols_of_death,if=variable.snd_condition&(!talent.flagellation||cooldown.flagellation.remains>10||cooldown.flagellation.up&combo_points>=5)\n# If adds are up, snipe the one with lowest TTD. Use when dying faster than CP deficit or not stealthed without any CP.\nactions.cds+=/marked_for_death,line_cd=1.5,cycle_targets=1,if=raid_event.adds.up&(target.time_to_die<combo_points.deficit||!stealthed.all&combo_points.deficit>=cp_max_spend)\n# If no adds will die within the next 30s, use MfD on boss without any CP.\nactions.cds+=/marked_for_death,if=raid_event.adds.in>30-raid_event.adds.duration&combo_points.deficit>=cp_max_spend\nactions.cds+=/shadow_blades,if=variable.snd_condition&combo_points.deficit>=2\nactions.cds+=/echoing_reprimand,if=variable.snd_condition&combo_points.deficit>=3&(variable.priority_rotation||spell_targets.shuriken_storm<=4||talent.resounding_clarity)&(buff.shadow_dance.up||!talent.danse_macabre)\n# With SF, if not already done, use Tornado with SoD up.\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&buff.symbols_of_death.up&combo_points<=2&(!buff.premeditation.up||spell_targets.shuriken_storm>4)\nactions.cds+=/shuriken_tornado,if=cooldown.shadow_dance.ready&!stealthed.all&spell_targets.shuriken_storm>=3&!talent.flagellation.enabled\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&fight_remains<=8+talent.subterfuge.enabled\nactions.cds+=/thistle_tea,if=cooldown.symbols_of_death.remains>=3&!buff.thistle_tea.up&(energy.deficit>=100||cooldown.thistle_tea.charges_fractional>=2.75&buff.shadow_dance.up)||buff.shadow_dance.up&!buff.thistle_tea.up&spell_targets.shuriken_storm>=3||!buff.thistle_tea.up&fight_remains<=(6*cooldown.thistle_tea.charges)\nactions.cds+=/potion,if=buff.bloodlust.react||fight_remains<30||buff.symbols_of_death.up&(buff.shadow_blades.up||cooldown.shadow_blades.remains<=10)\nactions.cds+=/blood_fury,if=buff.symbols_of_death.up\nactions.cds+=/berserking,if=buff.symbols_of_death.up\nactions.cds+=/fireblood,if=buff.symbols_of_death.up\nactions.cds+=/ancestral_call,if=buff.symbols_of_death.up\n# Default fallback for usable items: Use with Symbols of Death.\nactions.cds+=/use_items,if=buff.symbols_of_death.up||fight_remains<20\n\n# Finishers  While using Premeditation, avoid casting Slice and Dice when Shadow Dance is soon to be used, except for Kyrian\nactions.finish+=/variable,name=premed_snd_condition,value=talent.premeditation.enabled&spell_targets.shuriken_storm<5\nactions.finish+=/slice_and_dice,if=!variable.premed_snd_condition&spell_targets.shuriken_storm<6&!buff.shadow_dance.up&buff.slice_and_dice.remains<fight_remains&refreshable\nactions.finish+=/slice_and_dice,if=variable.premed_snd_condition&cooldown.shadow_dance.charges_fractional<1.75&buff.slice_and_dice.remains<cooldown.symbols_of_death.remains&(cooldown.shadow_dance.ready&buff.symbols_of_death.remains-buff.shadow_dance.remains<1.2)\nactions.finish+=/variable,name=skip_rupture,value=buff.thistle_tea.up&spell_targets.shuriken_storm=1||buff.shadow_dance.up&(spell_targets.shuriken_storm=1||dot.rupture.ticking&spell_targets.shuriken_storm>=2)\n# Keep up Rupture if it is about to run out.\nactions.finish+=/rupture,if=(!variable.skip_rupture||variable.priority_rotation)&target.time_to_die-remains>6&refreshable\n# Refresh Rupture early for Finality\nactions.finish+=/rupture,if=!variable.skip_rupture&buff.finality_rupture.up&cooldown.shadow_dance.remains<12&cooldown.shadow_dance.charges_fractional<=1&spell_targets.shuriken_storm=1&(talent.dark_brew||talent.danse_macabre)\n# Sync Cold Blood with Secret Technique when possible\nactions.finish+=/cold_blood,if=buff.shadow_dance.up&(buff.danse_macabre.stack>=3||!talent.danse_macabre)\nactions.finish+=/secret_technique,if=buff.shadow_dance.up&(buff.danse_macabre.stack>=3||!talent.danse_macabre)\n# Multidotting targets that will live for the duration of Rupture, refresh during pandemic.\nactions.finish+=/rupture,cycle_targets=1,if=!variable.skip_rupture&!variable.priority_rotation&spell_targets.shuriken_storm>=2&target.time_to_die>=(2*combo_points)&refreshable\n# Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.\nactions.finish+=/rupture,if=!variable.skip_rupture&remains<cooldown.symbols_of_death.remains+10&cooldown.symbols_of_death.remains<=5&target.time_to_die-remains>cooldown.symbols_of_death.remains+5\nactions.finish+=/black_powder,if=!variable.priority_rotation&spell_targets>=3\nactions.finish+=/eviscerate\n\n# Stealth Cooldowns  Helper Variable\nactions.stealth_cds+=/variable,name=shd_threshold,value=cooldown.shadow_dance.charges_fractional>=0.75+talent.shadow_dance\n# Vanish if we are capping on Dance charges. Early before first dance if we have no Nightstalker but Dark Shadow in order to get Rupture up (no Master Assassin).\nactions.stealth_cds+=/vanish,if=(!talent.danse_macabre||spell_targets.shuriken_storm>=3)&!variable.shd_threshold&combo_points.deficit>1\n# Pool for Shadowmeld + Shadowstrike unless we are about to cap on Dance charges. Only when Find Weakness is about to run out.\nactions.stealth_cds+=/pool_resource,for_next=1,extra_amount=40,if=race.night_elf\nactions.stealth_cds+=/shadowmeld,if=energy>=40&energy.deficit>=10&!variable.shd_threshold&combo_points.deficit>4\n# CP thresholds for entering Shadow Dance Default to start dance with 0 or 1 combo point\nactions.stealth_cds+=/variable,name=shd_combo_points,value=combo_points<=1\n# Use stealth cooldowns with high combo points when playing shuriken tornado or with high target counts\nactions.stealth_cds+=/variable,name=shd_combo_points,value=combo_points.deficit<=1,if=spell_targets.shuriken_storm>(4-2*talent.shuriken_tornado.enabled)||variable.priority_rotation&spell_targets.shuriken_storm>=4\n# Use stealth cooldowns on any combo point on 4 targets\nactions.stealth_cds+=/variable,name=shd_combo_points,value=1,if=spell_targets.shuriken_storm=(4-talent.seal_fate)\n# Dance during Symbols or above threshold.\nactions.stealth_cds+=/shadow_dance,if=(variable.shd_combo_points&(buff.symbols_of_death.remains>=(2.2-talent.flagellation.enabled)||variable.shd_threshold)||buff.flagellation.up||buff.flagellation_persist.remains>=6||spell_targets.shuriken_storm>=4&cooldown.symbols_of_death.remains>10)&!buff.the_rotten.up\n# Burn Dances charges if before the fight ends if SoD won't be ready in time.\nactions.stealth_cds+=/shadow_dance,if=variable.shd_combo_points&fight_remains<cooldown.symbols_of_death.remains||!talent.shadow_dance&dot.rupture.ticking&spell_targets.shuriken_storm<=4\n\n# Stealthed Rotation  If Stealth/vanish are up, use Shadowstrike to benefit from the passive bonus and Find Weakness, even if we are at max CP (unless using Master Assassin)\nactions.stealthed+=/shadowstrike,if=(buff.stealth.up||buff.vanish.up)&(spell_targets.shuriken_storm<4||variable.priority_rotation)\n# Variable to Gloomblade / Backstab when on 4 or 5 combo points with premediation and when the combo point is not anima charged\nactions.stealthed+=/variable,name=gloomblade_condition,value=buff.danse_macabre.stack<5&(combo_points.deficit=2||combo_points.deficit=3)&(buff.premeditation.up||effective_combo_points<7)&(spell_targets.shuriken_storm<=8||talent.lingering_shadow)\nactions.stealthed+=/shuriken_storm,if=variable.gloomblade_condition&buff.silent_storm.up&!debuff.find_weakness.remains\nactions.stealthed+=/gloomblade,if=variable.gloomblade_condition\nactions.stealthed+=/backstab,if=variable.gloomblade_condition&talent.danse_macabre&buff.danse_macabre.stack<=2&spell_targets.shuriken_storm<=2\nactions.stealthed+=/call_action_list,name=finish,if=variable.effective_combo_points>=cp_max_spend\n# Finish earlier with Shuriken tornado up.\nactions.stealthed+=/call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2\n# Also safe to finish at 4+ CP with exactly 4 targets. (Same as outside stealth.)\nactions.stealthed+=/call_action_list,name=finish,if=spell_targets.shuriken_storm>=4-talent.seal_fate&variable.effective_combo_points>=4\n# Finish at lower combo points if you are talented in DS, SS or Seal Fate\nactions.stealthed+=/call_action_list,name=finish,if=combo_points.deficit<=1+(talent.seal_fate||talent.deeper_stratagem||talent.secret_stratagem)\n# Use Gloomblade or Backstab when close to hitting max PV stacks\nactions.stealthed+=/gloomblade,if=buff.perforated_veins.stack>=5&spell_targets.shuriken_storm<3\nactions.stealthed+=/backstab,if=buff.perforated_veins.stack>=5&spell_targets.shuriken_storm<3\nactions.stealthed+=/shadowstrike,if=stealthed.sepsis&spell_targets.shuriken_storm<4\nactions.stealthed+=/shuriken_storm,if=spell_targets>=3+buff.the_rotten.up&(!buff.premeditation.up||spell_targets>=7)\n# Shadowstrike to refresh Find Weakness and to ensure we can carry over a full FW into the next SoD if possible.\nactions.stealthed+=/shadowstrike,if=debuff.find_weakness.remains<=1||cooldown.symbols_of_death.remains<18&debuff.find_weakness.remains<cooldown.symbols_of_death.remains\nactions.stealthed+=/shadowstrike",
				},
				["Blood"] = {
					["source"] = "SimulationCraft",
					["builtIn"] = true,
					["date"] = 20221218,
					["spec"] = 250,
					["desc"] = "",
					["lists"] = {
						["drw_up"] = {
							{
								["enabled"] = true,
								["criteria"] = "! dot.blood_plague.ticking",
								["action"] = "blood_boil",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! ( talent.shattering_bones.enabled & death_and_decay.ticking )",
								["action"] = "tombstone",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max",
								["action"] = "death_strike",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( buff.bone_shield.remains <= 4 || ( buff.bone_shield.stack < variable.bone_shield_refresh_value + 1 ) ) & runic_power.deficit > 10 & rune.time_to_3 > gcd.max",
								["action"] = "deaths_caress",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20",
								["action"] = "marrowrend",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
								["action"] = "soul_reaper",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
								["action"] = "soul_reaper",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( talent.sanguine_ground.enabled || talent.unholy_ground.enabled )",
								["action"] = "death_and_decay",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.blood_boil > 2 & charges_fractional >= 1.1",
								["action"] = "blood_boil",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( 25 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
								["var_name"] = "heart_strike_rp_drw",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit <= variable.heart_strike_rp_drw || runic_power >= variable.death_strike_dump_amount",
								["action"] = "death_strike",
							}, -- [11]
							{
								["action"] = "consumption",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "charges_fractional >= 1.1 & buff.hemostasis.stack < 5",
								["action"] = "blood_boil",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "rune.time_to_2 < gcd.max || runic_power.deficit >= variable.heart_strike_rp_drw",
								["action"] = "heart_strike",
							}, -- [14]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Interrupt",
								["action"] = "mind_freeze",
							}, -- [1]
							{
								["action"] = "strangulate",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "65",
								["var_name"] = "death_strike_dump_amount",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "bone_shield_refresh_value",
								["value"] = "4",
								["value_else"] = "5",
								["criteria"] = "! talent.deaths_caress.enabled || talent.consumption.enabled || talent.blooddrinker.enabled",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.dancing_rune_weapon.up",
								["action"] = "potion",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [6]
							{
								["action"] = "raise_dead",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "tanking & incoming_damage_5s >= ibf_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up )",
								["action"] = "icebound_fortitude",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "tanking & incoming_damage_5s >= vb_damage & ! ( buff.dancing_rune_weapon.up || buff.icebound_fortitude.up )",
								["action"] = "vampiric_blood",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.blood_shield.up & buff.blood_shield.remains <= gcd.max",
								["action"] = "death_strike",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! buff.bone_shield.up",
								["action"] = "deaths_caress",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( talent.unholy_ground.enabled || talent.sanguine_ground.enabled || spell_targets.death_and_decay > 3 ) || buff.crimson_scourge.up",
								["action"] = "death_and_decay",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power <= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || target.time_to_die < 10",
								["action"] = "death_strike",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dancing_rune_weapon.up",
								["action"] = "blooddrinker",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "racials",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dancing_rune_weapon.up & ( pet.ghoul.remains < 2 || boss & fight_remains < gcd.max )",
								["action"] = "sacrificial_pact",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenants",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( rune <= 2 & rune.time_to_4 > gcd.max & charges_fractional >= 1.8 ) || rune.time_to_3 > gcd.max",
								["action"] = "blood_tap",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.tightening_grasp.enabled",
								["action"] = "gorefiends_grasp",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "rune < 6 & runic_power.deficit > 5",
								["action"] = "empower_rune_weapon",
							}, -- [20]
							{
								["action"] = "abomination_limb",
								["enabled"] = true,
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dancing_rune_weapon.up",
								["action"] = "dancing_rune_weapon",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "buff.dancing_rune_weapon.up",
								["list_name"] = "drw_up",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "standard",
							}, -- [24]
						},
						["precombat"] = {
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [1]
						},
						["standard"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! ( talent.shattering_bones.enabled & death_and_decay.ticking ) & cooldown.dancing_rune_weapon.remains >= 25",
								["action"] = "tombstone",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( 10 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
								["var_name"] = "heart_strike_rp",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power <= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || target.time_to_die < 10",
								["action"] = "death_strike",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( buff.bone_shield.remains <= 4 || ( buff.bone_shield.stack < variable.bone_shield_refresh_value + 1 ) ) & runic_power.deficit > 10 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains ) & ! talent.consumption.enabled & ! talent.blooddrinker.enabled & rune.time_to_3 > gcd.max",
								["action"] = "deaths_caress",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains )",
								["action"] = "marrowrend",
							}, -- [5]
							{
								["action"] = "consumption",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
								["action"] = "soul_reaper",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
								["action"] = "soul_reaper",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runic_power >= 100",
								["action"] = "bonestorm",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "charges_fractional >= 1.8 & ( buff.hemostasis.stack <= ( 5 - spell_targets.blood_boil ) || spell_targets.blood_boil > 2 )",
								["action"] = "blood_boil",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "rune.time_to_4 < gcd.max",
								["action"] = "heart_strike",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "charges_fractional >= 1.1",
								["action"] = "blood_boil",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( rune > 1 & ( rune.time_to_3 < gcd.max || buff.bone_shield.stack > 7 ) )",
								["action"] = "heart_strike",
							}, -- [13]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
								["var_name"] = "trinket_1_buffs",
								["description"] = "Prioritize damage dealing on use trinkets over trinkets that give buffs",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
								["var_name"] = "trinket_2_buffs",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket_1_buffs",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket_2_buffs",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_1_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( trinket.t2.cooldown.remains || variable.trinket_2_buffs )",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_2_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( trinket.t1.cooldown.remains || variable.trinket_1_buffs )",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [6]
						},
						["covenants"] = {
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & ( ! buff.deaths_due.up || buff.deaths_due.remains < 4 || buff.crimson_scourge.up )",
								["action"] = "deaths_due",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dancing_rune_weapon.remains > 3 & runic_power >= ( 90 - ( spell_targets.swarming_mist * 3 ) )",
								["action"] = "swarming_mist",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "rune < 3 & runic_power < 100",
								["action"] = "shackle_the_unworthy",
							}, -- [4]
						},
						["racials"] = {
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dancing_rune_weapon.ready & ( ! cooldown.blooddrinker.ready || ! talent.blooddrinker.enabled )",
								["action"] = "blood_fury",
							}, -- [1]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 || rune < 1 & runic_power.deficit > 60",
								["action"] = "arcane_pulse",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.unholy_strength.up",
								["action"] = "lights_judgment",
							}, -- [4]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 20",
								["action"] = "arcane_torrent",
							}, -- [8]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'drw_up' required some automated changes.\nLine 8: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\nLine 8: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 12: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 12: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'standard' required some automated changes.\nLine 4: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\nLine 5: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\n\nThe import for 'covenants' required some automated changes.\nLine 3: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 3: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nImported 7 action lists.\n",
					["profile"] = "actions.precombat+=/fleshcraft\n\n# Interrupt\nactions+=/mind_freeze\nactions+=/strangulate\nactions+=/variable,name=death_strike_dump_amount,value=65\nactions+=/variable,name=bone_shield_refresh_value,value=4,op=setif,condition=!talent.deaths_caress.enabled||talent.consumption.enabled||talent.blooddrinker.enabled,value_else=5\nactions+=/potion,if=buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=trinkets\nactions+=/raise_dead\nactions+=/icebound_fortitude,if=tanking&incoming_damage_5s>=ibf_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up)\nactions+=/vampiric_blood,if=tanking&incoming_damage_5s>=vb_damage&!(buff.dancing_rune_weapon.up||buff.icebound_fortitude.up)\nactions+=/death_strike,if=buff.blood_shield.up&buff.blood_shield.remains<=gcd.max\nactions+=/deaths_caress,if=!buff.bone_shield.up\nactions+=/death_and_decay,if=!death_and_decay.ticking&(talent.unholy_ground||talent.sanguine_ground||spell_targets.death_and_decay>3)||buff.crimson_scourge.up\nactions+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power<=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||target.time_to_die<10\nactions+=/blooddrinker,if=!buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=racials\nactions+=/sacrificial_pact,if=!buff.dancing_rune_weapon.up&(pet.ghoul.remains<2||boss&fight_remains<gcd)\nactions+=/call_action_list,name=covenants\nactions+=/blood_tap,if=(rune<=2&rune.time_to_4>gcd&charges_fractional>=1.8)||rune.time_to_3>gcd\nactions+=/gorefiends_grasp,if=talent.tightening_grasp.enabled\nactions+=/empower_rune_weapon,if=rune<6&runic_power.deficit>5\nactions+=/abomination_limb\nactions+=/dancing_rune_weapon,if=!buff.dancing_rune_weapon.up\nactions+=/run_action_list,name=drw_up,if=buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=standard\n\nactions.covenants=deaths_due,if=!death_and_decay.ticking&(!buff.deaths_due.up||buff.deaths_due.remains<4||buff.crimson_scourge.up)\nactions.covenants+=/swarming_mist,if=cooldown.dancing_rune_weapon.remains>3&runic_power>=(90-(spell_targets.swarming_mist*3))\nactions.covenants+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.covenants+=/shackle_the_unworthy,if=rune<3&runic_power<100\n\nactions.drw_up+=/blood_boil,if=!dot.blood_plague.ticking\nactions.drw_up+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!(talent.shattering_bones.enabled&death_and_decay.ticking)\nactions.drw_up+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd\nactions.drw_up+=/deaths_caress,if=(buff.bone_shield.remains<=4||(buff.bone_shield.stack<variable.bone_shield_refresh_value+1))&runic_power.deficit>10&rune.time_to_3>gcd\nactions.drw_up+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20\nactions.drw_up+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/death_and_decay,if=!death_and_decay.ticking&(talent.sanguine_ground||talent.unholy_ground)\nactions.drw_up+=/blood_boil,if=spell_targets.blood_boil>2&charges_fractional>=1.1\nactions.drw_up+=/variable,name=heart_strike_rp_drw,value=(25+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.drw_up+=/death_strike,if=runic_power.deficit<=variable.heart_strike_rp_drw||runic_power>=variable.death_strike_dump_amount\nactions.drw_up+=/consumption\nactions.drw_up+=/blood_boil,if=charges_fractional>=1.1&buff.hemostasis.stack<5\nactions.drw_up+=/heart_strike,if=rune.time_to_2<gcd||runic_power.deficit>=variable.heart_strike_rp_drw\n\n\nactions.racials=blood_fury,if=cooldown.dancing_rune_weapon.ready&(!cooldown.blooddrinker.ready||!talent.blooddrinker.enabled)\nactions.racials+=/berserking\nactions.racials+=/arcane_pulse,if=active_enemies>=2||rune<1&runic_power.deficit>60\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up\nactions.racials+=/ancestral_call\nactions.racials+=/fireblood\nactions.racials+=/bag_of_tricks\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20\n\nactions.standard+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!(talent.shattering_bones.enabled&death_and_decay.ticking)&cooldown.dancing_rune_weapon.remains>=25\nactions.standard+=/variable,name=heart_strike_rp,value=(10+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.standard+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power<=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||target.time_to_die<10\nactions.standard+=/deaths_caress,if=(buff.bone_shield.remains<=4||(buff.bone_shield.stack<variable.bone_shield_refresh_value+1))&runic_power.deficit>10&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)&!talent.consumption.enabled&!talent.blooddrinker.enabled&rune.time_to_3>gcd\nactions.standard+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)\nactions.standard+=/consumption\nactions.standard+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/bonestorm,if=runic_power>=100\nactions.standard+=/blood_boil,if=charges_fractional>=1.8&(buff.hemostasis.stack<=(5-spell_targets.blood_boil)||spell_targets.blood_boil>2)\nactions.standard+=/heart_strike,if=rune.time_to_4<gcd\nactions.standard+=/blood_boil,if=charges_fractional>=1.1\nactions.standard+=/heart_strike,if=(rune>1&(rune.time_to_3<gcd||buff.bone_shield.stack>7))\n\n# Prioritize damage dealing on use trinkets over trinkets that give buffs\nactions.trinkets+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.trinkets+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs\nactions.trinkets+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(trinket.2.cooldown.remains||variable.trinket_2_buffs)\nactions.trinkets+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(trinket.1.cooldown.remains||variable.trinket_1_buffs)",
					["author"] = "SimC",
				},
				["Devastation"] = {
					["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/apl/apl_evoker.cpp",
					["builtIn"] = true,
					["date"] = 20221207,
					["spec"] = 1467,
					["desc"] = "",
					["lists"] = {
						["es"] = {
							{
								["enabled"] = true,
								["action"] = "eternity_surge",
								["empower_to"] = 1,
								["description"] = "Eternity Surge, use rank most applicable to targets.",
								["criteria"] = "spell_targets.pyre <= 1 + talent.eternitys_span.enabled || buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.pyre <= 2 + 2 * talent.eternitys_span.enabled || buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste",
								["action"] = "eternity_surge",
								["empower_to"] = 2,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.pyre <= 3 + 3 * talent.eternitys_span.enabled || ! talent.font_of_magic.enabled || buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste",
								["action"] = "eternity_surge",
								["empower_to"] = 3,
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "eternity_surge",
								["empower_to"] = 4,
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "quell",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "unravel",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up || boss & fight_remains < 35",
								["action"] = "potion",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.dragonrage.remains",
								["var_name"] = "next_dragonrage",
								["description"] = "Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "max",
								["action"] = "variable",
								["value"] = "cooldown.eternity_surge.remains - 2 * gcd.max",
								["var_name"] = "next_dragonrage",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "max",
								["action"] = "variable",
								["value"] = "cooldown.fire_breath.remains - gcd.max",
								["var_name"] = "next_dragonrage",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1.3 * spell_haste",
								["var_name"] = "r1_cast_time",
								["description"] = "Rank 1 empower spell cast time TODO: multiplier should be 1.0 but 1.3 results in more dps for EBF builds",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "spell_targets.pyre >= 3",
								["list_name"] = "aoe",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "st",
							}, -- [10]
						},
						["precombat"] = {
							{
								["action"] = "blessing_of_the_bronze",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
								["var_name"] = "trinket_1_buffs",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
								["var_name"] = "trinket_2_buffs",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets",
								["value"] = "1",
								["var_name"] = "trinket_1_sync",
								["action"] = "variable",
								["value_else"] = "0.5",
								["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t1.cooldown.duration = 0 )",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_2_sync",
								["value"] = "1",
								["value_else"] = "0.5",
								["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t2.cooldown.duration = 0 )",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.",
								["value"] = "2",
								["var_name"] = "trinket_priority",
								["action"] = "variable",
								["value_else"] = "1",
								["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.is.spoils_of_neltharus",
								["var_name"] = "trinket_1_manual",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.is.spoils_of_neltharus",
								["var_name"] = "trinket_2_manual",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.firestorm.enabled",
								["action"] = "firestorm",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! talent.firestorm.enabled",
								["action"] = "living_flame",
							}, -- [11]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "cooldown.fire_breath.remains <= gcd.max & cooldown.eternity_surge.remains < 3 * gcd.max",
								["action"] = "dragonrage",
								["description"] = "AOE action list, also a mess.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & ( spell_targets.pyre <= 6 || ! cooldown.fire_breath.up )",
								["action"] = "tip_the_scales",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "buff.dragonrage.up || ! talent.dragonrage.enabled || cooldown.dragonrage.remains > 10 & talent.everburning_flame.enabled || empowering.fire_breath",
								["list_name"] = "fb",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains > 10 & spell_targets.pyre >= 7",
								["action"] = "fire_breath",
								["empower_to"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains > 10 & spell_targets.pyre >= 6",
								["action"] = "fire_breath",
								["empower_to"] = 2,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains > 10 & spell_targets.pyre >= 4",
								["action"] = "fire_breath",
								["empower_to"] = 3,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains > 10",
								["action"] = "fire_breath",
								["empower_to"] = 2,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "buff.dragonrage.up || ! talent.dragonrage.enabled || cooldown.dragonrage.remains > 15 || empowering.eternity_surge",
								["list_name"] = "es",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max",
								["action"] = "azure_strike",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dragonrage.up",
								["action"] = "deep_breath",
							}, -- [10]
							{
								["action"] = "firestorm",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "shattering_star",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains < gcd.max * 6 & cooldown.fire_breath.remains < 6 * gcd.max & cooldown.eternity_surge.remains < 6 * gcd.max",
								["action"] = "azure_strike",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "talent.volatility.enabled",
								["action"] = "pyre",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.burnout.up & buff.leaping_flames.up & ! buff.essence_burst.up",
								["action"] = "living_flame",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains >= 10 & spell_targets.pyre >= 4",
								["action"] = "pyre",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.dragonrage.remains >= 10 & spell_targets.pyre = 3 & buff.charged_blast.stack >= 10",
								["action"] = "pyre",
							}, -- [17]
							{
								["enabled"] = true,
								["chain"] = "1",
								["action"] = "disintegrate",
								["criteria"] = "! talent.shattering_star.enabled || cooldown.shattering_star.remains > 5 || essence > essence.max - 1 || buff.essence_burst.stack = buff.essence_burst.max_stack",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.snapfire.enabled & buff.burnout.up",
								["action"] = "living_flame",
							}, -- [19]
							{
								["action"] = "azure_strike",
								["enabled"] = true,
							}, -- [20]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "spoils_of_neltharus",
								["action"] = "spoils_of_neltharus",
								["criteria"] = "buff.dragonrage.up & ( buff.spoils_of_neltharus_mastery.up || buff.spoils_of_neltharus_haste.up || buff.dragonrage.remains + 6 * ( ( cooldown.eternity_surge.remains <= gcd.max * 2 ) + ( cooldown.fire_breath.remains <= gcd.max * 2 ) ) <= 18 ) || boss & fight_remains <= 20",
								["description"] = "Try and get spoils to prvide haste or mastery stats, but if dragonrage gets too short just use it anyway.",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["slot"] = "trinket1",
								["description"] = "The trinket with the highest estimated value, will be used first and paired with Dragonrage.",
								["criteria"] = "buff.dragonrage.up & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) & ! variable.trinket_1_manual || trinket.t1.buff_duration >= fight_remains || trinket.t1.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 1 )",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) & ! variable.trinket_2_manual || trinket.t2.buff_duration >= fight_remains || trinket.t2.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 2 )",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["slot"] = "trinket1",
								["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
								["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_1_manual",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_2_manual",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [5]
						},
						["st"] = {
							{
								["enabled"] = true,
								["criteria"] = "cooldown.fire_breath.remains < gcd.max & cooldown.eternity_surge.remains < 2 * gcd.max || boss & fight_remains < 30",
								["action"] = "dragonrage",
								["description"] = "ST Action List, it's a mess",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & ( buff.dragonrage.remains < variable.r1_cast_time & ( buff.dragonrage.remains > cooldown.fire_breath.remains || buff.dragonrage.remains > cooldown.eternity_surge.remains ) || talent.feed_the_flames.enabled & ! cooldown.fire_breath.up )",
								["action"] = "tip_the_scales",
								["description"] = "Use to extend DR when an empower cast won't fit inside the DR window anymore. When running FTF use on ES at the start of DR to maximize uses",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! talent.dragonrage.enabled || variable.next_dragonrage > 15 || ! talent.animosity.enabled || empowering.fire_breath",
								["list_name"] = "fb",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "! talent.dragonrage.enabled || variable.next_dragonrage > 15 || ! talent.animosity.enabled || empowering.eternity_surge",
								["list_name"] = "es",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "wait",
								["sec"] = "cooldown.fire_breath.remains",
								["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time * buff.tip_the_scales.down & buff.dragonrage.remains - cooldown.fire_breath.remains >= variable.r1_cast_time * buff.tip_the_scales.down",
								["description"] = "Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR",
							}, -- [5]
							{
								["enabled"] = true,
								["sec"] = "cooldown.eternity_surge.remains",
								["action"] = "wait",
								["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time & buff.dragonrage.remains - cooldown.eternity_surge.remains > variable.r1_cast_time * buff.tip_the_scales.down",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dragonrage.up || buff.essence_burst.stack = buff.essence_burst.max_stack || talent.eye_of_infinity.enabled",
								["action"] = "shattering_star",
								["description"] = "Wait for 2 EBs to use SS while inside DR, otherwise use on CD",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max & buff.burnout.up",
								["action"] = "living_flame",
								["description"] = "Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max",
								["action"] = "azure_strike",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down || buff.snapfire.up",
								["action"] = "firestorm",
								["description"] = "Hard cast only outside of SS and DR windows, always spend snapfire procs",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.burnout.up & buff.essence_burst.stack < buff.essence_burst.max_stack & essence < essence.max - 1",
								["action"] = "living_flame",
								["description"] = "Spend burnout procs without overcapping resources",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.dragonrage.up & ( essence < 3 & ! buff.essence_burst.up || ( talent.shattering_star.enabled & cooldown.shattering_star.remains <= ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max ) )",
								["action"] = "azure_strike",
								["description"] = "Ensure we clip Disintegrate inside DR even with our fillers, Pool 1-2 GCDs before SS is up inside DR",
							}, -- [12]
							{
								["enabled"] = true,
								["chain"] = "1",
								["action"] = "disintegrate",
								["interrupt_if"] = "buff.dragonrage.up&ticks>=2",
								["early_chain_if"] = "buff.dragonrage.up&ticks>=2",
								["criteria"] = "buff.dragonrage.up || ( ! talent.shattering_star.enabled || cooldown.shattering_star.remains > 6 || essence > essence.max - 1 || buff.essence_burst.stack = buff.essence_burst.max_stack )",
								["description"] = "In DR chain/clip after the 3rd damage tick, Outside of DR pool 6 seconds before SS unless it would result in overcapping resources TODO: revisit pooling conditions",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! buff.dragonrage.up & spell_targets.deep_breath > 1",
								["action"] = "deep_breath",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "kharnalex_the_first_light",
								["action"] = "kharnalex_the_first_light",
								["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down",
							}, -- [15]
							{
								["action"] = "living_flame",
								["enabled"] = true,
							}, -- [16]
						},
						["fb"] = {
							{
								["enabled"] = true,
								["action"] = "fire_breath",
								["empower_to"] = 1,
								["description"] = "Use Firebreath with some really weird criteria. Override it for st because its not actually useful? Idk. TODO: Someone look at this it's a mess.",
								["criteria"] = "( 20 + 2 * talent.blast_furnace.rank ) + dot.fire_breath_damage.remains < ( 20 + 2 * talent.blast_furnace.rank ) * 1.3 || buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste || active_enemies <= 2",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( 14 + 2 * talent.blast_furnace.rank ) + dot.fire_breath_damage.remains < ( 20 + 2 * talent.blast_furnace.rank ) * 1.3 || buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste",
								["action"] = "fire_breath",
								["empower_to"] = 2,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( 8 + 2 * talent.blast_furnace.rank ) + dot.fire_breath_damage.remains < ( 20 + 2 * talent.blast_furnace.rank ) * 1.3 || ! talent.font_of_magic.enabled || buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste",
								["action"] = "fire_breath",
								["empower_to"] = 3,
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "fire_breath",
								["empower_to"] = 4,
							}, -- [4]
						},
					},
					["version"] = 20221207,
					["warnings"] = "The import for 'es' required some automated changes.\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 2: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 2: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 3: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t1.cooldown.duration=0)'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t2.cooldown.duration=0)'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 6: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 6: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 7: Converted 'trinket.1.is.spoils_of_neltharus' to 'trinket.t1.is.spoils_of_neltharus' (1x).\nLine 8: Converted 'trinket.2.is.spoils_of_neltharus' to 'trinket.t2.is.spoils_of_neltharus' (1x).\nLine 10: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nLine 11: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 3: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 8: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 14: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 18: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 19: Converted 'talent.snapfire' to 'talent.snapfire.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.feed_the_flames' to 'talent.feed_the_flames.enabled' (1x).\nLine 3: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 3: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 4: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 4: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 5: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 6: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 7: Converted 'talent.eye_of_infinity' to 'talent.eye_of_infinity.enabled' (1x).\nLine 7: Converted operations in '!buff.dragonrage.up||buff.essence_burst.stack==buff.essence_burst.max_stack||talent.eye_of_infinity.enabled' to '!buff.dragonrage.up||buff.essence_burst.stack=buff.essence_burst.max_stack||talent.eye_of_infinity.enabled'.\nLine 12: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 13: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 13: Converted operations in 'buff.dragonrage.up||(!talent.shattering_star.enabled||cooldown.shattering_star.remains>6||essence>essence.max-1||buff.essence_burst.stack==buff.essence_burst.max_stack)' to 'buff.dragonrage.up||(!talent.shattering_star.enabled||cooldown.shattering_star.remains>6||essence>essence.max-1||buff.essence_burst.stack=buff.essence_burst.max_stack)'.\n\nThe import for 'fb' required some automated changes.\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nImported 7 action lists.\n",
					["author"] = "SimC",
					["profile"] = "actions.precombat+=/blessing_of_the_bronze\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\n# Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.2.cooldown.duration=0)\n# Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spoils_of_neltharus\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spoils_of_neltharus\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/firestorm,if=talent.firestorm\nactions.precombat+=/living_flame,if=!talent.firestorm\n\nactions+=/quell\nactions+=/unravel\nactions+=/potion,if=buff.dragonrage.up||boss&fight_remains<35\n# Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.\nactions+=/variable,name=next_dragonrage,value=cooldown.dragonrage.remains\nactions+=/variable,name=next_dragonrage,op=max,value=cooldown.eternity_surge.remains-2*gcd.max\nactions+=/variable,name=next_dragonrage,op=max,value=cooldown.fire_breath.remains-gcd.max\n# Rank 1 empower spell cast time TODO: multiplier should be 1.0 but 1.3 results in more dps for EBF builds\nactions+=/variable,name=r1_cast_time,value=1.3*spell_haste\nactions+=/call_action_list,name=trinkets\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.pyre>=3\nactions+=/run_action_list,name=st\n\n# ST Action List, it's a mess\nactions.st+=/dragonrage,if=cooldown.fire_breath.remains<gcd.max&cooldown.eternity_surge.remains<2*gcd.max||boss&fight_remains<30\n# Use to extend DR when an empower cast won't fit inside the DR window anymore. When running FTF use on ES at the start of DR to maximize uses\nactions.st+=/tip_the_scales,if=buff.dragonrage.up&(buff.dragonrage.remains<variable.r1_cast_time&(buff.dragonrage.remains>cooldown.fire_breath.remains||buff.dragonrage.remains>cooldown.eternity_surge.remains)||talent.feed_the_flames&!cooldown.fire_breath.up)\nactions.st+=/call_action_list,name=fb,if=!talent.dragonrage||variable.next_dragonrage>15||!talent.animosity||empowering.fire_breath\nactions.st+=/call_action_list,name=es,if=!talent.dragonrage||variable.next_dragonrage>15||!talent.animosity||empowering.eternity_surge\n# Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR\nactions.st+=/wait,sec=cooldown.fire_breath.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time*buff.tip_the_scales.down&buff.dragonrage.remains-cooldown.fire_breath.remains>=variable.r1_cast_time*buff.tip_the_scales.down\nactions.st+=/wait,sec=cooldown.eternity_surge.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time&buff.dragonrage.remains-cooldown.eternity_surge.remains>variable.r1_cast_time*buff.tip_the_scales.down\n# Wait for 2 EBs to use SS while inside DR, otherwise use on CD\nactions.st+=/shattering_star,if=!buff.dragonrage.up||buff.essence_burst.stack==buff.essence_burst.max_stack||talent.eye_of_infinity\n# Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs\nactions.st+=/living_flame,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max&buff.burnout.up\nactions.st+=/azure_strike,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max\n# Hard cast only outside of SS and DR windows, always spend snapfire procs\nactions.st+=/firestorm,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down||buff.snapfire.up\n# Spend burnout procs without overcapping resources\nactions.st+=/living_flame,if=buff.burnout.up&buff.essence_burst.stack<buff.essence_burst.max_stack&essence<essence.max-1\n# Ensure we clip Disintegrate inside DR even with our fillers, Pool 1-2 GCDs before SS is up inside DR\nactions.st+=/azure_strike,if=buff.dragonrage.up&(essence<3&!buff.essence_burst.up||(talent.shattering_star&cooldown.shattering_star.remains<=(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max))\n# In DR chain/clip after the 3rd damage tick, Outside of DR pool 6 seconds before SS unless it would result in overcapping resources TODO: revisit pooling conditions\nactions.st+=/disintegrate,chain=1,early_chain_if=buff.dragonrage.up&ticks>=2,interrupt_if=buff.dragonrage.up&ticks>=2,if=buff.dragonrage.up||(!talent.shattering_star||cooldown.shattering_star.remains>6||essence>essence.max-1||buff.essence_burst.stack==buff.essence_burst.max_stack)\nactions.st+=/deep_breath,if=!buff.dragonrage.up&spell_targets.deep_breath>1\nactions.st+=/use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down\nactions.st+=/living_flame\n\n# AOE action list, also a mess.\nactions.aoe+=/dragonrage,if=cooldown.fire_breath.remains<=gcd.max&cooldown.eternity_surge.remains<3*gcd.max\nactions.aoe+=/tip_the_scales,if=buff.dragonrage.up&(spell_targets.pyre<=6||!cooldown.fire_breath.up)\nactions.aoe+=/call_action_list,name=fb,if=buff.dragonrage.up||!talent.dragonrage||cooldown.dragonrage.remains>10&talent.everburning_flame||empowering.fire_breath\nactions.aoe+=/fire_breath,empower_to=1,if=cooldown.dragonrage.remains>10&spell_targets.pyre>=7\nactions.aoe+=/fire_breath,empower_to=2,if=cooldown.dragonrage.remains>10&spell_targets.pyre>=6\nactions.aoe+=/fire_breath,empower_to=3,if=cooldown.dragonrage.remains>10&spell_targets.pyre>=4\nactions.aoe+=/fire_breath,empower_to=2,if=cooldown.dragonrage.remains>10\nactions.aoe+=/call_action_list,name=es,if=buff.dragonrage.up||!talent.dragonrage||cooldown.dragonrage.remains>15||empowering.eternity_surge\nactions.aoe+=/azure_strike,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max\nactions.aoe+=/deep_breath,if=!buff.dragonrage.up\nactions.aoe+=/firestorm\nactions.aoe+=/shattering_star\nactions.aoe+=/azure_strike,if=cooldown.dragonrage.remains<gcd.max*6&cooldown.fire_breath.remains<6*gcd.max&cooldown.eternity_surge.remains<6*gcd.max\nactions.aoe+=/pyre,if=talent.volatility\nactions.aoe+=/living_flame,if=buff.burnout.up&buff.leaping_flames.up&!buff.essence_burst.up\nactions.aoe+=/pyre,if=cooldown.dragonrage.remains>=10&spell_targets.pyre>=4\nactions.aoe+=/pyre,if=cooldown.dragonrage.remains>=10&spell_targets.pyre=3&buff.charged_blast.stack>=10\nactions.aoe+=/disintegrate,chain=1,if=!talent.shattering_star||cooldown.shattering_star.remains>5||essence>essence.max-1||buff.essence_burst.stack=buff.essence_burst.max_stack\nactions.aoe+=/living_flame,if=talent.snapfire&buff.burnout.up\nactions.aoe+=/azure_strike\n\n# Use Firebreath with some really weird criteria. Override it for st because its not actually useful? Idk. TODO: Someone look at this it's a mess.\nactions.fb+=/fire_breath,empower_to=1,if=(20+2*talent.blast_furnace.rank)+dot.fire_breath_damage.remains<(20+2*talent.blast_furnace.rank)*1.3||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste||active_enemies<=2\nactions.fb+=/fire_breath,empower_to=2,if=(14+2*talent.blast_furnace.rank)+dot.fire_breath_damage.remains<(20+2*talent.blast_furnace.rank)*1.3||buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste\nactions.fb+=/fire_breath,empower_to=3,if=(8+2*talent.blast_furnace.rank)+dot.fire_breath_damage.remains<(20+2*talent.blast_furnace.rank)*1.3||!talent.font_of_magic||buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste\nactions.fb+=/fire_breath,empower_to=4\n\n# Eternity Surge, use rank most applicable to targets.\nactions.es+=/eternity_surge,empower_to=1,if=spell_targets.pyre<=1+talent.eternitys_span||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste\nactions.es+=/eternity_surge,empower_to=2,if=spell_targets.pyre<=2+2*talent.eternitys_span||buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste\nactions.es+=/eternity_surge,empower_to=3,if=spell_targets.pyre<=3+3*talent.eternitys_span||!talent.font_of_magic||buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste\nactions.es+=/eternity_surge,empower_to=4\n\n# Try and get spoils to prvide haste or mastery stats, but if dragonrage gets too short just use it anyway.\nactions.trinkets+=/use_item,name=spoils_of_neltharus,if=buff.dragonrage.up&(buff.spoils_of_neltharus_mastery.up||buff.spoils_of_neltharus_haste.up||buff.dragonrage.remains+6*((cooldown.eternity_surge.remains<=gcd.max*2)+(cooldown.fire_breath.remains<=gcd.max*2))<=18)||boss&fight_remains<=20\n# The trinket with the highest estimated value, will be used first and paired with Dragonrage.\nactions.trinkets+=/use_item,slot=trinket1,if=buff.dragonrage.up&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)&!variable.trinket_1_manual||trinket.1.proc.any_dps.duration>=fight_remains||trinket.1.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=1)\nactions.trinkets+=/use_item,slot=trinket2,if=buff.dragonrage.up&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)&!variable.trinket_2_manual||trinket.2.proc.any_dps.duration>=fight_remains||trinket.2.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=2)\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_1_manual\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_2_manual",
				},
				["Brewmaster"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221218,
					["author"] = "SimC",
					["desc"] = "The SimC Brewmaster priority uses Purifying Brew and Celestial Brew aggressively for DPS.  The addon has pared this back to support survivability.",
					["lists"] = {
						["cooldowns_niuzao_woo"] = {
							{
								["enabled"] = true,
								["description"] = "Name: Niuzao + Weapons of Order / Niuzao + Call to Arms",
								["criteria"] = "talent.weapons_of_order.enabled",
								["action"] = "weapons_of_order",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.invoke_niuzao_the_black_ox.enabled & buff.weapons_of_order.remains <= 16 & talent.weapons_of_order.enabled",
								["action"] = "invoke_niuzao_the_black_ox",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.invoke_niuzao_the_black_ox.enabled & ! talent.weapons_of_order.enabled",
								["action"] = "invoke_niuzao_the_black_ox",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & stagger.amounttototalpct >= 0.7 & ! buff.blackout_combo.up",
								["action"] = "purifying_brew",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.purifying_brew.remains_expected < 5 & ! buff.blackout_combo.up",
								["action"] = "purifying_brew",
							}, -- [5]
						},
						["cooldowns_improved_niuzao_cta"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "pb_in_window",
								["value"] = "floor ( cooldown.purifying_brew.charges_fractional + ( 10 + 2 * 0.05 ) / cooldown.purifying_brew.duration / 0.65 )",
								["description"] = "Name: Improved Niuzao + Call to Arms",
								["criteria"] = "prev.weapons_of_order",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "floor ( cooldown.purifying_brew.charges_fractional + ( 20 + 4 * 0.05 ) / cooldown.purifying_brew.duration / 0.65 )",
								["var_name"] = "pb_in_window",
								["criteria"] = "prev.invoke_niuzao_the_black_ox",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "sub",
								["action"] = "variable",
								["value"] = "1",
								["var_name"] = "pb_in_window",
								["criteria"] = "prev.purifying_brew & ( time - action.weapons_of_order.last_used <= 10 + 2 * 0.05 || time - action.invoke_niuzao_the_black_ox.last_used <= 20 + 4 * 0.05 )",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & ( time - action.purifying_brew.last_used >= 10 + 2 * 0.05 - time + action.weapons_of_order.last_used / variable.pb_in_window & time - action.weapons_of_order.last_used <= 10 + 2 * 0.05 )",
								["action"] = "purifying_brew",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & ( time - action.purifying_brew.last_used >= 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used / variable.pb_in_window & time - action.invoke_niuzao_the_black_ox.last_used <= 20 + 4 * 0.05 )",
								["action"] = "purifying_brew",
							}, -- [5]
							{
								["enabled"] = true,
								["use_off_gcd"] = 1,
								["action"] = "purifying_brew",
								["criteria"] = "talent.purifying_brew.enabled & ( variable.pb_in_window = 0 & 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used < 1 & 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used > 0 )",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.weapons_of_order.remains <= 3.5 & time - action.purifying_brew.last_used >= 3.5 + cooldown.weapons_of_order.remains",
								["action"] = "purifying_brew",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.weapons_of_order.enabled & time - action.purifying_brew.last_used <= 5",
								["action"] = "weapons_of_order",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.invoke_niuzao_the_black_ox.remains <= 3.5 & time - action.purifying_brew.last_used >= 3.5 + cooldown.invoke_niuzao_the_black_ox.remains & buff.weapons_of_order.remains <= 30 - 17",
								["action"] = "purifying_brew",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.invoke_niuzao_the_black_ox.enabled & buff.weapons_of_order.remains <= 30 - 17 & action.purifying_brew.last_used > action.weapons_of_order.last_used + 10 + 2 * 0.05",
								["action"] = "invoke_niuzao_the_black_ox",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.purifying_brew.full_recharge_time * 2 <= cooldown.weapons_of_order.remains - 3.5 & cooldown.purifying_brew.full_recharge_time * 2 <= cooldown.invoke_niuzao_the_black_ox.remains - 3.5",
								["action"] = "purifying_brew",
							}, -- [11]
						},
						["rotation_fom_boc"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.blackout_kick.duration_expected * ( 1 - ( boc_count )  % 3 ) + cooldown.blackout_kick.remains + 1",
								["var_name"] = "time_to_scheduled_ks",
								["description"] = "Name: Blackout Combo Salsalabim's Strength Chared Passions Fluidity of Motion Not High Haste",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.down",
								["action"] = "blackout_kick",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "boc_count % 3 = 1 & talent.rising_sun_kick.enabled",
								["action"] = "rising_sun_kick",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.up & boc_count % 3 = 1",
								["action"] = "breath_of_fire",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.up & boc_count % 3 = 2",
								["action"] = "keg_smash",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.up & boc_count % 3 = 0 & cooldown.keg_smash.charges_fractional > 1 & cooldown.keg_smash.full_recharge_time <= variable.time_to_scheduled_ks & energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 80",
								["action"] = "keg_smash",
							}, -- [6]
							{
								["enabled"] = true,
								["buff_name"] = "blackout_combo",
								["action"] = "cancel_buff",
								["criteria"] = "boc_count % 3 = 0",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.exploding_keg.enabled",
								["action"] = "exploding_keg",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.rushing_jade_wind.down & talent.rushing_jade_wind.enabled",
								["action"] = "rushing_jade_wind",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & talent.black_ox_brew.enabled",
								["action"] = "black_ox_brew",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.rising_sun_kick.enabled",
								["action"] = "rising_sun_kick",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & buff.charred_passions.up & active_enemies > 1",
								["action"] = "spinning_crane_kick",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & active_enemies = 1 & ! buff.blackout_combo.up",
								["action"] = "tiger_palm",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_wave.enabled",
								["action"] = "chi_wave",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_burst.enabled",
								["action"] = "chi_burst",
							}, -- [15]
						},
						["rotation_boc"] = {
							{
								["enabled"] = true,
								["description"] = "Name: Blackout Combo Salsalabim's Strength Charred Passions [Shadowboxing Treads or high haste Fluidity of Motion]",
								["action"] = "blackout_kick",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.rising_sun_kick.enabled",
								["action"] = "rising_sun_kick",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.up",
								["action"] = "breath_of_fire",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.up",
								["action"] = "keg_smash",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.exploding_keg.enabled",
								["action"] = "exploding_keg",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.rushing_jade_wind.down & talent.rushing_jade_wind.enabled",
								["action"] = "rushing_jade_wind",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & talent.black_ox_brew.enabled",
								["action"] = "black_ox_brew",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.keg_smash.charges_fractional > 1.5",
								["action"] = "keg_smash",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & active_enemies > 1",
								["action"] = "spinning_crane_kick",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & active_enemies = 1 & ! buff.blackout_combo.up",
								["action"] = "tiger_palm",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.celestial_brew.enabled & ! buff.blackout_combo.up",
								["action"] = "celestial_brew",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_wave.enabled",
								["action"] = "chi_wave",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_burst.enabled",
								["action"] = "chi_burst",
							}, -- [13]
						},
						["default"] = {
							{
								["action"] = "spear_hand_strike",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "diffuse_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "settings.purify_for_celestial & ( time_to_max_charges < gcd.max || buff.purified_chi.up & buff.purified_chi.remains < 1.5 * gcd.max ) || cooldown.celestial_brew.remains < 2 * gcd.max & charges_fractional > 1.5",
								["action"] = "purifying_brew",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.purified_chi.up & buff.blackout_combo.down",
								["action"] = "celestial_brew",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
								["criteria"] = "settings.purify_stagger_currhp > 0 & group & stagger.pct >= settings.purify_stagger_currhp",
								["action"] = "purifying_brew",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
								["criteria"] = "settings.purify_stagger_currhp > 0 & solo & stagger.pct >= settings.purify_stagger_currhp * 0.5",
								["action"] = "purifying_brew",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
								["criteria"] = "settings.purify_stagger_maxhp > 0 & group & stagger.pct >= settings.purify_stagger_maxhp",
								["action"] = "purifying_brew",
							}, -- [7]
							{
								["enabled"] = true,
								["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
								["criteria"] = "settings.purify_stagger_maxhp > 0 & solo & stagger.pct >= settings.purify_stagger_maxhp * 0.5",
								["action"] = "purifying_brew",
							}, -- [8]
							{
								["enabled"] = true,
								["description"] = "Cast PB during the Niuzao window, but only if recently hit.",
								["criteria"] = "stagger.amounttototalpct >= 0.7 & ( cooldown.invoke_niuzao_the_black_ox.remains < 5 || buff.invoke_niuzao_the_black_ox.up )",
								["action"] = "purifying_brew",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
								["criteria"] = "settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & group & stagger.pct > 20",
								["action"] = "purifying_brew",
							}, -- [10]
							{
								["enabled"] = true,
								["description"] = "Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
								["criteria"] = "settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & solo & stagger.pct > 10",
								["action"] = "purifying_brew",
							}, -- [11]
							{
								["enabled"] = true,
								["description"] = "Avoid capping charges, but pool charges shortly before Niuzao comes up and allow dumping to avoid capping during Niuzao.",
								["criteria"] = "health.pct < 75 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & buff.fortifying_brew.down",
								["action"] = "dampen_harm",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "health.pct < 50 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & ( buff.dampen_harm.down )",
								["action"] = "fortifying_brew",
							}, -- [13]
							{
								["enabled"] = true,
								["description"] = "Base DPS Cooldowns",
								["criteria"] = "talent.summon_white_tiger_statue.enabled",
								["action"] = "summon_white_tiger_statue",
							}, -- [14]
							{
								["action"] = "touch_of_death",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "! debuff.bonedust_brew_debuff.up & talent.bonedust_brew.enabled",
								["action"] = "bonedust_brew",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "jotungeirr_destinys_call",
								["action"] = "jotungeirr_destinys_call",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up & time > 1",
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.acquired_axe.up || boss & fight_remains < 25",
								["name"] = "cache_of_acquired_treasures",
								["action"] = "cache_of_acquired_treasures",
							}, -- [19]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [21]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [22]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [23]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [24]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [25]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [26]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Cooldown Action Lists",
								["strict"] = 1,
								["criteria"] = "( talent.invoke_niuzao_the_black_ox.enabled + talent.improved_invoke_niuzao_the_black_ox.enabled ) = 2 & ( talent.weapons_of_order.enabled + talent.call_to_arms.enabled ) <= 1",
								["list_name"] = "cooldowns_improved_niuzao_woo",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( talent.invoke_niuzao_the_black_ox.enabled + talent.improved_invoke_niuzao_the_black_ox.enabled ) = 2 & ( talent.weapons_of_order.enabled + talent.call_to_arms.enabled ) = 2",
								["list_name"] = "cooldowns_improved_niuzao_cta",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( talent.invoke_niuzao_the_black_ox.enabled + talent.improved_invoke_niuzao_the_black_ox.enabled ) <= 1",
								["list_name"] = "cooldowns_niuzao_woo",
							}, -- [30]
							{
								["enabled"] = true,
								["op"] = "set",
								["description"] = "Rotation Selection",
								["value"] = "0",
								["var_name"] = "rotation_selection",
								["action"] = "variable",
							}, -- [31]
							{
								["enabled"] = true,
								["op"] = "set",
								["criteria"] = "( talent.charred_passions.enabled || talent.dragonfire_brew.enabled ) & talent.salsalabims_strength.enabled",
								["value"] = "1",
								["var_name"] = "rotation_selection",
								["action"] = "variable",
							}, -- [32]
							{
								["enabled"] = true,
								["op"] = "set",
								["criteria"] = "( talent.charred_passions.enabled || talent.dragonfire_brew.enabled ) & talent.salsalabims_strength.enabled & talent.blackout_combo.enabled",
								["value"] = "2",
								["var_name"] = "rotation_selection",
								["action"] = "variable",
							}, -- [33]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "3 - variable.rotation_selection",
								["var_name"] = "rotation_selection",
							}, -- [34]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Rotation Action Lists",
								["strict"] = 1,
								["criteria"] = "variable.rotation_selection = 1 & ( ( ( 1 / spell_haste - 1 ) * 100 >= 1 / 3 & talent.fluidity_of_motion.enabled ) || ! talent.fluidity_of_motion.enabled )",
								["list_name"] = "rotation_boc",
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.rotation_selection = 1 & ( ( 1 / spell_haste - 1 ) * 100 < 1 / 3 & talent.fluidity_of_motion.enabled )",
								["list_name"] = "rotation_fom_boc",
							}, -- [36]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.rotation_selection = 2",
								["list_name"] = "rotation_chp_dfb",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Fallback Rotation",
								["strict"] = 1,
								["criteria"] = "variable.rotation_selection = 3",
								["list_name"] = "rotation_fallback",
							}, -- [38]
						},
						["precombat"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_burst.enabled",
								["action"] = "chi_burst",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_wave.enabled",
								["action"] = "chi_wave",
							}, -- [3]
						},
						["rotation_fallback"] = {
							{
								["enabled"] = true,
								["description"] = "Name: Fallback",
								["criteria"] = "cooldown.purifying_brew.charges_fractional >= 1.8 & ( cooldown.invoke_niuzao_the_black_ox.remains > 10 || buff.invoke_niuzao_the_black_ox.up )",
								["action"] = "purifying_brew",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.rising_sun_kick.enabled",
								["action"] = "rising_sun_kick",
							}, -- [2]
							{
								["action"] = "keg_smash",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.breath_of_fire.enabled",
								["action"] = "breath_of_fire",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.blackout_combo.down",
								["action"] = "blackout_kick",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.exploding_keg.enabled",
								["action"] = "exploding_keg",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.remains + execute_time ) >= 65",
								["action"] = "black_ox_brew",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.rushing_jade_wind.enabled",
								["action"] = "rushing_jade_wind",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.remains + execute_time ) >= 65",
								["action"] = "spinning_crane_kick",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_wave.enabled",
								["action"] = "chi_wave",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_burst.enabled",
								["action"] = "chi_burst",
							}, -- [11]
						},
						["cooldowns_improved_niuzao_woo"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "pb_in_window",
								["value"] = "floor ( cooldown.purifying_brew.charges_fractional + ( 20 + 4 * 0.05 ) / cooldown.purifying_brew.duration / 0.65 )",
								["description"] = "Name: Improved Niuzao + Weapons of Order",
								["criteria"] = "prev.invoke_niuzao_the_black_ox",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "floor ( cooldown.purifying_brew.charges_fractional + ( 20 + 4 * 0.05 ) / cooldown.purifying_brew.duration / 0.65 )",
								["var_name"] = "pb_in_window",
								["criteria"] = "prev.invoke_niuzao_the_black_ox",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & ( time - action.purifying_brew.last_used >= 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used / variable.pb_in_window & time - action.invoke_niuzao_the_black_ox.last_used <= 20 + 4 * 0.05 )",
								["action"] = "purifying_brew",
							}, -- [3]
							{
								["enabled"] = true,
								["use_off_gcd"] = 1,
								["action"] = "purifying_brew",
								["criteria"] = "talent.purifying_brew.enabled & ( variable.pb_in_window = 0 & 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used < 1 & 20 + 4 * 0.05 - time + action.invoke_niuzao_the_black_ox.last_used > 0 )",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.weapons_of_order.enabled",
								["action"] = "weapons_of_order",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.invoke_niuzao_the_black_ox.remains <= 3.5 & time - action.purifying_brew.last_used >= 3.5 + cooldown.invoke_niuzao_the_black_ox.remains",
								["action"] = "purifying_brew",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.invoke_niuzao_the_black_ox.enabled & time - action.purifying_brew.last_used <= 5",
								["action"] = "invoke_niuzao_the_black_ox",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.purifying_brew.enabled & cooldown.purifying_brew.full_recharge_time * 2 <= cooldown.invoke_niuzao_the_black_ox.remains - 3.5",
								["action"] = "purifying_brew",
							}, -- [8]
						},
						["rotation_chp_dfb"] = {
							{
								["enabled"] = true,
								["description"] = "Name: Salsalabim's Strength Charred Passions / Dragonfire Brew",
								["criteria"] = "talent.charred_passions.enabled & buff.charred_passions.remains < 1.5 || talent.dragonfire_brew.enabled",
								["action"] = "breath_of_fire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.rushing_jade_wind.down & talent.rushing_jade_wind.enabled",
								["action"] = "rushing_jade_wind",
							}, -- [2]
							{
								["action"] = "blackout_kick",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "keg_smash",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.exploding_keg.enabled",
								["action"] = "exploding_keg",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( variable.time_to_scheduled_ks + execute_time ) >= 65 & talent.black_ox_brew.enabled",
								["action"] = "black_ox_brew",
							}, -- [6]
							{
								["action"] = "rising_sun_kick",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.remains + execute_time ) >= 65 & active_enemies > 1",
								["action"] = "spinning_crane_kick",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.remains + execute_time ) >= 65 & active_enemies = 1",
								["action"] = "tiger_palm",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_wave.enabled",
								["action"] = "chi_wave",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.chi_burst.enabled",
								["action"] = "chi_burst",
							}, -- [11]
						},
					},
					["version"] = 20221218,
					["warnings"] = "The import for 'cooldowns_improved_niuzao_cta' required some automated changes.\nLine 1: Converted operations in 'floor(cooldown.purifying_brew.charges_fractional+(10+2*0.05)%cooldown.purifying_brew.duration%0.65)' to 'floor(cooldown.purifying_brew.charges_fractional+(10+2*0.05)/cooldown.purifying_brew.duration/0.65)'.\nLine 2: Converted operations in 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65)' to 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)/cooldown.purifying_brew.duration/0.65)'.\nLine 4: Converted operations in 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=10+2*0.05-time+action.weapons_of_order.last_used%variable.pb_in_window&time-action.weapons_of_order.last_used<=10+2*0.05)' to 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=10+2*0.05-time+action.weapons_of_order.last_used/variable.pb_in_window&time-action.weapons_of_order.last_used<=10+2*0.05)'.\nLine 5: Converted operations in 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)' to 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used/variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)'.\n\nThe import for 'rotation_fom_boc' required some automated changes.\nLine 1: Converted operations in 'cooldown.blackout_kick.duration_expected*(1-(boc_count)%%3)+cooldown.blackout_kick.remains+1' to 'cooldown.blackout_kick.duration_expected*(1-(boc_count)%3)+cooldown.blackout_kick.remains+1'.\nLine 3: Converted operations in 'boc_count%%3=1&talent.rising_sun_kick.enabled' to 'boc_count%3=1&talent.rising_sun_kick.enabled'.\nLine 4: Converted operations in 'buff.blackout_combo.up&boc_count%%3=1' to 'buff.blackout_combo.up&boc_count%3=1'.\nLine 5: Converted operations in 'buff.blackout_combo.up&boc_count%%3=2' to 'buff.blackout_combo.up&boc_count%3=2'.\nLine 6: Converted operations in 'buff.blackout_combo.up&boc_count%%3=0&cooldown.keg_smash.charges_fractional>1&cooldown.keg_smash.full_recharge_time<=variable.time_to_scheduled_ks&energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=80' to 'buff.blackout_combo.up&boc_count%3=0&cooldown.keg_smash.charges_fractional>1&cooldown.keg_smash.full_recharge_time<=variable.time_to_scheduled_ks&energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=80'.\nLine 7: Converted operations in 'boc_count%%3=0' to 'boc_count%3=0'.\n\nThe import for 'default' required some automated changes.\nLine 35: Converted operations in 'variable.rotation_selection=1&(((1%spell_haste-1)*100>=1%3&talent.fluidity_of_motion.enabled)||!talent.fluidity_of_motion.enabled)' to 'variable.rotation_selection=1&(((1/spell_haste-1)*100>=1/3&talent.fluidity_of_motion.enabled)||!talent.fluidity_of_motion.enabled)'.\nLine 36: Converted operations in 'variable.rotation_selection=1&((1%spell_haste-1)*100<1%3&talent.fluidity_of_motion.enabled)' to 'variable.rotation_selection=1&((1/spell_haste-1)*100<1/3&talent.fluidity_of_motion.enabled)'.\n\nThe import for 'cooldowns_improved_niuzao_woo' required some automated changes.\nLine 1: Converted operations in 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65)' to 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)/cooldown.purifying_brew.duration/0.65)'.\nLine 2: Converted operations in 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65)' to 'floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)/cooldown.purifying_brew.duration/0.65)'.\nLine 3: Converted operations in 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)' to 'talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used/variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)'.\n\nImported 9 action lists.\n",
					["spec"] = 268,
					["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst,if=talent.chi_burst.enabled\nactions.precombat+=/chi_wave,if=talent.chi_wave.enabled\n## Blackout Combo\n## actions.precombat+=/variable,name=boc_count,op=set,value=0\n\nactions+=/spear_hand_strike\nactions+=/diffuse_magic\nactions+=/purifying_brew,if=settings.purify_for_celestial&(time_to_max_charges<gcd.max||buff.purified_chi.up&buff.purified_chi.remains<1.5*gcd.max)||cooldown.celestial_brew.remains<2*gcd.max&charges_fractional>1.5\nactions+=/celestial_brew,if=buff.purified_chi.up&buff.blackout_combo.down\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=settings.purify_stagger_currhp>0&group&stagger.pct>=settings.purify_stagger_currhp\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=settings.purify_stagger_currhp>0&solo&stagger.pct>=settings.purify_stagger_currhp*0.5\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=settings.purify_stagger_maxhp>0&group&stagger.pct>=settings.purify_stagger_maxhp\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=settings.purify_stagger_maxhp>0&solo&stagger.pct>=settings.purify_stagger_maxhp*0.5\n# Cast PB during the Niuzao window, but only if recently hit.\nactions+=/purifying_brew,if=stagger.amounttototalpct>=0.7&(cooldown.invoke_niuzao_the_black_ox.remains<5||buff.invoke_niuzao_the_black_ox.up)\n# Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&group&stagger.pct>20\n# Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&solo&stagger.pct>10\n# Avoid capping charges, but pool charges shortly before Niuzao comes up and allow dumping to avoid capping during Niuzao.\nactions+=/dampen_harm,if=health.pct<75&incoming_damage_3s>health.max*(0.2+(0.2*group))&buff.fortifying_brew.down\nactions+=/fortifying_brew,if=health.pct<50&incoming_damage_3s>health.max*(0.2+(0.2*group))&(buff.dampen_harm.down)\n# Base DPS Cooldowns\nactions+=/summon_white_tiger_statue,if=talent.summon_white_tiger_statue.enabled\nactions+=/touch_of_death\nactions+=/bonedust_brew,if=!debuff.bonedust_brew_debuff.up&talent.bonedust_brew.enabled\nactions+=/use_item,name=jotungeirr_destinys_call\nactions+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up&time>1\nactions+=/use_item,name=cache_of_acquired_treasures,if=buff.acquired_axe.up||boss&fight_remains<25\nactions+=/use_items\nactions+=/potion\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\n# Cooldown Action Lists\nactions+=/call_action_list,name=cooldowns_improved_niuzao_woo,strict=1,if=(talent.invoke_niuzao_the_black_ox.enabled+talent.improved_invoke_niuzao_the_black_ox.enabled)=2&(talent.weapons_of_order.enabled+talent.call_to_arms.enabled)<=1\nactions+=/call_action_list,name=cooldowns_improved_niuzao_cta,strict=1,if=(talent.invoke_niuzao_the_black_ox.enabled+talent.improved_invoke_niuzao_the_black_ox.enabled)=2&(talent.weapons_of_order.enabled+talent.call_to_arms.enabled)=2\nactions+=/call_action_list,name=cooldowns_niuzao_woo,strict=1,if=(talent.invoke_niuzao_the_black_ox.enabled+talent.improved_invoke_niuzao_the_black_ox.enabled)<=1\n# Rotation Selection\nactions+=/variable,op=set,name=rotation_selection,value=0\nactions+=/variable,op=set,name=rotation_selection,value=1,if=(talent.charred_passions.enabled||talent.dragonfire_brew.enabled)&talent.salsalabims_strength.enabled\nactions+=/variable,op=set,name=rotation_selection,value=2,if=(talent.charred_passions.enabled||talent.dragonfire_brew.enabled)&talent.salsalabims_strength.enabled&talent.blackout_combo.enabled\nactions+=/variable,op=set,name=rotation_selection,value=3-variable.rotation_selection\n# Rotation Action Lists\nactions+=/call_action_list,name=rotation_boc,strict=1,if=variable.rotation_selection=1&(((1%spell_haste-1)*100>=1%3&talent.fluidity_of_motion.enabled)||!talent.fluidity_of_motion.enabled)\nactions+=/call_action_list,name=rotation_fom_boc,strict=1,if=variable.rotation_selection=1&((1%spell_haste-1)*100<1%3&talent.fluidity_of_motion.enabled)\nactions+=/call_action_list,name=rotation_chp_dfb,strict=1,if=variable.rotation_selection=2\n# Fallback Rotation\nactions+=/call_action_list,name=rotation_fallback,strict=1,if=variable.rotation_selection=3\n\n# Name: Niuzao + Weapons of Order / Niuzao + Call to Arms\nactions.cooldowns_niuzao_woo+=/weapons_of_order,if=talent.weapons_of_order.enabled\nactions.cooldowns_niuzao_woo+=/invoke_niuzao_the_black_ox,if=talent.invoke_niuzao_the_black_ox.enabled&buff.weapons_of_order.remains<=16&talent.weapons_of_order.enabled\nactions.cooldowns_niuzao_woo+=/invoke_niuzao_the_black_ox,if=talent.invoke_niuzao_the_black_ox.enabled&!talent.weapons_of_order.enabled\nactions.cooldowns_niuzao_woo+=/purifying_brew,if=talent.purifying_brew.enabled&stagger.amounttototalpct>=0.7&!buff.blackout_combo.up\nactions.cooldowns_niuzao_woo+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.purifying_brew.remains_expected<5&!buff.blackout_combo.up\n\n# Name: Improved Niuzao + Weapons of Order\nactions.cooldowns_improved_niuzao_woo+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.invoke_niuzao_the_black_ox\nactions.cooldowns_improved_niuzao_woo+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.invoke_niuzao_the_black_ox\nactions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\nactions.cooldowns_improved_niuzao_woo+=/purifying_brew,use_off_gcd=1,if=talent.purifying_brew.enabled&(variable.pb_in_window=0&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used<1&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used>0)\nactions.cooldowns_improved_niuzao_woo+=/weapons_of_order,if=talent.weapons_of_order.enabled\nactions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.invoke_niuzao_the_black_ox.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.invoke_niuzao_the_black_ox.remains\nactions.cooldowns_improved_niuzao_woo+=/invoke_niuzao_the_black_ox,if=talent.invoke_niuzao_the_black_ox.enabled&time-action.purifying_brew.last_used<=5\nactions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.purifying_brew.full_recharge_time*2<=cooldown.invoke_niuzao_the_black_ox.remains-3.5\n\n# Name: Improved Niuzao + Call to Arms\nactions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(10+2*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.weapons_of_order\nactions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.invoke_niuzao_the_black_ox\nactions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=sub,value=1,if=prev.purifying_brew&(time-action.weapons_of_order.last_used<=10+2*0.05||time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=10+2*0.05-time+action.weapons_of_order.last_used%variable.pb_in_window&time-action.weapons_of_order.last_used<=10+2*0.05)\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=talent.purifying_brew.enabled&(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,use_off_gcd=1,if=talent.purifying_brew.enabled&(variable.pb_in_window=0&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used<1&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used>0)\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.weapons_of_order.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.weapons_of_order.remains\nactions.cooldowns_improved_niuzao_cta+=/weapons_of_order,if=talent.weapons_of_order.enabled&time-action.purifying_brew.last_used<=5\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.invoke_niuzao_the_black_ox.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.invoke_niuzao_the_black_ox.remains&buff.weapons_of_order.remains<=30-17\nactions.cooldowns_improved_niuzao_cta+=/invoke_niuzao_the_black_ox,if=talent.invoke_niuzao_the_black_ox.enabled&buff.weapons_of_order.remains<=30-17&action.purifying_brew.last_used>action.weapons_of_order.last_used+10+2*0.05\nactions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=talent.purifying_brew.enabled&cooldown.purifying_brew.full_recharge_time*2<=cooldown.weapons_of_order.remains-3.5&cooldown.purifying_brew.full_recharge_time*2<=cooldown.invoke_niuzao_the_black_ox.remains-3.5\n\n# Name: Blackout Combo Salsalabim's Strength Charred Passions [Shadowboxing Treads or high haste Fluidity of Motion]\nactions.rotation_boc+=/blackout_kick\nactions.rotation_boc+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_boc+=/breath_of_fire,if=buff.blackout_combo.up\nactions.rotation_boc+=/keg_smash,if=buff.blackout_combo.up\nactions.rotation_boc+=/exploding_keg,if=talent.exploding_keg.enabled\nactions.rotation_boc+=/rushing_jade_wind,if=buff.rushing_jade_wind.down&talent.rushing_jade_wind.enabled\nactions.rotation_boc+=/black_ox_brew,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&talent.black_ox_brew.enabled\nactions.rotation_boc+=/keg_smash,if=cooldown.keg_smash.charges_fractional>1.5\nactions.rotation_boc+=/spinning_crane_kick,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&active_enemies>1\nactions.rotation_boc+=/tiger_palm,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&active_enemies=1&!buff.blackout_combo.up\nactions.rotation_boc+=/celestial_brew,if=talent.celestial_brew.enabled&!buff.blackout_combo.up\nactions.rotation_boc+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_boc+=/chi_burst,if=talent.chi_burst.enabled\n\n# Name: Blackout Combo Salsalabim's Strength Chared Passions Fluidity of Motion Not High Haste\n## actions.rotation_fom_boc+=/variable,name=boc_count,op=add,value=1,if=prev.blackout_kick\nactions.rotation_fom_boc+=/variable,name=time_to_scheduled_ks,op=set,value=cooldown.blackout_kick.duration_expected*(1-(boc_count)%%3)+cooldown.blackout_kick.remains+1\nactions.rotation_fom_boc+=/blackout_kick,if=buff.blackout_combo.down\nactions.rotation_fom_boc+=/rising_sun_kick,if=boc_count%%3=1&talent.rising_sun_kick.enabled\nactions.rotation_fom_boc+=/breath_of_fire,if=buff.blackout_combo.up&boc_count%%3=1\nactions.rotation_fom_boc+=/keg_smash,if=buff.blackout_combo.up&boc_count%%3=2\nactions.rotation_fom_boc+=/keg_smash,if=buff.blackout_combo.up&boc_count%%3=0&cooldown.keg_smash.charges_fractional>1&cooldown.keg_smash.full_recharge_time<=variable.time_to_scheduled_ks&energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=80\nactions.rotation_fom_boc+=/cancel_buff,name=blackout_combo,if=boc_count%%3=0\nactions.rotation_fom_boc+=/exploding_keg,if=talent.exploding_keg.enabled\nactions.rotation_fom_boc+=/rushing_jade_wind,if=buff.rushing_jade_wind.down&talent.rushing_jade_wind.enabled\nactions.rotation_fom_boc+=/black_ox_brew,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&talent.black_ox_brew.enabled\nactions.rotation_fom_boc+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_fom_boc+=/spinning_crane_kick,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&buff.charred_passions.up&active_enemies>1\nactions.rotation_fom_boc+=/tiger_palm,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&active_enemies=1&!buff.blackout_combo.up\n## Disabled to avoid wasteful use of Celestial Brew; use mitigation logic instead.\n## actions.rotation_fom_boc+=/celestial_brew,if=!buff.blackout_combo.up\nactions.rotation_fom_boc+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_fom_boc+=/chi_burst,if=talent.chi_burst.enabled\n\n# Name: Salsalabim's Strength Charred Passions / Dragonfire Brew\nactions.rotation_chp_dfb+=/breath_of_fire,if=talent.charred_passions.enabled&buff.charred_passions.remains<1.5||talent.dragonfire_brew.enabled\nactions.rotation_chp_dfb+=/rushing_jade_wind,if=buff.rushing_jade_wind.down&talent.rushing_jade_wind.enabled\nactions.rotation_chp_dfb+=/blackout_kick\nactions.rotation_chp_dfb+=/keg_smash\nactions.rotation_chp_dfb+=/exploding_keg,if=talent.exploding_keg.enabled\nactions.rotation_chp_dfb+=/black_ox_brew,if=energy+energy.regen*(variable.time_to_scheduled_ks+execute_time)>=65&talent.black_ox_brew.enabled\nactions.rotation_chp_dfb+=/rising_sun_kick\nactions.rotation_chp_dfb+=/spinning_crane_kick,if=energy+energy.regen*(cooldown.keg_smash.remains+execute_time)>=65&active_enemies>1\nactions.rotation_chp_dfb+=/tiger_palm,if=energy+energy.regen*(cooldown.keg_smash.remains+execute_time)>=65&active_enemies=1\nactions.rotation_chp_dfb+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_chp_dfb+=/chi_burst,if=talent.chi_burst.enabled\n## Disabled to avoid wasteful use of Celestial Brew; use mitigation logic instead.\n## actions.rotation_chp_dfb+=/celestial_brew\n\n# Name: Fallback\nactions.rotation_fallback+=/purifying_brew,if=cooldown.purifying_brew.charges_fractional>=1.8&(cooldown.invoke_niuzao_the_black_ox.remains>10||buff.invoke_niuzao_the_black_ox.up)\nactions.rotation_fallback+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_fallback+=/keg_smash\nactions.rotation_fallback+=/breath_of_fire,if=talent.breath_of_fire.enabled\nactions.rotation_fallback+=/blackout_kick,if=buff.blackout_combo.down\nactions.rotation_fallback+=/exploding_keg,if=talent.exploding_keg.enabled\nactions.rotation_fallback+=/black_ox_brew,if=energy+energy.regen*(cooldown.keg_smash.remains+execute_time)>=65\nactions.rotation_fallback+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_fallback+=/spinning_crane_kick,if=energy+energy.regen*(cooldown.keg_smash.remains+execute_time)>=65\n## Disabled to avoid wasteful use of Celestial Brew; use mitigation logic instead.\n## actions.rotation_fallback+=/celestial_brew,if=!buff.blackout_combo.up&talent.celestial_brew.enabled&buff.purified_chi.up\nactions.rotation_fallback+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_fallback+=/chi_burst,if=talent.chi_burst.enabled",
				},
				["Destruction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221120,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["items"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || ! talent.summon_infernal.enabled || time_to_die < 21",
								["action"] = "use_items",
							}, -- [1]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 1 & active_enemies <= 2 + ( ! talent.inferno.enabled & talent.madness_of_the_azjaqir.enabled & talent.ashen_remains.enabled )",
								["list_name"] = "cleave",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= 3",
								["list_name"] = "aoe",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( talent.roaring_blaze.enabled & debuff.conflagrate.remains < 1.5 ) || charges = max_charges",
								["action"] = "conflagrate",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 4.7 & ( charges > 2 || time_to_die < cooldown.dimensional_rift.duration )",
								["action"] = "dimensional_rift",
							}, -- [6]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.raging_demonfire.enabled",
								["action"] = "channel_demonfire",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard <= 4",
								["action"] = "soul_fire",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( ( dot.immolate.refreshable & talent.internal_combustion.enabled ) || dot.immolate.remains < 3 ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains > dot.immolate.remains )",
								["action"] = "immolate",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || pet.blasphemy.active || soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "items",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "ogcd",
							}, -- [13]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.ruin.rank > 1 & ! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
								["action"] = "channel_demonfire",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5",
								["action"] = "conflagrate",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up",
								["action"] = "chaos_bolt",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & debuff.eradication.remains < cast_time & ! action.chaos_bolt.in_flight",
								["action"] = "chaos_bolt",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.madness_cb.up",
								["action"] = "chaos_bolt",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
								["action"] = "channel_demonfire",
							}, -- [21]
							{
								["action"] = "dimensional_rift",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "talent.soul_conduit.enabled & ! talent.madness_of_the_azjaqir.enabled || ! talent.backdraft.enabled",
								["action"] = "chaos_bolt",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 5 & time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "charges > ( max_charges - 1 ) || time_to_die < gcd.max * charges",
								["action"] = "conflagrate",
							}, -- [26]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [27]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [28]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [29]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [30]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [31]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "inquisitors_gaze",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [8]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [11]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "havoc_active & havoc_remains > gcd.max & active_enemies < 5",
								["list_name"] = "havoc",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "rain_of_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.avatar_of_destruction.enabled",
								["action"] = "rain_of_fire",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "rain_of_fire",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5 - ( 0.1 * active_enemies ) & ! talent.rain_of_fire.enabled",
								["action"] = "chaos_bolt",
							}, -- [5]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > cast_time & ( talent.raging_demonfire.rank + talent.roaring_blaze.rank ) > 1",
								["action"] = "channel_demonfire",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "dot.immolate.remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & active_dot.immolate <= 6",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "! talent.rain_of_fire.enabled",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "items",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.tormented_soul.stack = 10",
								["action"] = "summon_soulkeeper",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "ogcd",
							}, -- [12]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "rain_of_fire",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "cycle_enemies > 1",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "dot.immolate.remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains )",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up",
								["action"] = "soul_fire",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up",
								["action"] = "incinerate",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down || ! talent.backdraft.enabled",
								["action"] = "conflagrate",
							}, -- [19]
							{
								["action"] = "dimensional_rift",
								["enabled"] = true,
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.refreshable",
								["action"] = "immolate",
							}, -- [21]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [22]
						},
						["havoc"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.backdraft.enabled & buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
								["action"] = "conflagrate",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & soul_shard < 3",
								["action"] = "soul_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 4.5 & talent.raging_demonfire.rank = 2 & active_enemies > 2",
								["action"] = "channel_demonfire",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "dot.immolate.refreshable & dot.immolate.remains < havoc_remains & soul_shard < 4.5 & ( debuff.havoc.down || ! dot.immolate.ticking )",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & ( active_enemies < 4 - talent.inferno.enabled + talent.madness_of_the_azjaqir.enabled + ( ! talent.inferno.enabled & talent.ashen_remains.enabled ) )",
								["action"] = "chaos_bolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( active_enemies >= 4 - talent.inferno.enabled + talent.madness_of_the_azjaqir.enabled + ( ! talent.inferno.enabled & talent.ashen_remains.enabled ) )",
								["action"] = "rain_of_fire",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.backdraft.enabled",
								["action"] = "conflagrate",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "incinerate",
							}, -- [8]
						},
						["cleave"] = {
							{
								["enabled"] = true,
								["criteria"] = "havoc_active & havoc_remains > gcd.max",
								["action"] = "call_action_list",
								["list_name"] = "havoc",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.havoc.remains <= 10 || talent.mayhem.enabled",
								["var_name"] = "pool_soul_shards",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( talent.roaring_blaze.enabled & debuff.conflagrate.remains < 1.5 ) || charges = max_charges",
								["action"] = "conflagrate",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 4.7 & ( charges > 2 || time_to_die < cooldown.dimensional_rift.duration )",
								["action"] = "dimensional_rift",
							}, -- [4]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.raging_demonfire.enabled",
								["action"] = "channel_demonfire",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard <= 4 & ! variable.pool_soul_shards",
								["action"] = "soul_fire",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "( ( talent.internal_combustion.enabled & dot.immolate.refreshable ) || dot.immolate.remains < 3 ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || pet.blasphemy.active || soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "items",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "ogcd",
							}, -- [12]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "talent.ruin.rank > 1 & ! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
								["action"] = "channel_demonfire",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5 & ! variable.pool_soul_shards",
								["action"] = "conflagrate",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up & ! variable.pool_soul_shards",
								["action"] = "chaos_bolt",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & ! variable.pool_soul_shards & debuff.eradication.remains < cast_time & ! action.chaos_bolt.in_flight",
								["action"] = "chaos_bolt",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.madness_cb.up",
								["action"] = "chaos_bolt",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard <= 4 & talent.mayhem.enabled",
								["action"] = "soul_fire",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
								["action"] = "channel_demonfire",
							}, -- [21]
							{
								["action"] = "dimensional_rift",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pool_soul_shards & ( talent.soul_conduit.enabled & ! talent.madness_of_the_azjaqir.enabled || ! talent.backdraft.enabled )",
								["action"] = "chaos_bolt",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 5 & time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "charges > ( max_charges - 1 ) || time_to_die < gcd.max * charges",
								["action"] = "conflagrate",
							}, -- [26]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [27]
						},
						["ogcd"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || ! talent.summon_infernal.enabled",
								["action"] = "potion",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || ! talent.summon_infernal.enabled",
								["action"] = "berserking",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || ! talent.summon_infernal.enabled",
								["action"] = "blood_fury",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || ! talent.summon_infernal.enabled",
								["action"] = "fireblood",
							}, -- [4]
						},
					},
					["version"] = 20221120,
					["warnings"] = "The import for 'items' required some automated changes.\nLine 1: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\nLine 3: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 3: Converted 'talent.madness_of_the_azjaqir' to 'talent.madness_of_the_azjaqir.enabled' (1x).\nLine 3: Converted 'talent.ashen_remains' to 'talent.ashen_remains.enabled' (1x).\nLine 5: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 8: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 10: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 10: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 10: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 15: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 15: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 15: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 15: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 19: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 21: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 21: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 21: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 21: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 24: Converted 'talent.soul_conduit' to 'talent.soul_conduit.enabled' (1x).\nLine 24: Converted 'talent.madness_of_the_azjaqir' to 'talent.madness_of_the_azjaqir.enabled' (1x).\nLine 24: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 5: Converted 'talent.rain_of_fire' to 'talent.rain_of_fire.enabled' (1x).\nLine 9: Converted 'talent.rain_of_fire' to 'talent.rain_of_fire.enabled' (1x).\nLine 19: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - tormented_soul\n\nThe import for 'cleave' required some automated changes.\nLine 2: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 6: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 8: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 8: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 8: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 9: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 14: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 14: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 14: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 14: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 18: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 20: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 21: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 21: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 21: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 21: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 24: Converted 'talent.soul_conduit' to 'talent.soul_conduit.enabled' (1x).\nLine 24: Converted 'talent.madness_of_the_azjaqir' to 'talent.madness_of_the_azjaqir.enabled' (1x).\nLine 24: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'havoc' required some automated changes.\nLine 1: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\nLine 5: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 5: Converted 'talent.madness_of_the_azjaqir' to 'talent.madness_of_the_azjaqir.enabled' (1x).\nLine 5: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 5: Converted 'talent.ashen_remains' to 'talent.ashen_remains.enabled' (1x).\nLine 6: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 6: Converted 'talent.madness_of_the_azjaqir' to 'talent.madness_of_the_azjaqir.enabled' (1x).\nLine 6: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 6: Converted 'talent.ashen_remains' to 'talent.ashen_remains.enabled' (1x).\nLine 7: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'ogcd' required some automated changes.\nLine 1: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 2: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nImported 7 action lists.\n",
					["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/inquisitors_gaze\nactions.precombat+=/fleshcraft\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/soul_fire\nactions.precombat+=/cataclysm\nactions.precombat+=/incinerate\n\nactions=spell_lock\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions=call_action_list,name=cleave,strict=1,if=active_enemies>1&active_enemies<=2+(!talent.inferno&talent.madness_of_the_azjaqir&talent.ashen_remains)\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/conflagrate,if=(talent.roaring_blaze&debuff.conflagrate.remains<1.5)||charges=max_charges\nactions+=/dimensional_rift,if=soul_shard<4.7&(charges>2||time_to_die<cooldown.dimensional_rift.duration)\nactions+=/cataclysm\nactions+=/channel_demonfire,if=talent.raging_demonfire\nactions+=/soul_fire,if=soul_shard<=4\nactions+=/immolate,if=((dot.immolate.refreshable&talent.internal_combustion)||dot.immolate.remains<3)&(!talent.cataclysm||cooldown.cataclysm.remains>dot.immolate.remains)&(!talent.soul_fire||cooldown.soul_fire.remains>dot.immolate.remains)\nactions+=/chaos_bolt,if=pet.infernal.active||pet.blasphemy.active||soul_shard>=4\nactions+=/call_action_list,name=items\nactions+=/call_action_list,name=ogcd\nactions+=/summon_infernal\nactions+=/channel_demonfire,if=talent.ruin.rank>1&!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5\nactions+=/chaos_bolt,if=buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up\nactions+=/chaos_bolt,if=talent.eradication&debuff.eradication.remains<cast_time&!action.chaos_bolt.in_flight\nactions+=/chaos_bolt,if=buff.madness_cb.up\nactions+=/channel_demonfire,if=!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions+=/dimensional_rift\nactions+=/chaos_bolt,if=soul_shard>3.5\nactions+=/chaos_bolt,if=talent.soul_conduit&!talent.madness_of_the_azjaqir||!talent.backdraft\nactions+=/chaos_bolt,if=time_to_die<5&time_to_die>cast_time+travel_time\nactions+=/conflagrate,if=charges>(max_charges-1)||time_to_die<gcd*charges\nactions+=/scouring_tithe\nactions+=/decimating_bolt\nactions+=/impending_catastrophe\nactions+=/soul_rot\nactions+=/incinerate\n\nactions.aoe=call_action_list,name=havoc,strict=1,if=havoc_active&havoc_remains>gcd&active_enemies<5\nactions.aoe+=/rain_of_fire,if=pet.infernal.active\nactions.aoe+=/rain_of_fire,if=talent.avatar_of_destruction\nactions.aoe+=/rain_of_fire,if=soul_shard=5\nactions.aoe+=/chaos_bolt,if=soul_shard>3.5-(0.1*active_enemies)&!talent.rain_of_fire\nactions.aoe+=/cataclysm\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time&(talent.raging_demonfire.rank+talent.roaring_blaze.rank)>1\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)&active_dot.immolate<=6\nactions.aoe+=/havoc,cycle_targets=1,if=!talent.rain_of_fire\nactions.aoe+=/call_action_list,name=items\nactions.aoe+=/summon_soulkeeper,if=buff.tormented_soul.stack=10\nactions.aoe+=/call_action_list,name=ogcd\nactions.aoe+=/summon_infernal\nactions.aoe+=/rain_of_fire\nactions.aoe+=/havoc,cycle_targets=1,if=cycle_enemies>1\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)\nactions.aoe+=/soul_fire,if=buff.backdraft.up\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up\nactions.aoe+=/conflagrate,if=buff.backdraft.down||!talent.backdraft\nactions.aoe+=/dimensional_rift\nactions.aoe+=/immolate,if=dot.immolate.refreshable\nactions.aoe+=/incinerate\n\nactions.cleave=call_action_list,name=havoc,if=havoc_active&havoc_remains>gcd\nactions.cleave+=/variable,name=pool_soul_shards,value=cooldown.havoc.remains<=10||talent.mayhem\nactions.cleave+=/conflagrate,if=(talent.roaring_blaze.enabled&debuff.conflagrate.remains<1.5)||charges=max_charges\nactions.cleave+=/dimensional_rift,if=soul_shard<4.7&(charges>2||time_to_die<cooldown.dimensional_rift.duration)\nactions.cleave+=/cataclysm\nactions.cleave+=/channel_demonfire,if=talent.raging_demonfire\nactions.cleave+=/soul_fire,if=soul_shard<=4&!variable.pool_soul_shards\nactions.cleave+=/immolate,cycle_targets=1,if=((talent.internal_combustion&dot.immolate.refreshable)||dot.immolate.remains<3)&(!talent.cataclysm||cooldown.cataclysm.remains>remains)&(!talent.soul_fire||cooldown.soul_fire.remains>remains)\nactions.cleave+=/havoc,cycle_targets=1,if=!cooldown.summon_infernal.up||!talent.summon_infernal\nactions.cleave+=/chaos_bolt,if=pet.infernal.active||pet.blasphemy.active||soul_shard>=4\nactions.cleave+=/call_action_list,name=items\nactions.cleave+=/call_action_list,name=ogcd\nactions.cleave+=/summon_infernal\nactions.cleave+=/channel_demonfire,if=talent.ruin.rank>1&!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions.cleave+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5&!variable.pool_soul_shards\nactions.cleave+=/chaos_bolt,if=buff.rain_of_chaos.remains>cast_time\nactions.cleave+=/chaos_bolt,if=buff.backdraft.up&!variable.pool_soul_shards\nactions.cleave+=/chaos_bolt,if=talent.eradication&!variable.pool_soul_shards&debuff.eradication.remains<cast_time&!action.chaos_bolt.in_flight\nactions.cleave+=/chaos_bolt,if=buff.madness_cb.up\nactions.cleave+=/soul_fire,if=soul_shard<=4&talent.mayhem\nactions.cleave+=/channel_demonfire,if=!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions.cleave+=/dimensional_rift\nactions.cleave+=/chaos_bolt,if=soul_shard>3.5\nactions.cleave+=/chaos_bolt,if=!variable.pool_soul_shards&(talent.soul_conduit&!talent.madness_of_the_azjaqir||!talent.backdraft)\nactions.cleave+=/chaos_bolt,if=time_to_die<5&time_to_die>cast_time+travel_time\nactions.cleave+=/conflagrate,if=charges>(max_charges-1)||time_to_die<gcd*charges\nactions.cleave+=/incinerate\n\nactions.havoc=conflagrate,if=talent.backdraft&buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains&soul_shard<3\nactions.havoc+=/channel_demonfire,if=soul_shard<4.5&talent.raging_demonfire.rank=2&active_enemies>2\nactions.havoc+=/immolate,cycle_targets=1,if=dot.immolate.refreshable&dot.immolate.remains<havoc_remains&soul_shard<4.5&(debuff.havoc.down||!dot.immolate.ticking)\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&(active_enemies<4-talent.inferno+talent.madness_of_the_azjaqir+(!talent.inferno&talent.ashen_remains))\nactions.havoc+=/rain_of_fire,if=(active_enemies>=4-talent.inferno+talent.madness_of_the_azjaqir+(!talent.inferno&talent.ashen_remains))\nactions.havoc+=/conflagrate,if=!talent.backdraft\nactions.havoc+=/incinerate,if=cast_time<havoc_remains\n\nactions.items=use_items,if=pet.infernal.active||!talent.summon_infernal||time_to_die<21\n\nactions.ogcd=potion,if=pet.infernal.active||!talent.summon_infernal\nactions.ogcd+=/berserking,if=pet.infernal.active||!talent.summon_infernal\nactions.ogcd+=/blood_fury,if=pet.infernal.active||!talent.summon_infernal\nactions.ogcd+=/fireblood,if=pet.infernal.active||!talent.summon_infernal",
					["spec"] = 267,
				},
				["Havoc"] = {
					["source"] = "SimulationCraft",
					["builtIn"] = true,
					["date"] = 20221029,
					["spec"] = 577,
					["desc"] = "",
					["profile"] = "actions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\nactions.precombat+=/variable,name=use_eye_beam_fury_condition,value=0\nactions.precombat+=/arcane_torrent\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\n\n# Executed every time the actor is available.\nactions=disrupt\nactions+=/consume_magic\n# Without Chaos Theory or Darkglare, Blade Dance with First Blood or at 3+ (2+ with Trail of Ruin) targets\nactions+=/variable,name=blade_dance,if=!runeforge.chaos_theory&!runeforge.darkglare_medallion,value=talent.first_blood.enabled||spell_targets.blade_dance1>=(3-talent.trail_of_ruin.enabled)\n# With Chaos Theory, Blade Dance when the buff is down, with First Blood at 2+ (1+ with Trail of Ruin) or with Essence Break at 4+ (3+ with Trail of Ruin) targets\nactions+=/variable,name=blade_dance,if=runeforge.chaos_theory||talent.chaos_theory,value=buff.chaos_theory.down||talent.first_blood.enabled||!talent.cycle_of_hatred.enabled&spell_targets.blade_dance1>=(4-talent.trail_of_ruin.enabled)\n# With Darkglare, Blade Dance at normal target count when buffed by a secondary effect, or always at 4T+ for non-Demonic\nactions+=/variable,name=blade_dance,if=runeforge.darkglare_medallion,value=talent.first_blood.enabled||(buff.metamorphosis.up||talent.trail_of_ruin.enabled||debuff.essence_break.up)&spell_targets.blade_dance1>=(3-talent.trail_of_ruin.enabled)||!talent.demonic.enabled&spell_targets.blade_dance1>=4\nactions+=/variable,name=pooling_for_meta,value=!talent.demonic.enabled&cooldown.metamorphosis.remains<6&fury.deficit>30\nactions+=/variable,name=pooling_for_blade_dance,value=variable.blade_dance&(fury<75-talent.first_blood.enabled*20)\nactions+=/variable,name=pooling_for_eye_beam,value=talent.demonic.enabled&!talent.blind_fury.enabled&cooldown.eye_beam.remains<(gcd.max*2)&fury.deficit>20\nactions+=/variable,name=waiting_for_momentum,value=talent.momentum.enabled&!buff.momentum.up\n# With Agony Gaze, attempt to sync Eye Beam and cooldown usage for maximum duration, unless at 3T+\nactions+=/variable,name=waiting_for_agony_gaze,if=runeforge.agony_gaze,value=!dot.sinful_brand.ticking&cooldown.sinful_brand.remains<gcd.max*4&(!cooldown.metamorphosis.up||active_enemies=1)&spell_targets.eye_beam<=3\nactions+=/disrupt\nactions+=/call_action_list,name=cooldown,if=gcd.remains=0\nactions+=/throw_glaive,if=buff.fel_bombardment.stack=5&(buff.immolation_aura.up||!buff.metamorphosis.up)\nactions+=/vengeful_retreat,if=time>1&(variable.waiting_for_momentum||!talent.momentum&talent.tactical_retreat)&buff.tactical_retreat.down\nactions+=/fel_rush,if=(buff.unbound_chaos.up||variable.waiting_for_momentum&(!talent.unbound_chaos.enabled||!cooldown.immolation_aura.ready))&(charges=2||(raid_event.movement.in>10&raid_event.adds.in>10))\nactions+=/run_action_list,name=demonic,if=talent.demonic.enabled\nactions+=/run_action_list,name=normal\n\n# Cast Metamorphosis if we will get a full Eye Beam refresh or if the encounter is almost over\nactions.cooldown=metamorphosis,if=!talent.demonic.enabled&(cooldown.eye_beam.remains>20||fight_remains<25)\nactions.cooldown+=/metamorphosis,if=talent.demonic.enabled&(cooldown.eye_beam.remains>20&(!variable.blade_dance||cooldown.blade_dance.remains>gcd.max)||fight_remains<25)\nactions.cooldown+=/potion,if=buff.metamorphosis.remains>25||fight_remains<60\nactions.cooldown+=/use_item,name=wraps_of_electrostatic_potential\nactions.cooldown+=/use_item,name=ring_of_collapsing_futures,if=buff.temptation.down||fight_remains<30\nactions.cooldown+=/use_item,name=cache_of_acquired_treasures,if=buff.acquired_axe.up&((active_enemies=desired_targets&raid_event.adds.in>60||active_enemies>desired_targets)&(active_enemies<3||cooldown.eye_beam.remains<20)||fight_remains<25)\n# Default use item logic\nactions.cooldown+=/use_items,slots=trinket1,if=variable.trinket_sync_slot=1&(buff.metamorphosis.up||(!talent.demonic.enabled&cooldown.metamorphosis.remains>(fight_remains>?trinket.1.cooldown.duration%2))||fight_remains<=20)||(variable.trinket_sync_slot=2&!trinket.2.cooldown.ready)||!variable.trinket_sync_slot\nactions.cooldown+=/use_items,slots=trinket2,if=variable.trinket_sync_slot=2&(buff.metamorphosis.up||(!talent.demonic.enabled&cooldown.metamorphosis.remains>(fight_remains>?trinket.2.cooldown.duration%2))||fight_remains<=20)||(variable.trinket_sync_slot=1&!trinket.1.cooldown.ready)||!variable.trinket_sync_slot\nactions.cooldown+=/sinful_brand,if=!dot.sinful_brand.ticking&(!runeforge.agony_gaze||(cooldown.eye_beam.remains<=gcd&fury>=30))&(!cooldown.metamorphosis.up||active_enemies=1)\nactions.cooldown+=/the_hunt,if=!talent.demonic.enabled&!variable.waiting_for_momentum&!variable.pooling_for_meta||(buff.furious_gaze.up||!talent.furious_gaze)\nactions.cooldown+=/elysian_decree,if=(active_enemies>desired_targets||raid_event.adds.in>30)\nactions.cooldown+=/fleshcraft,if=soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n\nactions.demonic=eye_beam,if=runeforge.agony_gaze&(active_enemies>desired_targets||raid_event.adds.in>25-talent.cycle_of_hatred*10)&dot.sinful_brand.ticking&dot.sinful_brand.remains<=gcd\nactions.demonic+=/essence_break,if=!variable.waiting_for_momentum&(!cooldown.eye_beam.ready||buff.metamorphosis.up)\nactions.demonic+=/death_sweep,if=variable.blade_dance\nactions.demonic+=/fel_barrage,if=active_enemies>desired_targets||raid_event.adds.in>30\nactions.demonic+=/glaive_tempest,if=active_enemies>desired_targets||raid_event.adds.in>10\nactions.demonic+=/throw_glaive,if=(conduit.serrated_glaive||talent.serrated_glaive)&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up\nactions.demonic+=/eye_beam,if=active_enemies>desired_targets||raid_event.adds.in>25-talent.cycle_of_hatred*10&(!variable.use_eye_beam_fury_condition||spell_targets>1||fury<70)&!variable.waiting_for_agony_gaze\nactions.demonic+=/blade_dance,if=variable.blade_dance&!cooldown.metamorphosis.ready&(cooldown.eye_beam.remains>5||(raid_event.adds.in>cooldown&raid_event.adds.in<25))\nactions.demonic+=/throw_glaive,if=talent.soulrend&spell_targets>(2-talent.furious_throws)\nactions.demonic+=/annihilation,if=!variable.pooling_for_blade_dance\nactions.demonic+=/immolation_aura,if=!buff.immolation_aura.up&(!talent.ragefire||active_enemies>desired_targets||raid_event.adds.in>15)\nactions.demonic+=/felblade,if=fury.deficit>=40\nactions.demonic+=/sigil_of_flame,if=active_enemies>desired_targets\nactions.demonic+=/chaos_strike,if=!variable.pooling_for_blade_dance&!variable.pooling_for_eye_beam\nactions.demonic+=/fel_rush,if=!talent.momentum&talent.demon_blades&!cooldown.eye_beam.ready&(charges=2||(raid_event.movement.in>10&raid_event.adds.in>10))\nactions.demonic+=/demons_bite,cycle_targets=1,if=(runeforge.burning_wound||talent.burning_wound)&debuff.burning_wound.remains<4\nactions.demonic+=/fel_rush,if=!talent.momentum&!talent.demon_blades&spell_targets>1&(charges=2||(raid_event.movement.in>10&raid_event.adds.in>10))\nactions.demonic+=/sigil_of_flame,if=raid_event.adds.in>15&fury.deficit>=30\nactions.demonic+=/demons_bite\nactions.demonic+=/throw_glaive,if=buff.out_of_range.up\nactions.demonic+=/fel_rush,if=movement.distance>15||(buff.out_of_range.up&!talent.momentum)\nactions.demonic+=/vengeful_retreat,if=!talent.momentum&movement.distance>15\nactions.demonic+=/throw_glaive,if=talent.demon_blades\n\nactions.normal=eye_beam,if=runeforge.agony_gaze&(active_enemies>desired_targets||raid_event.adds.in>15)&dot.sinful_brand.ticking&dot.sinful_brand.remains<=gcd\nactions.normal+=/essence_break\nactions.normal+=/death_sweep,if=variable.blade_dance\nactions.normal+=/fel_barrage,if=active_enemies>desired_targets||raid_event.adds.in>30\nactions.normal+=/immolation_aura,if=!buff.immolation_aura.up&(!talent.ragefire||active_enemies>desired_targets||raid_event.adds.in>15)\nactions.normal+=/glaive_tempest,if=!variable.waiting_for_momentum&(active_enemies>desired_targets||raid_event.adds.in>10)\nactions.normal+=/throw_glaive,if=(conduit.serrated_glaive||talent.serrated_glaive)&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up\nactions.normal+=/eye_beam,if=!variable.waiting_for_momentum&(active_enemies>desired_targets||raid_event.adds.in>15&(!variable.use_eye_beam_fury_condition||spell_targets>1||fury<70)&!variable.waiting_for_agony_gaze)\nactions.normal+=/blade_dance,if=variable.blade_dance\nactions.normal+=/throw_glaive,if=talent.soulrend&spell_targets>(2-talent.furious_throws)\nactions.normal+=/felblade,if=fury.deficit>=40\nactions.normal+=/sigil_of_flame,if=active_enemies>desired_targets\nactions.normal+=/annihilation,if=(talent.demon_blades||!variable.waiting_for_momentum||fury.deficit<30||buff.metamorphosis.remains<5)&!variable.pooling_for_blade_dance\nactions.normal+=/chaos_strike,if=(talent.demon_blades||!variable.waiting_for_momentum||fury.deficit<30)&!variable.pooling_for_meta&!variable.pooling_for_blade_dance\nactions.normal+=/eye_beam,if=talent.blind_fury.enabled&raid_event.adds.in>cooldown&!variable.waiting_for_agony_gaze\nactions.normal+=/demons_bite,cycle_targets=1,if=(runeforge.burning_wound||talent.burning_wound)&debuff.burning_wound.remains<4\nactions.normal+=/sigil_of_flame,if=raid_event.adds.in>15&fury.deficit>=30\nactions.normal+=/demons_bite\nactions.normal+=/fel_rush,if=!talent.momentum.enabled&raid_event.movement.in>charges*10&talent.demon_blades\nactions.normal+=/felblade,if=movement.distance>15||buff.out_of_range.up\nactions.normal+=/fel_rush,if=movement.distance>15||(buff.out_of_range.up&!talent.momentum)\nactions.normal+=/vengeful_retreat,if=!talent.momentum&movement.distance>15\nactions.normal+=/throw_glaive,if=talent.demon_blades",
					["version"] = 20221029,
					["warnings"] = "WARNING:  The import for 'normal' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (2x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 1: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 2: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 2: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'cooldown' required some automated changes.\nLine 7: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 7: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 7: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 8: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 8: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 8: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nWARNING:  The import for 'demonic' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 9: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\n\nImported 5 action lists.\n",
					["lists"] = {
						["normal"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.agony_gaze.enabled & ( active_enemies > desired_targets || raid_event.adds.in > 15 ) & dot.sinful_brand.ticking & dot.sinful_brand.remains <= gcd",
								["action"] = "eye_beam",
							}, -- [1]
							{
								["action"] = "essence_break",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_dance",
								["action"] = "death_sweep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 30",
								["action"] = "fel_barrage",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! buff.immolation_aura.up & ( ! talent.ragefire.enabled || active_enemies > desired_targets || raid_event.adds.in > 15 )",
								["action"] = "immolation_aura",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.waiting_for_momentum & ( active_enemies > desired_targets || raid_event.adds.in > 10 )",
								["action"] = "glaive_tempest",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( conduit.serrated_glaive.enabled || talent.serrated_glaive.enabled ) & cooldown.eye_beam.remains < 6 & ! buff.metamorphosis.up & ! debuff.exposed_wound.up",
								["action"] = "throw_glaive",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.waiting_for_momentum & ( active_enemies > desired_targets || raid_event.adds.in > 15 & ( ! variable.use_eye_beam_fury_condition || spell_targets > 1 || fury < 70 ) & ! variable.waiting_for_agony_gaze )",
								["action"] = "eye_beam",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_dance",
								["action"] = "blade_dance",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.soulrend.enabled & spell_targets > ( 2 - talent.furious_throws.enabled )",
								["action"] = "throw_glaive",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "fury.deficit >= 40",
								["action"] = "felblade",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets",
								["action"] = "sigil_of_flame",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( talent.demon_blades.enabled || ! variable.waiting_for_momentum || fury.deficit < 30 || buff.metamorphosis.remains < 5 ) & ! variable.pooling_for_blade_dance",
								["action"] = "annihilation",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "( talent.demon_blades.enabled || ! variable.waiting_for_momentum || fury.deficit < 30 ) & ! variable.pooling_for_meta & ! variable.pooling_for_blade_dance",
								["action"] = "chaos_strike",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.blind_fury.enabled & raid_event.adds.in > action_cooldown & ! variable.waiting_for_agony_gaze",
								["action"] = "eye_beam",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "demons_bite",
								["criteria"] = "( runeforge.burning_wound.enabled || talent.burning_wound.enabled ) & debuff.burning_wound.remains < 4",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15 & fury.deficit >= 30",
								["action"] = "sigil_of_flame",
							}, -- [17]
							{
								["action"] = "demons_bite",
								["enabled"] = true,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "! talent.momentum.enabled & raid_event.movement.in > charges * 10 & talent.demon_blades.enabled",
								["action"] = "fel_rush",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "movement.distance > 15 || buff.out_of_range.up",
								["action"] = "felblade",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "movement.distance > 15 || ( buff.out_of_range.up & ! talent.momentum.enabled )",
								["action"] = "fel_rush",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "! talent.momentum.enabled & movement.distance > 15",
								["action"] = "vengeful_retreat",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.demon_blades.enabled",
								["action"] = "throw_glaive",
							}, -- [23]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "disrupt",
							}, -- [1]
							{
								["action"] = "consume_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "blade_dance",
								["criteria"] = "! runeforge.chaos_theory.enabled & ! runeforge.darkglare_medallion.enabled",
								["description"] = "Without Chaos Theory or Darkglare, Blade Dance with First Blood or at 3+ (2+ with Trail of Ruin) targets",
								["value"] = "talent.first_blood.enabled || spell_targets.blade_dance1 >= ( 3 - talent.trail_of_ruin.enabled )",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "blade_dance",
								["criteria"] = "runeforge.chaos_theory.enabled || talent.chaos_theory.enabled",
								["description"] = "With Chaos Theory, Blade Dance when the buff is down, with First Blood at 2+ (1+ with Trail of Ruin) or with Essence Break at 4+ (3+ with Trail of Ruin) targets",
								["value"] = "buff.chaos_theory.down || talent.first_blood.enabled || ! talent.cycle_of_hatred.enabled & spell_targets.blade_dance1 >= ( 4 - talent.trail_of_ruin.enabled )",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "blade_dance",
								["criteria"] = "runeforge.darkglare_medallion.enabled",
								["description"] = "With Darkglare, Blade Dance at normal target count when buffed by a secondary effect, or always at 4T+ for non-Demonic",
								["value"] = "talent.first_blood.enabled || ( buff.metamorphosis.up || talent.trail_of_ruin.enabled || debuff.essence_break.up ) & spell_targets.blade_dance1 >= ( 3 - talent.trail_of_ruin.enabled ) || ! talent.demonic.enabled & spell_targets.blade_dance1 >= 4",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! talent.demonic.enabled & cooldown.metamorphosis.remains < 6 & fury.deficit > 30",
								["var_name"] = "pooling_for_meta",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.blade_dance & ( fury < 75 - talent.first_blood.enabled * 20 )",
								["var_name"] = "pooling_for_blade_dance",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.demonic.enabled & ! talent.blind_fury.enabled & cooldown.eye_beam.remains < ( gcd.max * 2 ) & fury.deficit > 20",
								["var_name"] = "pooling_for_eye_beam",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.momentum.enabled & ! buff.momentum.up",
								["var_name"] = "waiting_for_momentum",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["var_name"] = "waiting_for_agony_gaze",
								["criteria"] = "runeforge.agony_gaze.enabled",
								["description"] = "With Agony Gaze, attempt to sync Eye Beam and cooldown usage for maximum duration, unless at 3T+",
								["value"] = "! dot.sinful_brand.ticking & cooldown.sinful_brand.remains < gcd.max * 4 & ( ! cooldown.metamorphosis.up || active_enemies = 1 ) & spell_targets.eye_beam <= 3",
							}, -- [10]
							{
								["action"] = "disrupt",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "gcd.remains = 0",
								["action"] = "call_action_list",
								["list_name"] = "cooldown",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.fel_bombardment.stack = 5 & ( buff.immolation_aura.up || ! buff.metamorphosis.up )",
								["action"] = "throw_glaive",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "time > 1 & ( variable.waiting_for_momentum || ! talent.momentum.enabled & talent.tactical_retreat.enabled ) & buff.tactical_retreat.down",
								["action"] = "vengeful_retreat",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "( buff.unbound_chaos.up || variable.waiting_for_momentum & ( ! talent.unbound_chaos.enabled || ! cooldown.immolation_aura.ready ) ) & ( charges = 2 || ( raid_event.movement.in > 10 & raid_event.adds.in > 10 ) )",
								["action"] = "fel_rush",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.demonic.enabled",
								["action"] = "run_action_list",
								["list_name"] = "demonic",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "normal",
							}, -- [17]
						},
						["demonic"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.agony_gaze.enabled & ( active_enemies > desired_targets || raid_event.adds.in > 25 - talent.cycle_of_hatred.enabled * 10 ) & dot.sinful_brand.ticking & dot.sinful_brand.remains <= gcd",
								["action"] = "eye_beam",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! variable.waiting_for_momentum & ( ! cooldown.eye_beam.ready || buff.metamorphosis.up )",
								["action"] = "essence_break",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_dance",
								["action"] = "death_sweep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 30",
								["action"] = "fel_barrage",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 10",
								["action"] = "glaive_tempest",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( conduit.serrated_glaive.enabled || talent.serrated_glaive.enabled ) & cooldown.eye_beam.remains < 6 & ! buff.metamorphosis.up & ! debuff.exposed_wound.up",
								["action"] = "throw_glaive",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 25 - talent.cycle_of_hatred.enabled * 10 & ( ! variable.use_eye_beam_fury_condition || spell_targets > 1 || fury < 70 ) & ! variable.waiting_for_agony_gaze",
								["action"] = "eye_beam",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.blade_dance & ! cooldown.metamorphosis.ready & ( cooldown.eye_beam.remains > 5 || ( raid_event.adds.in > action_cooldown & raid_event.adds.in < 25 ) )",
								["action"] = "blade_dance",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.soulrend.enabled & spell_targets > ( 2 - talent.furious_throws.enabled )",
								["action"] = "throw_glaive",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_for_blade_dance",
								["action"] = "annihilation",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! buff.immolation_aura.up & ( ! talent.ragefire.enabled || active_enemies > desired_targets || raid_event.adds.in > 15 )",
								["action"] = "immolation_aura",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "fury.deficit >= 40",
								["action"] = "felblade",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > desired_targets",
								["action"] = "sigil_of_flame",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_for_blade_dance & ! variable.pooling_for_eye_beam",
								["action"] = "chaos_strike",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! talent.momentum.enabled & talent.demon_blades.enabled & ! cooldown.eye_beam.ready & ( charges = 2 || ( raid_event.movement.in > 10 & raid_event.adds.in > 10 ) )",
								["action"] = "fel_rush",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "demons_bite",
								["criteria"] = "( runeforge.burning_wound.enabled || talent.burning_wound.enabled ) & debuff.burning_wound.remains < 4",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! talent.momentum.enabled & ! talent.demon_blades.enabled & spell_targets > 1 & ( charges = 2 || ( raid_event.movement.in > 10 & raid_event.adds.in > 10 ) )",
								["action"] = "fel_rush",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 15 & fury.deficit >= 30",
								["action"] = "sigil_of_flame",
							}, -- [18]
							{
								["action"] = "demons_bite",
								["enabled"] = true,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.out_of_range.up",
								["action"] = "throw_glaive",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "movement.distance > 15 || ( buff.out_of_range.up & ! talent.momentum.enabled )",
								["action"] = "fel_rush",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "! talent.momentum.enabled & movement.distance > 15",
								["action"] = "vengeful_retreat",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.demon_blades.enabled",
								["action"] = "throw_glaive",
							}, -- [23]
						},
						["cooldown"] = {
							{
								["enabled"] = true,
								["description"] = "Cast Metamorphosis if we will get a full Eye Beam refresh or if the encounter is almost over",
								["criteria"] = "! talent.demonic.enabled & ( cooldown.eye_beam.remains > 20 || fight_remains < 25 )",
								["action"] = "metamorphosis",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.demonic.enabled & ( cooldown.eye_beam.remains > 20 & ( ! variable.blade_dance || cooldown.blade_dance.remains > gcd.max ) || fight_remains < 25 )",
								["action"] = "metamorphosis",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.metamorphosis.remains > 25 || fight_remains < 60",
								["action"] = "potion",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "wraps_of_electrostatic_potential",
								["action"] = "wraps_of_electrostatic_potential",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.temptation.down || fight_remains < 30",
								["name"] = "ring_of_collapsing_futures",
								["action"] = "ring_of_collapsing_futures",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.acquired_axe.up & ( ( active_enemies = desired_targets & raid_event.adds.in > 60 || active_enemies > desired_targets ) & ( active_enemies < 3 || cooldown.eye_beam.remains < 20 ) || fight_remains < 25 )",
								["name"] = "cache_of_acquired_treasures",
								["action"] = "cache_of_acquired_treasures",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Default use item logic",
								["action"] = "trinket1",
								["slots"] = "trinket1",
								["criteria"] = "variable.trinket_sync_slot = 1 & ( buff.metamorphosis.up || ( ! talent.demonic.enabled & cooldown.metamorphosis.remains > ( fight_remains >? trinket.t1.cooldown.duration / 2 ) ) || fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ! trinket.t2.cooldown.ready ) || ! variable.trinket_sync_slot",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_sync_slot = 2 & ( buff.metamorphosis.up || ( ! talent.demonic.enabled & cooldown.metamorphosis.remains > ( fight_remains >? trinket.t2.cooldown.duration / 2 ) ) || fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ! trinket.t1.cooldown.ready ) || ! variable.trinket_sync_slot",
								["slots"] = "trinket2",
								["action"] = "trinket2",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! dot.sinful_brand.ticking & ( ! runeforge.agony_gaze.enabled || ( cooldown.eye_beam.remains <= gcd & fury >= 30 ) ) & ( ! cooldown.metamorphosis.up || active_enemies = 1 )",
								["action"] = "sinful_brand",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.demonic.enabled & ! variable.waiting_for_momentum & ! variable.pooling_for_meta || ( buff.furious_gaze.up || ! talent.furious_gaze.enabled )",
								["action"] = "the_hunt",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "( active_enemies > desired_targets || raid_event.adds.in > 30 )",
								["action"] = "elysian_decree",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [12]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1",
								["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
								["var_name"] = "trinket_sync_slot",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "2",
								["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
								["var_name"] = "trinket_sync_slot",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "use_eye_beam_fury_condition",
							}, -- [3]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [5]
						},
					},
					["author"] = "SimC",
				},
				["Frost Mage"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220523,
					["author"] = "SimC",
					["desc"] = "Mage Frost\nMay 23, 2022\n\nChanges:\n- Don't include Blink in Movement APL (positioning is a player decision)\n- Make some 'fight_remains' entries apply to boss fights only.",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.disciplinary_command.enabled & debuff.casting.up & debuff.casting.remains < 1 || cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down",
								["action"] = "counterspell",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "essences",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= 3",
								["list_name"] = "aoe",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies < 3",
								["list_name"] = "st",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "movement",
							}, -- [6]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "water_elemental",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2",
								["action"] = "blizzard",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1",
								["action"] = "frostbolt",
							}, -- [5]
						},
						["aoe"] = {
							{
								["action"] = "frozen_orb",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.down || ! runeforge.deaths_fathom.enabled || buff.freezing_rain.up || active_enemies >= 6",
								["action"] = "blizzard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies = 5 & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled || conduit.shivering_core.enabled || ! runeforge.cold_front.enabled )",
								["action"] = "blizzard",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies = 4 & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled & conduit.shivering_core.enabled || ! runeforge.cold_front.enabled & ! runeforge.slick_ice.enabled )",
								["action"] = "blizzard",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies <= 3 & ! runeforge.slick_ice.enabled & ! runeforge.cold_front.enabled & conduit.shivering_core.enabled & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled )",
								["action"] = "blizzard",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( remaining_winters_chill = 0 || debuff.winters_chill.down ) & ( prev_gcd.1.ebonbolt || buff.brain_freeze.react & buff.fingers_of_frost.react = 0 )",
								["action"] = "flurry",
							}, -- [6]
							{
								["action"] = "ice_nova",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "comet_storm",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent_humanoid.down",
								["interrupt_if"] = "1",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deaths_fathom.enabled & ( runeforge.cold_front.enabled || runeforge.slick_ice.enabled ) & buff.deathborne.remains > cast_time + travel_time",
								["action"] = "frostbolt",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & comet_storm_remains > action.ice_lance.travel_time",
								["action"] = "frostbolt",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time || remaining_winters_chill & debuff.winters_chill.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [14]
							{
								["action"] = "shifting_power",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down",
								["action"] = "fire_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 30 & active_enemies >= 6 & ! runeforge.glacial_fragments.enabled",
								["action"] = "arcane_explosion",
							}, -- [17]
							{
								["action"] = "ebonbolt",
								["enabled"] = true,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.glacial_fragments.enabled & ( talent.splitting_ice.enabled || active_enemies >= 5 ) & travel_time < ground_aoe.blizzard.remains",
								["action"] = "ice_lance",
							}, -- [19]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [20]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "buff.rune_of_power.down",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "prev_off_gcd.icy_veins || boss & fight_remains < 30",
								["action"] = "potion",
							}, -- [2]
							{
								["action"] = "deathborne",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 3 & ( conduit.siphoned_malice.enabled || soulbind.wasteland_propriety.enabled ) & buff.brain_freeze.react = 0",
								["action"] = "mirrors_of_torment",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.icy_veins.remains > 12 & buff.rune_of_power.down",
								["action"] = "rune_of_power",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( buff.icy_veins.down || talent.rune_of_power.enabled ) & ( buff.slick_ice.down || conduit.icy_propulsion.enabled & ( talent.comet_storm.enabled || set_bonus.tier28_2pc ) || active_enemies >= 2 )",
								["action"] = "icy_veins",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up & ( prev_off_gcd.icy_veins || boss & fight_remains < 40 )",
								["action"] = "time_warp",
							}, -- [7]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [14]
						},
						["st"] = {
							{
								["enabled"] = true,
								["criteria"] = "( remaining_winters_chill = 0 || debuff.winters_chill.down ) & ( prev_gcd.1.ebonbolt || buff.brain_freeze.react & ( prev_gcd.1.glacial_spike || prev_gcd.1.frostbolt & ( ! conduit.ire_of_the_ascended.enabled || cooldown.radiant_spark.remains || runeforge.freezing_winds.enabled ) || prev_gcd.1.radiant_spark || buff.fingers_of_frost.react = 0 & ( debuff.mirrors_of_torment.up || buff.freezing_winds.up || buff.expanded_potential.react ) ) )",
								["action"] = "flurry",
							}, -- [1]
							{
								["action"] = "frozen_orb",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill",
								["action"] = "comet_storm",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.splitting_ice.enabled & talent.chain_reaction.enabled & buff.fingers_of_frost.react = buff.fingers_of_frost.max_stack",
								["action"] = "ice_lance",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deaths_fathom.enabled & ( runeforge.cold_front.enabled || runeforge.slick_ice.enabled ) & buff.deathborne.remains > cast_time + travel_time & active_enemies >= 2",
								["action"] = "frostbolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.slick_ice.enabled || ! conduit.icy_propulsion.enabled & buff.deathborne.down ) & active_enemies >= 2",
								["action"] = "blizzard",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & debuff.winters_chill.remains",
								["action"] = "ray_of_frost",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill & debuff.winters_chill.remains > cast_time + travel_time",
								["action"] = "glacial_spike",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & comet_storm_remains > action.ice_lance.travel_time",
								["action"] = "frostbolt",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill & remaining_winters_chill > buff.fingers_of_frost.react & debuff.winters_chill.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [10]
							{
								["action"] = "ice_nova",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.freezing_winds.up & active_enemies = 1",
								["action"] = "radiant_spark",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.brain_freeze.react & talent.glacial_spike.enabled & conduit.ire_of_the_ascended.enabled & buff.icicles.stack >= 4",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [14]
							{
								["action"] = "ebonbolt",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.glacial_spike.enabled || ! conduit.ire_of_the_ascended.enabled ) & ( ! runeforge.freezing_winds.enabled || active_enemies >= 2 ) & buff.brain_freeze.react",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( runeforge.heart_of_the_fae.enabled || soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || runeforge.freezing_winds.enabled & buff.freezing_winds.down || active_enemies >= 2 )",
								["action"] = "shifting_power",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down",
								["action"] = "arcane_explosion",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down",
								["action"] = "fire_blast",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.brain_freeze.react",
								["action"] = "glacial_spike",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent_humanoid.down",
								["interrupt_if"] = "1",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [22]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [23]
						},
						["movement"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.ice_floes.down",
								["action"] = "ice_floes",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 30 & active_enemies >= 2",
								["action"] = "arcane_explosion",
							}, -- [2]
							{
								["action"] = "fire_blast",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "ice_lance",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220523,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 5: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 13: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'cds' required some automated changes.\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'st' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 16: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 18: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nImported 6 action lists.\n",
					["spec"] = 64,
					["profile"] = "## Mage Frost\n## May 23, 2022\n\n## Changes:\n## - Don't include Blink in Movement APL (positioning is a player decision)\n## - Make some 'fight_remains' entries apply to boss fights only.\n\n## Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/arcane_intellect\nactions.precombat+=/summon_water_elemental\nactions.precombat+=/fleshcraft\nactions.precombat+=/blizzard,if=active_enemies>=2\nactions.precombat+=/frostbolt,if=active_enemies=1\n\n## Executed every time the actor is available.\nactions=counterspell,if=!runeforge.disciplinary_command&debuff.casting.up&debuff.casting.remains<1||cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=essences\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\nactions+=/call_action_list,name=movement\n\nactions.aoe=frozen_orb\nactions.aoe+=/blizzard,if=buff.deathborne.down||!runeforge.deaths_fathom||buff.freezing_rain.up||active_enemies>=6\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies=5&(talent.freezing_rain||talent.bone_chilling||conduit.shivering_core||!runeforge.cold_front)\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies=4&(talent.freezing_rain||talent.bone_chilling&conduit.shivering_core||!runeforge.cold_front&!runeforge.slick_ice)\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies<=3&!runeforge.slick_ice&!runeforge.cold_front&conduit.shivering_core&(talent.freezing_rain||talent.bone_chilling)\nactions.aoe+=/flurry,if=(remaining_winters_chill=0||debuff.winters_chill.down)&(prev_gcd.1.ebonbolt||buff.brain_freeze.react&buff.fingers_of_frost.react=0)\nactions.aoe+=/ice_nova\nactions.aoe+=/comet_storm\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent_humanoid.down,interrupt_immediate=1,interrupt_global=1,interrupt_if=1\nactions.aoe+=/frostbolt,if=runeforge.deaths_fathom&(runeforge.cold_front||runeforge.slick_ice)&buff.deathborne.remains>cast_time+travel_time\nactions.aoe+=/frostbolt,if=remaining_winters_chill=1&comet_storm_remains>action.ice_lance.travel_time\nactions.aoe+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time||remaining_winters_chill&debuff.winters_chill.remains>travel_time\nactions.aoe+=/radiant_spark,if=soulbind.combat_meditation\nactions.aoe+=/mirrors_of_torment\nactions.aoe+=/shifting_power\nactions.aoe+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down\nactions.aoe+=/arcane_explosion,if=mana.pct>30&active_enemies>=6&!runeforge.glacial_fragments\nactions.aoe+=/ebonbolt\nactions.aoe+=/ice_lance,if=runeforge.glacial_fragments&(talent.splitting_ice||active_enemies>=5)&travel_time<ground_aoe.blizzard.remains\n## + actions.aoe+=/wait,sec=0.1,if=runeforge.glacial_fragments&!runeforge.deaths_fathom&(!talent.comet_storm&active_enemies>=5||active_enemies>=6)\nactions.aoe+=/frostbolt\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=buff.rune_of_power.down\nactions.cds+=/potion,if=prev_off_gcd.icy_veins||boss&fight_remains<30\nactions.cds+=/deathborne\nactions.cds+=/mirrors_of_torment,if=active_enemies<3&(conduit.siphoned_malice||soulbind.wasteland_propriety)&buff.brain_freeze.react=0\nactions.cds+=/rune_of_power,if=cooldown.icy_veins.remains>12&buff.rune_of_power.down\nactions.cds+=/icy_veins,if=buff.rune_of_power.down&(buff.icy_veins.down||talent.rune_of_power)&(buff.slick_ice.down||conduit.icy_propulsion&(talent.comet_storm||set_bonus.tier28_2pc)||active_enemies>=2)\nactions.cds+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up&(prev_off_gcd.icy_veins||boss&fight_remains<40)\nactions.cds+=/use_items\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/lights_judgment\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\nactions.cds+=/bag_of_tricks\n\n## Disabled because Blink/Shimmer is a player choice.\n## actions.movement=blink_any,if=movement.distance>10\nactions.movement+=/ice_floes,if=buff.ice_floes.down\nactions.movement+=/arcane_explosion,if=mana.pct>30&active_enemies>=2\nactions.movement+=/fire_blast\nactions.movement+=/ice_lance\n\nactions.st=flurry,if=(remaining_winters_chill=0||debuff.winters_chill.down)&(prev_gcd.1.ebonbolt||buff.brain_freeze.react&(prev_gcd.1.glacial_spike||prev_gcd.1.frostbolt&(!conduit.ire_of_the_ascended||cooldown.radiant_spark.remains||runeforge.freezing_winds)||prev_gcd.1.radiant_spark||buff.fingers_of_frost.react=0&(debuff.mirrors_of_torment.up||buff.freezing_winds.up||buff.expanded_potential.react)))\nactions.st+=/frozen_orb\nactions.st+=/comet_storm,if=remaining_winters_chill\nactions.st+=/ice_lance,if=talent.splitting_ice&talent.chain_reaction&buff.fingers_of_frost.react=buff.fingers_of_frost.max_stack\nactions.st+=/frostbolt,if=runeforge.deaths_fathom&(runeforge.cold_front||runeforge.slick_ice)&buff.deathborne.remains>cast_time+travel_time&active_enemies>=2\nactions.st+=/blizzard,if=(!runeforge.slick_ice||!conduit.icy_propulsion&buff.deathborne.down)&active_enemies>=2\nactions.st+=/ray_of_frost,if=remaining_winters_chill=1&debuff.winters_chill.remains\nactions.st+=/glacial_spike,if=remaining_winters_chill&debuff.winters_chill.remains>cast_time+travel_time\nactions.st+=/frostbolt,if=remaining_winters_chill=1&comet_storm_remains>action.ice_lance.travel_time\nactions.st+=/ice_lance,if=remaining_winters_chill&remaining_winters_chill>buff.fingers_of_frost.react&debuff.winters_chill.remains>travel_time\nactions.st+=/ice_nova\nactions.st+=/radiant_spark,if=buff.freezing_winds.up&active_enemies=1\nactions.st+=/radiant_spark,if=buff.brain_freeze.react&talent.glacial_spike&conduit.ire_of_the_ascended&buff.icicles.stack>=4\nactions.st+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time\nactions.st+=/ebonbolt\nactions.st+=/radiant_spark,if=(!talent.glacial_spike||!conduit.ire_of_the_ascended)&(!runeforge.freezing_winds||active_enemies>=2)&buff.brain_freeze.react\nactions.st+=/mirrors_of_torment\nactions.st+=/shifting_power,if=buff.rune_of_power.down&(runeforge.heart_of_the_fae||soulbind.grove_invigoration||soulbind.field_of_blossoms||runeforge.freezing_winds&buff.freezing_winds.down||active_enemies>=2)\nactions.st+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down\nactions.st+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down\nactions.st+=/glacial_spike,if=buff.brain_freeze.react\nactions.st+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent_humanoid.down,interrupt_immediate=1,interrupt_global=1,interrupt_if=1\nactions.st+=/frostbolt",
				},
				["Fire"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220618,
					["author"] = "SimC",
					["desc"] = "Fire Mage\nhttps://github.com/simulationcraft/simc/\nJune 18, 2022\n\nChanges:\n- Use fight_remains rather than target.time_to_die for last-second ability usages.\n- Loosen cast requirements for Combustion (i.e., don't hold it for a fresh Meteor cast).\n- Enable strict checking on a few forks in the APL to reduce workload.\n- Adjust a Pyroblast entry that does not model well in-game (sim tested at no significant DPS impact).\n- Convert all buff.X.react entries to buff.X.up, an almost insignificant DPS gain in sims.\n- Use hardcoded variables to reduce CPU workload.",
					["lists"] = {
						["combustion_phase"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["description"] = "Estimate how long Combustion will last thanks to Sun King's Blessing to determine how Fire Blasts should be used.",
								["action"] = "variable",
								["value"] = "buff.combustion.remains + buff.combustion.duration * ( cooldown.combustion.remains < buff.combustion.remains )",
								["use_off_gcd"] = 1,
								["var_name"] = "extended_combustion_remains",
								["use_while_casting"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "variable",
								["op"] = "add",
								["criteria"] = "runeforge.sun_kings_blessing.enabled & ( buff.sun_kings_blessing_ready.up || variable.extended_combustion_remains > gcd.remains + 1.5 * gcd.max * ( buff.sun_kings_blessing.max_stack - buff.sun_kings_blessing.stack ) )",
								["use_off_gcd"] = 1,
								["value"] = "variable.skb_duration",
								["description"] = "Adds the duration of the Sun King's Blessing Combustion to the end of the current Combustion if the cast would start during this Combustion.",
								["var_name"] = "extended_combustion_remains",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.",
								["strict"] = 1,
								["criteria"] = "variable.extended_combustion_remains > variable.skb_duration",
								["list_name"] = "combustion_cooldowns",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [4]
							{
								["buff_name"] = "sun_kings_blessing",
								["criteria"] = "! set_bonus.tier28_4pc & buff.combustion.down & buff.sun_kings_blessing.stack > 2 & talent.rune_of_power.enabled & cooldown.rune_of_power.remains < 20",
								["action"] = "cancel_buff",
								["enabled"] = true,
								["description"] = "If Sun King's Blessing stacks are high, cancel them before Combustion so that the Sun King's Blessing proc can be safely delayed until after Combustion without risk of expiration.",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & active_enemies >= variable.combustion_flamestrike",
								["action"] = "flamestrike",
								["description"] = "If Combustion is down, precast something before activating it.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.pyroclasm.react & buff.pyroclasm.remains > cast_time",
								["action"] = "pyroblast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & ! conduit.flame_accretion.enabled",
								["action"] = "fireball",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time",
								["action"] = "scorch",
							}, -- [10]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "hot_streak_spells_in_flight = 0 & buff.combustion.down & variable.time_to_combustion <= 0 & ( ! runeforge.disciplinary_command.enabled || buff.disciplinary_command.up || buff.disciplinary_command_frost.up & talent.rune_of_power.enabled & cooldown.buff_disciplinary_command.ready ) & ( ! runeforge.grisly_icicle.enabled || debuff.grisly_icicle.up ) & ( ! covenant.necrolord || cooldown.deathborne.remains || buff.deathborne.up ) & ( ! covenant.venthyr || cooldown.mirrors_of_torment.remains ) & ( action.meteor.in_flight & action.meteor.in_flight_remains <= variable.combustion_cast_remains || action.scorch.executing & action.scorch.execute_remains < variable.combustion_cast_remains || action.fireball.executing & action.fireball.execute_remains < variable.combustion_cast_remains || action.pyroblast.executing & action.pyroblast.execute_remains < variable.combustion_cast_remains || action.flamestrike.executing & action.flamestrike.execute_remains < variable.combustion_cast_remains )",
								["use_off_gcd"] = 1,
								["action"] = "combustion",
								["description"] = "Combustion should be used when the precast is almost finished.",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & variable.extended_combustion_remains > variable.skb_duration",
								["action"] = "rune_of_power",
								["description"] = "Rune of Power can be used in Combustion if it is down, but this should only be done if there is more Combustion time to benefit from than there would be from an SKB Combustion later.",
							}, -- [12]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! conduit.infernal_cascade.enabled & ! variable.fire_blast_pooling & ( ! set_bonus.tier28_4pc || debuff.mirrors_of_torment.down || buff.sun_kings_blessing_ready.down || action.pyroblast.executing ) & buff.combustion.up & ! buff.firestorm.react & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "Without Infernal Cascade, just use Fire Blasts when they won't munch crits and when Firestorm is down.",
							}, -- [13]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Use Shifting Power during Combustion when there are not enough Fire Blasts available to fully extend infernal cascade and only when Rune of Power is on cooldown.",
								["op"] = "set",
								["criteria"] = "covenant.night_fae",
								["value"] = "firestarter.remains < variable.extended_combustion_remains & ( conduit.infernal_cascade.enabled & variable.expected_fire_blasts < variable.needed_fire_blasts ) & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.extended_combustion_remains ) || active_enemies >= variable.combustion_shifting_power",
								["use_off_gcd"] = 1,
								["action"] = "variable",
								["var_name"] = "use_shifting_power",
							}, -- [14]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "conduit.infernal_cascade & ! variable.fire_blast_pooling & ( ! set_bonus.tier28_4pc || debuff.mirrors_of_torment.down || buff.sun_kings_blessing_ready.down || action.pyroblast.executing ) & ( variable.expected_fire_blasts >= variable.needed_fire_blasts || buff.combustion.remains < gcd.max || variable.extended_combustion_remains <= buff.infernal_cascade.duration || buff.infernal_cascade.stack < 2 || buff.infernal_cascade.remains < gcd.max || cooldown.shifting_power.ready & variable.use_shifting_power ) & buff.combustion.up & ( ! buff.firestorm.react || buff.infernal_cascade.remains < 0.5 ) & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "( buff.hot_streak.up & active_enemies >= variable.combustion_flamestrike ) || ( buff.firestorm.up & active_enemies >= variable.combustion_flamestrike - runeforge.firestorm.enabled )",
								["action"] = "flamestrike",
								["description"] = "Spend Hot Streaks during Combustion at high priority.",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up & 2 * buff.hot_streak.react + buff.heating_up.react + hot_streak_spells_in_flight = 2",
								["action"] = "radiant_spark",
								["description"] = "Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & buff.combustion.up",
								["action"] = "pyroblast",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.scorch & buff.heating_up.up & active_enemies < variable.combustion_flamestrike & buff.combustion.up",
								["action"] = "pyroblast",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_shifting_power & buff.combustion.up & ! action.fire_blast.charges & action.phoenix_flames.charges < action.phoenix_flames.max_charges",
								["action"] = "shifting_power",
								["description"] = "Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > execute_time + action.flamestrike.cast_time & buff.rune_of_power.remains < action.flamestrike.cast_time & active_enemies >= variable.combustion_flamestrike",
								["action"] = "rune_of_power",
								["description"] = "If a Sun King's Blessing proc would be used, Rune of Power should be used first if the existing Rune of Power will expire during the cast.",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & active_enemies >= variable.combustion_flamestrike & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > execute_time + action.pyroblast.cast_time & buff.rune_of_power.remains < action.pyroblast.cast_time",
								["action"] = "rune_of_power",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & buff.pyroclasm.remains > cast_time & buff.combustion.remains > cast_time & active_enemies < variable.combustion_flamestrike & ( ! conduit.infernal_cascade.enabled || buff.infernal_cascade.remains > execute_time || buff.heating_up.react + hot_streak_spells_in_flight < 2 )",
								["action"] = "pyroblast",
								["description"] = "Pyroclasm procs should be used in Combustion at higher priority than Phoenix Flames and Scorch.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up & travel_time < buff.combustion.remains & buff.heating_up.react + hot_streak_spells_in_flight < 2",
								["action"] = "phoenix_flames",
								["description"] = "Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains > cast_time",
								["action"] = "scorch",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains < gcd.max & active_enemies > 1",
								["action"] = "living_bomb",
								["description"] = "If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains < gcd.max & buff.combustion.up",
								["action"] = "dragons_breath",
							}, -- [30]
						},
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.disciplinary_command.enabled",
								["action"] = "counterspell",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & action.fire_blast.charges <= 1 & ! ( buff.infernal_cascade.up & buff.hot_streak.react ) & variable.shifting_power_before_combustion",
								["action"] = "shifting_power",
								["description"] = "Variable that estimates whether Shifting Power will be used before Combustion is ready.",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & ( variable.time_to_combustion > action_cooldown - 5 )",
								["action"] = "radiant_spark",
								["description"] = "Save Radiant Spark for Combustion, but otherwise use it on cooldown.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.rune_of_power.down & variable.time_to_combustion < variable.combustion_precast_time + execute_time + ( buff.deathborne.duration - buff.combustion.duration ) * runeforge.deaths_fathom.enabled",
								["action"] = "deathborne",
								["description"] = "Deathborne should always be used with Combustion. With Death's Fathom, it should be used early so that Deathborne will have more stacks during Combustion.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion < variable.combustion_precast_time + execute_time & buff.combustion.down",
								["action"] = "mirrors_of_torment",
								["description"] = "Use Mirrors of Torment with Combustion.",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion > action_cooldown - 30 * runeforge.sinful_delight.enabled",
								["action"] = "mirrors_of_torment",
								["description"] = "Also use Mirrors of Torment in between Combustions as long as Combustion will not have to be delayed much for it.",
							}, -- [6]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "fire_blast",
								["description"] = "For Venthyr, use a Fire Blast charge during Mirrors of Torment cast to avoid capping charges.",
								["criteria"] = "action.mirrors_of_torment.executing & full_recharge_time - action.mirrors_of_torment.execute_remains < 4 & ! hot_streak_spells_in_flight & ! buff.hot_streak.up",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "gladiators_badge",
								["criteria"] = "variable.time_to_combustion > action_cooldown - 5",
								["effect_name"] = "gladiators_badge",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.time_to_combustion <= variable.empyreal_ordnance_delay & variable.time_to_combustion > variable.empyreal_ordnance_delay - 5",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( variable.time_to_combustion <= variable.combustion_precast_time + 2 || fight_remains < variable.time_to_combustion ) & buff.combustion.down",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "variable.time_to_combustion <= 8 || fight_remains < variable.time_to_combustion",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "variable.time_to_combustion <= 5 || fight_remains < variable.time_to_combustion",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "variable.time_to_combustion <= 5",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["description"] = "If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Infernal Cascade is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown.",
								["criteria"] = "( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 ) & ( buff.infernal_cascade.stack = buff.infernal_cascade.max_stack || ! conduit.infernal_cascade.enabled || variable.combustion_on_use || variable.time_to_combustion > interpolated_fight_remains %  ( action_cooldown + 10 ) )",
								["action"] = "dreadfire_vessel",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "( variable.time_to_combustion >= 30 * ( variable.on_use_cutoff > 0 ) || ( ! trinket.t1.is.soul_igniter & trinket.t1.usable & trinket.t1.cooldown.remains || ! trinket.t2.is.soul_igniter & trinket.t2.usable & trinket.t2.cooldown.remains ) ) & ( ! equipped.dreadfire_vessel || cooldown.dreadfire_vessel.remains > 5 )",
							}, -- [16]
							{
								["buff_name"] = "soul_ignition",
								["criteria"] = "! conduit.infernal_cascade.enabled & time < 5 || buff.infernal_cascade.stack = buff.infernal_cascade.max_stack",
								["action"] = "cancel_buff",
								["enabled"] = true,
								["description"] = "Trigger Soul Igniter early with Infernal Cascade or when it was precast.",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["description"] = "Items that do not benefit Combustion should just be used outside of Combustion at some point.",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
								["action"] = "inscrutable_quantum_device",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [22]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.down",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0",
								["action"] = "use_items",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & buff.combustion.down & ( variable.time_to_combustion > action_cooldown || variable.time_to_combustion < variable.combustion_precast_time + execute_time )",
								["action"] = "frost_nova",
								["description"] = "Use Frost Nova to trigger Grisly Icicle.",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "counterspell",
								["description"] = "Get the Disciplinary Command buff up, unless combustion is soon.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + execute_time + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 & ! talent.rune_of_power.enabled )",
								["action"] = "arcane_explosion",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.remains < cast_time & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "frostbolt",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "frost_nova",
							}, -- [29]
							{
								["enabled"] = true,
								["op"] = "set",
								["description"] = "Pool as many Fire Blasts as possible for Combustion. Subtract out of the fractional component of the number of Fire Blasts that will naturally recharge during the Combustion phase because pooling anything past that will not grant an extra Fire Blast during Combustion.",
								["action"] = "variable",
								["value"] = "variable.extended_combustion_remains < variable.time_to_combustion & action.fire_blast.charges_fractional + ( variable.time_to_combustion + action.shifting_power.full_reduction * variable.shifting_power_before_combustion + ( debuff.mirrors_of_torment.max_stack - 1 ) * variable.mot_recharge_amount * covenant.venthyr * ( cooldown.mirrors_of_torment.remains <= variable.time_to_combustion ) ) / cooldown.fire_blast.duration - 1 < cooldown.fire_blast.max_charges + variable.overpool_fire_blasts / cooldown.fire_blast.duration - ( buff.combustion.duration / cooldown.fire_blast.duration )  % 1 & variable.time_to_combustion < fight_remains",
								["use_off_gcd"] = 1,
								["var_name"] = "fire_blast_pooling",
								["use_while_casting"] = 1,
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.up || variable.time_to_combustion < variable.combustion_precast_time & cooldown.combustion.remains < variable.combustion_precast_time",
								["action"] = "call_action_list",
								["list_name"] = "combustion_phase",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.rune_of_power.down & ! buff.firestorm.react & ( variable.time_to_combustion >= buff.rune_of_power.duration & variable.time_to_combustion > action.fire_blast.full_recharge_time || variable.time_to_combustion > fight_remains ) & ( ! runeforge.sun_kings_blessing.enabled || active_enemies >= variable.hard_cast_flamestrike || buff.sun_kings_blessing_ready.up || buff.sun_kings_blessing.react >= buff.sun_kings_blessing.max_stack - 1 || fight_remains < buff.rune_of_power.duration )",
								["action"] = "rune_of_power",
							}, -- [32]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.",
								["op"] = "set",
								["criteria"] = "! variable.fire_blast_pooling & runeforge.sun_kings_blessing.enabled",
								["value"] = "searing_touch.active & action.fire_blast.full_recharge_time > 3 * gcd.max",
								["use_off_gcd"] = 1,
								["action"] = "variable",
								["var_name"] = "fire_blast_pooling",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When using Flamestrike in Combustion, save as many charges as possible for Combustion without capping.",
								["strict"] = 1,
								["criteria"] = "buff.rune_of_power.up & buff.combustion.down & variable.time_to_combustion > 0",
								["list_name"] = "rop_phase",
							}, -- [34]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Adjust the variable that controls Fire Blast usage to ensure its charges are also pooled for Rune of Power.",
								["op"] = "set",
								["criteria"] = "! variable.fire_blast_pooling & talent.rune_of_power.enabled & buff.rune_of_power.down",
								["value"] = "( ! runeforge.sun_kings_blessing.enabled || buff.sun_kings_blessing.stack > buff.sun_kings_blessing.max_stack - 1 ) & cooldown.rune_of_power.remains < action.fire_blast.full_recharge_time - action.shifting_power.full_reduction * ( variable.shifting_power_before_combustion & cooldown.shifting_power.remains < cooldown.rune_of_power.remains ) & cooldown.rune_of_power.remains < fight_remains",
								["use_off_gcd"] = 1,
								["action"] = "variable",
								["var_name"] = "fire_blast_pooling",
							}, -- [35]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & variable.time_to_combustion > 0 & active_enemies >= variable.hard_cast_flamestrike & ! firestarter.active & ! buff.hot_streak.up & ( buff.heating_up.up & action.flamestrike.execute_remains < 0.5 || charges_fractional >= 2 )",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Blaster Master.",
							}, -- [36]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "firestarter.active & variable.time_to_combustion > 0 & ! variable.fire_blast_pooling & ( ! action.fireball.executing & ! action.pyroblast.in_flight & buff.heating_up.react || action.fireball.executing & ! buff.hot_streak.react || action.pyroblast.in_flight & buff.heating_up.react & ! buff.hot_streak.react )",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Blaster Master, they should be spread out to maintain the Blaster Master buff.",
							}, -- [37]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "fire_blast",
								["description"] = "Avoid capping Fire Blast charges while channeling Shifting Power",
								["criteria"] = "action.shifting_power.executing & full_recharge_time < action.shifting_power.tick_reduction",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion > 0 & buff.rune_of_power.down & buff.combustion.down",
								["action"] = "call_action_list",
								["list_name"] = "standard_rotation",
							}, -- [39]
							{
								["action"] = "scorch",
								["enabled"] = true,
							}, -- [40]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "actions.precombat+=/variable,name=on_use_cutoff,value=20+variable.empyreal_ordnance_delay,if=equipped.empyreal_ordnance",
								["action"] = "fleshcraft",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "! variable.combustion_on_use & ! equipped.dreadfire_vessel & ! talent.firestarter.enabled",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [4]
							{
								["action"] = "mirror_image",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! prev.pyroblast",
								["action"] = "pyroblast",
							}, -- [6]
						},
						["combustion_cooldowns"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up",
								["action"] = "berserking",
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up",
								["action"] = "time_warp",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "gladiators_badge",
								["effect_name"] = "gladiators_badge",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [13]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [14]
						},
						["active_talents"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & buff.combustion.down & ( variable.time_to_combustion > cooldown.living_bomb.duration || variable.time_to_combustion <= 0 )",
								["action"] = "living_bomb",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.remains > travel_time || ( cooldown.meteor.duration < variable.time_to_combustion & ! talent.rune_of_power.enabled ) || talent.rune_of_power.enabled & buff.rune_of_power.up & variable.time_to_combustion > action.meteor.cooldown || fight_remains < variable.time_to_combustion",
								["action"] = "meteor",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.up )",
								["action"] = "dragons_breath",
							}, -- [3]
						},
						["standard_rotation"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.up || buff.firestorm.up )",
								["action"] = "flamestrike",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & runeforge.deaths_fathom.enabled & variable.time_to_combustion < buff.deathborne.remains & active_enemies >= 2",
								["action"] = "fireball",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & buff.hot_streak.remains < action.fireball.execute_time",
								["action"] = "pyroblast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & ( prev_gcd.1.fireball || firestarter.active || action.pyroblast.in_flight )",
								["action"] = "pyroblast",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike & buff.sun_kings_blessing_ready.up & ( cooldown.rune_of_power.remains + action.rune_of_power.execute_time + cast_time > buff.sun_kings_blessing_ready.remains || ! talent.rune_of_power.enabled ) & variable.time_to_combustion + cast_time > buff.sun_kings_blessing_ready.remains & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
								["description"] = "Try to get SKB procs inside RoP phases or Combustion phases when possible.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & ( cooldown.rune_of_power.remains + action.rune_of_power.execute_time + cast_time > buff.sun_kings_blessing_ready.remains || ! talent.rune_of_power.enabled ) & variable.time_to_combustion + cast_time > buff.sun_kings_blessing_ready.remains & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & searing_touch.active",
								["action"] = "pyroblast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & cast_time < buff.pyroclasm.remains & ( ! runeforge.sun_kings_blessing.enabled || buff.pyroclasm.remains < action.fireball.cast_time + cast_time * buff.pyroclasm.react )",
								["action"] = "pyroblast",
							}, -- [9]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! firestarter.active & ! variable.fire_blast_pooling & buff.sun_kings_blessing_ready.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & active_enemies < variable.hot_streak_flamestrike",
								["action"] = "pyroblast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.phoenix_pooling & ( ! talent.from_the_ashes.enabled || active_enemies > 1 ) & ( active_dot.ignite < 2 || active_enemies >= variable.hard_cast_flamestrike || active_enemies >= variable.hot_streak_flamestrike )",
								["action"] = "phoenix_flames",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "dragons_breath",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "searing_touch.active",
								["action"] = "scorch",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana & target.within10",
								["action"] = "arcane_explosion",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
								["action"] = "flamestrike",
								["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
							}, -- [17]
							{
								["action"] = "fireball",
								["enabled"] = true,
							}, -- [18]
						},
						["rop_phase"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.up || buff.firestorm.up )",
								["action"] = "flamestrike",
								["description"] = "Delay Combustion for Mirrors of Torment.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & runeforge.deaths_fathom.enabled & variable.time_to_combustion < buff.deathborne.remains & active_enemies >= 2",
								["action"] = "fireball",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike & buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up",
								["action"] = "pyroblast",
							}, -- [6]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & buff.sun_kings_blessing_ready.down & active_enemies < variable.hard_cast_flamestrike & ! firestarter.active & ( ! buff.heating_up.up & ! buff.hot_streak.up & ! prev_off_gcd.fire_blast & ( action.fire_blast.charges >= 2 || ( talent.alexstraszas_fury.enabled & cooldown.dragons_breath.ready ) || searing_touch.active ) )",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "Use one Fire Blast early in RoP if you don't have either Heating Up or Hot Streak yet and either: (a) have more than two already, (b) have Alexstrasza's Fury ready to use, or (c) Searing Touch is active. Don't do this while hard casting Flamestrikes or when Sun King's Blessing is ready.",
							}, -- [7]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & ! firestarter.active & buff.sun_kings_blessing_ready.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
								["description"] = "Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & cast_time < buff.pyroclasm.remains & cast_time < buff.rune_of_power.remains & ( ! runeforge.sun_kings_blessing.enabled || buff.pyroclasm.remains < action.fireball.cast_time + cast_time * buff.pyroclasm.react )",
								["action"] = "pyroblast",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & searing_touch.active & active_enemies < variable.hot_streak_flamestrike",
								["action"] = "pyroblast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.phoenix_pooling & ( active_dot.ignite < 2 || active_enemies >= variable.hard_cast_flamestrike || active_enemies >= variable.hot_streak_flamestrike )",
								["action"] = "phoenix_flames",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "searing_touch.active",
								["action"] = "scorch",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2",
								["action"] = "dragons_breath",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana & target.within10",
								["action"] = "arcane_explosion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
								["action"] = "flamestrike",
								["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
							}, -- [16]
							{
								["action"] = "fireball",
								["enabled"] = true,
							}, -- [17]
						},
					},
					["version"] = 20220618,
					["warnings"] = "WARNING:  The import for 'rop_phase' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 15: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 15: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 16: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\nLine 16: Converted 'trinket.2.X' to 'trinket.t2.X' (3x).\nLine 17: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 25: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted SimC syntax % to Lua division operator (/) (3x).\nLine 30: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 32: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 33: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 35: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 35: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'combustion_cooldowns' required some automated changes.\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'active_talents' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'standard_rotation' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'combustion_phase' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 9: Converted 'conduit.X' to 'conduit.X.enabled' at EOL (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 11: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\n\nImported 7 action lists.\n",
					["profile"] = "## Fire Mage\n## https://github.com/simulationcraft/simc/\n## June 18, 2022\n\n## Changes:\n## - Use fight_remains rather than target.time_to_die for last-second ability usages.\n## - Loosen cast requirements for Combustion (i.e., don't hold it for a fresh Meteor cast).\n## - Enable strict checking on a few forks in the APL to reduce workload.\n## - Adjust a Pyroblast entry that does not model well in-game (sim tested at no significant DPS impact).\n## - Convert all buff.X.react entries to buff.X.up, an almost insignificant DPS gain in sims.\n## - Use hardcoded variables to reduce CPU workload.\n\n## Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/arcane_intellect\n## APL Variable Option: If set to a non-zero value, the Combustion action and cooldowns that are constrained to only be used when Combustion is up will not be used during the simulation.\n# actions.precombat+=/variable,name=disable_combustion,op=reset\n## APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.\n# actions.precombat+=/variable,name=firestarter_combustion,default=-1,value=!talent.pyroclasm,if=variable.firestarter_combustion<0\n## APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.\n# actions.precombat+=/variable,name=hot_streak_flamestrike,if=variable.hot_streak_flamestrike=0,value=2*talent.flame_patch+4*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.\n# actions.precombat+=/variable,name=hard_cast_flamestrike,if=variable.hard_cast_flamestrike=0,value=3*talent.flame_patch+6*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.\n# actions.precombat+=/variable,name=combustion_flamestrike,if=variable.combustion_flamestrike=0,value=3*talent.flame_patch+6*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.\n# actions.precombat+=/variable,name=arcane_explosion,if=variable.arcane_explosion=0,value=99*talent.flame_patch+2*!talent.flame_patch\n## APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.\n# actions.precombat+=/variable,name=arcane_explosion_mana,default=40,op=reset\n## APL Variable Option: The number of targets at which Shifting Power can used during Combustion.\n# actions.precombat+=/variable,name=combustion_shifting_power,if=variable.combustion_shifting_power=0,value=variable.combustion_flamestrike\n## APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.\n# actions.precombat+=/variable,name=combustion_cast_remains,default=0.7,op=reset\n## APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.\n# actions.precombat+=/variable,name=overpool_fire_blasts,default=0,op=reset\n## APL Variable Option: How long before Combustion should Empyreal Ordnance be used?\n# actions.precombat+=/variable,name=empyreal_ordnance_delay,default=18,op=reset\n## APL Variable Option: How much delay should be inserted after consuming an SKB proc before spending a Hot Streak? The APL will always delay long enough to prevent the SKB stack from being wasted.\n# actions.precombat+=/variable,name=skb_delay,default=-1,value=0.1,if=variable.skb_delay<0\n## If Combustion is disabled, schedule the first Combustion far after the fight ends.\n# actions.precombat+=/variable,name=time_to_combustion,value=fight_remains+100,if=variable.disable_combustion\n## The duration of a Sun King's Blessing Combustion.\n# actions.precombat+=/variable,name=skb_duration,value=dbc.effect.828420.base_value\n# The number of seconds of Fire Blast recharged by Mirrors of Torment.\n# actions.precombat+=/variable,name=mot_recharge_amount,value=dbc.effect.871274.base_value\n## Whether a usable item used to buff Combustion is equipped.\n# actions.precombat+=/variable,name=combustion_on_use,value=equipped.gladiators_badge||equipped.macabre_sheet_music||equipped.inscrutable_quantum_device||equipped.sunblood_amethyst||equipped.empyreal_ordnance||equipped.flame_of_battle||equipped.wakeners_frond||equipped.instructors_divine_bell||equipped.shadowed_orb_of_torment\n## How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?\n# actions.precombat+=/variable,name=on_use_cutoff,value=20,if=variable.combustion_on_use\n# actions.precombat+=/variable,name=on_use_cutoff,value=25,if=equipped.macabre_sheet_music\n# actions.precombat+=/variable,name=on_use_cutoff,value=20+variable.empyreal_ordnance_delay,if=equipped.empyreal_ordnance\nactions.precombat+=/fleshcraft\nactions.precombat+=/use_item,name=soul_igniter,if=!variable.combustion_on_use&!equipped.dreadfire_vessel&!talent.firestarter\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/mirror_image\nactions.precombat+=/pyroblast,if=!prev.pyroblast\n\n## Executed every time the actor is available.\nactions=counterspell,if=!runeforge.disciplinary_command\n## Newfound Resolve is something that can't be modeled.\n## actions+=/newfound_resolve,use_while_casting=1,if=(buff.combustion.up||buff.sun_kings_blessing_ready.react)&buff.newfound_resolve.down\n## The combustion_timing action list schedules when Combustion will be used and stores the result in variable.time_to_combustion.\n## actions+=/call_action_list,name=combustion_timing\n# Variable that estimates whether Shifting Power will be used before Combustion is ready.\n## actions+=/variable,name=shifting_power_before_combustion,op=set,value=(active_enemies<variable.combustion_shifting_power||active_enemies<variable.combustion_flamestrike||variable.time_to_combustion-action.shifting_power.full_reduction>cooldown.shifting_power.duration)&variable.time_to_combustion-cooldown.shifting_power.remains>action.shifting_power.full_reduction&(cooldown.rune_of_power.remains-cooldown.shifting_power.remains>5||!talent.rune_of_power)\nactions+=/shifting_power,if=buff.combustion.down&action.fire_blast.charges<=1&!(buff.infernal_cascade.up&buff.hot_streak.react)&variable.shifting_power_before_combustion\n# Save Radiant Spark for Combustion, but otherwise use it on cooldown.\nactions+=/radiant_spark,if=buff.combustion.down&(variable.time_to_combustion>cooldown-5)\n# Deathborne should always be used with Combustion. With Death's Fathom, it should be used early so that Deathborne will have more stacks during Combustion.\nactions+=/deathborne,if=buff.combustion.down&buff.rune_of_power.down&variable.time_to_combustion<variable.combustion_precast_time+execute_time+(buff.deathborne.duration-buff.combustion.duration)*runeforge.deaths_fathom\n# Use Mirrors of Torment with Combustion.\nactions+=/mirrors_of_torment,if=variable.time_to_combustion<variable.combustion_precast_time+execute_time&buff.combustion.down\n# Also use Mirrors of Torment in between Combustions as long as Combustion will not have to be delayed much for it.\nactions+=/mirrors_of_torment,if=variable.time_to_combustion>cooldown-30*runeforge.sinful_delight\n# For Venthyr, use a Fire Blast charge during Mirrors of Torment cast to avoid capping charges.\nactions+=/fire_blast,use_while_casting=1,if=action.mirrors_of_torment.executing&full_recharge_time-action.mirrors_of_torment.execute_remains<4&!hot_streak_spells_in_flight&!buff.hot_streak.up\nactions+=/use_item,effect_name=gladiators_badge,if=variable.time_to_combustion>cooldown-5\nactions+=/use_item,name=empyreal_ordnance,if=variable.time_to_combustion<=variable.empyreal_ordnance_delay&variable.time_to_combustion>variable.empyreal_ordnance_delay-5\nactions+=/use_item,name=shadowed_orb_of_torment,if=(variable.time_to_combustion<=variable.combustion_precast_time+2||fight_remains<variable.time_to_combustion)&buff.combustion.down\nactions+=/use_item,name=grim_eclipse,if=variable.time_to_combustion<=8||fight_remains<variable.time_to_combustion\nactions+=/use_item,name=moonlit_prism,if=variable.time_to_combustion<=5||fight_remains<variable.time_to_combustion\nactions+=/use_item,name=glyph_of_assimilation,if=(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=macabre_sheet_music,if=variable.time_to_combustion<=5\n# If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Infernal Cascade is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown.\nactions+=/use_item,name=dreadfire_vessel,if=(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade||variable.combustion_on_use||variable.time_to_combustion>interpolated_fight_remains%%(cooldown+10))\n## New Soul Igniter entry, relies on shared item CD information that is not yet supported.  Replaces the previous line when functional.\nactions+=/use_item,name=soul_igniter,if=(variable.time_to_combustion>=30*(variable.on_use_cutoff>0)||(!trinket.1.is.soul_igniter&trinket.1.usable&trinket.1.cooldown.remains||!trinket.2.is.soul_igniter&trinket.2.usable&trinket.2.cooldown.remains))&(!equipped.dreadfire_vessel||cooldown.dreadfire_vessel.remains>5)\n# Trigger Soul Igniter early with Infernal Cascade or when it was precast.\nactions+=/cancel_buff,name=soul_ignition,if=!conduit.infernal_cascade&time<5||buff.infernal_cascade.stack=buff.infernal_cascade.max_stack\n# Items that do not benefit Combustion should just be used outside of Combustion at some point.\nactions+=/use_item,name=inscrutable_quantum_device,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=flame_of_battle,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=wakeners_frond,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=instructors_divine_bell,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=sunblood_amethyst,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.down\nactions+=/use_items,if=buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0\n# Use Frost Nova to trigger Grisly Icicle.\nactions+=/frost_nova,if=runeforge.grisly_icicle&buff.combustion.down&(variable.time_to_combustion>cooldown||variable.time_to_combustion<variable.combustion_precast_time+execute_time)\n# Get the Disciplinary Command buff up, unless combustion is soon.\nactions+=/counterspell,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+execute_time+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5&!talent.rune_of_power)\nactions+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.remains<cast_time&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion+cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/frost_nova,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\n# Pool as many Fire Blasts as possible for Combustion. Subtract out of the fractional component of the number of Fire Blasts that will naturally recharge during the Combustion phase because pooling anything past that will not grant an extra Fire Blast during Combustion.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=variable.extended_combustion_remains<variable.time_to_combustion&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion+(debuff.mirrors_of_torment.max_stack-1)*variable.mot_recharge_amount*covenant.venthyr*(cooldown.mirrors_of_torment.remains<=variable.time_to_combustion))%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains\nactions+=/call_action_list,name=combustion_phase,if=variable.time_to_combustion<=0||buff.combustion.up||variable.time_to_combustion<variable.combustion_precast_time&cooldown.combustion.remains<variable.combustion_precast_time\nactions+=/rune_of_power,if=buff.combustion.down&buff.rune_of_power.down&!buff.firestorm.react&(variable.time_to_combustion>=buff.rune_of_power.duration&variable.time_to_combustion>action.fire_blast.full_recharge_time||variable.time_to_combustion>fight_remains)&(!runeforge.sun_kings_blessing||active_enemies>=variable.hard_cast_flamestrike||buff.sun_kings_blessing_ready.up||buff.sun_kings_blessing.react>=buff.sun_kings_blessing.max_stack-1||fight_remains<buff.rune_of_power.duration)\n# Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=searing_touch.active&action.fire_blast.full_recharge_time>3*gcd.max,if=!variable.fire_blast_pooling&runeforge.sun_kings_blessing\n# Variable that controls Phoenix Flames usage to ensure its charges are pooled for Combustion. Only use Phoenix Flames outside of Combustion when full charges can be obtained during the next Combustion.\n## actions+=/variable,name=phoenix_pooling,if=active_enemies<variable.combustion_flamestrike,value=variable.time_to_combustion+buff.combustion.duration-5<action.phoenix_flames.full_recharge_time+cooldown.phoenix_flames.duration-action.shifting_power.full_reduction*variable.shifting_power_before_combustion&variable.time_to_combustion<fight_remains||runeforge.sun_kings_blessing||time<5\n# When using Flamestrike in Combustion, save as many charges as possible for Combustion without capping.\n## actions+=/variable,name=phoenix_pooling,if=active_enemies>=variable.combustion_flamestrike,value=variable.time_to_combustion<action.phoenix_flames.full_recharge_time-action.shifting_power.full_reduction*variable.shifting_power_before_combustion&variable.time_to_combustion<fight_remains||runeforge.sun_kings_blessing||time<5\nactions+=/call_action_list,name=rop_phase,strict=1,if=buff.rune_of_power.up&buff.combustion.down&variable.time_to_combustion>0\n# Adjust the variable that controls Fire Blast usage to ensure its charges are also pooled for Rune of Power.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=(!runeforge.sun_kings_blessing||buff.sun_kings_blessing.stack>buff.sun_kings_blessing.max_stack-1)&cooldown.rune_of_power.remains<action.fire_blast.full_recharge_time-action.shifting_power.full_reduction*(variable.shifting_power_before_combustion&cooldown.shifting_power.remains<cooldown.rune_of_power.remains)&cooldown.rune_of_power.remains<fight_remains,if=!variable.fire_blast_pooling&talent.rune_of_power&buff.rune_of_power.down\n# When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Blaster Master.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&variable.time_to_combustion>0&active_enemies>=variable.hard_cast_flamestrike&!firestarter.active&!buff.hot_streak.up&(buff.heating_up.up&action.flamestrike.execute_remains<0.5||charges_fractional>=2)\n# During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Blaster Master, they should be spread out to maintain the Blaster Master buff.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=firestarter.active&variable.time_to_combustion>0&!variable.fire_blast_pooling&(!action.fireball.executing&!action.pyroblast.in_flight&buff.heating_up.react||action.fireball.executing&!buff.hot_streak.react||action.pyroblast.in_flight&buff.heating_up.react&!buff.hot_streak.react)\n# Avoid capping Fire Blast charges while channeling Shifting Power\nactions+=/fire_blast,use_while_casting=1,if=action.shifting_power.executing&full_recharge_time<action.shifting_power.tick_reduction\nactions+=/call_action_list,name=standard_rotation,if=variable.time_to_combustion>0&buff.rune_of_power.down&buff.combustion.down\nactions+=/scorch\n\nactions.active_talents=living_bomb,if=active_enemies>1&buff.combustion.down&(variable.time_to_combustion>cooldown.living_bomb.duration||variable.time_to_combustion<=0)\nactions.active_talents+=/meteor,if=variable.time_to_combustion<=0||buff.combustion.remains>travel_time||(cooldown.meteor.duration<variable.time_to_combustion&!talent.rune_of_power)||talent.rune_of_power&buff.rune_of_power.up&variable.time_to_combustion>action.meteor.cooldown||fight_remains<variable.time_to_combustion\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.up)\n\nactions.combustion_cooldowns=potion\nactions.combustion_cooldowns+=/blood_fury\nactions.combustion_cooldowns+=/berserking,if=buff.combustion.up\nactions.combustion_cooldowns+=/fireblood\nactions.combustion_cooldowns+=/ancestral_call\nactions.combustion_cooldowns+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up\nactions.combustion_cooldowns+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up\nactions.combustion_cooldowns+=/use_item,effect_name=gladiators_badge\nactions.combustion_cooldowns+=/use_item,name=inscrutable_quantum_device\nactions.combustion_cooldowns+=/use_item,name=flame_of_battle\nactions.combustion_cooldowns+=/use_item,name=wakeners_frond\nactions.combustion_cooldowns+=/use_item,name=instructors_divine_bell\nactions.combustion_cooldowns+=/use_item,name=sunblood_amethyst\nactions.combustion_cooldowns+=/use_items\n\n# Estimate how long Combustion will last thanks to Sun King's Blessing to determine how Fire Blasts should be used.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=extended_combustion_remains,value=buff.combustion.remains+buff.combustion.duration*(cooldown.combustion.remains<buff.combustion.remains)\n# Adds the duration of the Sun King's Blessing Combustion to the end of the current Combustion if the cast would start during this Combustion.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=extended_combustion_remains,op=add,value=variable.skb_duration,if=runeforge.sun_kings_blessing&(buff.sun_kings_blessing_ready.up||variable.extended_combustion_remains>gcd.remains+1.5*gcd.max*(buff.sun_kings_blessing.max_stack-buff.sun_kings_blessing.stack))\n# Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.\nactions.combustion_phase+=/call_action_list,name=combustion_cooldowns,strict=1,if=variable.extended_combustion_remains>variable.skb_duration\nactions.combustion_phase+=/call_action_list,name=active_talents\n# If Sun King's Blessing stacks are high, cancel them before Combustion so that the Sun King's Blessing proc can be safely delayed until after Combustion without risk of expiration.\nactions.combustion_phase+=/cancel_buff,name=sun_kings_blessing,if=!set_bonus.tier28_4pc&buff.combustion.down&buff.sun_kings_blessing.stack>2&talent.rune_of_power&cooldown.rune_of_power.remains<20\n# If Combustion is down, precast something before activating it.\nactions.combustion_phase+=/flamestrike,if=buff.combustion.down&cooldown.combustion.remains<cast_time&active_enemies>=variable.combustion_flamestrike\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.pyroclasm.react&buff.pyroclasm.remains>cast_time\nactions.combustion_phase+=/fireball,if=buff.combustion.down&cooldown.combustion.remains<cast_time&!conduit.flame_accretion\nactions.combustion_phase+=/scorch,if=buff.combustion.down&cooldown.combustion.remains<cast_time\n# Combustion should be used when the precast is almost finished.\nactions.combustion_phase+=/combustion,use_off_gcd=1,use_while_casting=1,if=hot_streak_spells_in_flight=0&buff.combustion.down&variable.time_to_combustion<=0&(!runeforge.disciplinary_command||buff.disciplinary_command.up||buff.disciplinary_command_frost.up&talent.rune_of_power&cooldown.buff_disciplinary_command.ready)&(!runeforge.grisly_icicle||debuff.grisly_icicle.up)&(!covenant.necrolord||cooldown.deathborne.remains||buff.deathborne.up)&(!covenant.venthyr||cooldown.mirrors_of_torment.remains)&(action.meteor.in_flight&action.meteor.in_flight_remains<=variable.combustion_cast_remains||action.scorch.executing&action.scorch.execute_remains<variable.combustion_cast_remains||action.fireball.executing&action.fireball.execute_remains<variable.combustion_cast_remains||action.pyroblast.executing&action.pyroblast.execute_remains<variable.combustion_cast_remains||action.flamestrike.executing&action.flamestrike.execute_remains<variable.combustion_cast_remains)\n# Rune of Power can be used in Combustion if it is down, but this should only be done if there is more Combustion time to benefit from than there would be from an SKB Combustion later.\nactions.combustion_phase+=/rune_of_power,if=buff.rune_of_power.down&variable.extended_combustion_remains>variable.skb_duration\n# Without Infernal Cascade, just use Fire Blasts when they won't munch crits and when Firestorm is down.\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!conduit.infernal_cascade&!variable.fire_blast_pooling&(!set_bonus.tier28_4pc||debuff.mirrors_of_torment.down||buff.sun_kings_blessing_ready.down||action.pyroblast.executing)&buff.combustion.up&!buff.firestorm.react&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# With Infernal Cascade, Fire Blast use should be additionally constrained so that it is not be used unless Infernal Cascade is about to expire or there are more than enough Fire Blasts to extend Infernal Cascade to the end of Combustion.\n## actions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=expected_fire_blasts,op=set,value=action.fire_blast.charges_fractional+(variable.extended_combustion_remains-buff.infernal_cascade.duration)%cooldown.fire_blast.duration,if=conduit.infernal_cascade\n## actions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=needed_fire_blasts,op=set,value=ceil(variable.extended_combustion_remains%(buff.infernal_cascade.duration-gcd.max)),if=conduit.infernal_cascade\n# Use Shifting Power during Combustion when there are not enough Fire Blasts available to fully extend infernal cascade and only when Rune of Power is on cooldown.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=use_shifting_power,value=firestarter.remains<variable.extended_combustion_remains&(conduit.infernal_cascade&variable.expected_fire_blasts<variable.needed_fire_blasts)&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.extended_combustion_remains)||active_enemies>=variable.combustion_shifting_power,if=covenant.night_fae\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=conduit.infernal_cascade&!variable.fire_blast_pooling&(!set_bonus.tier28_4pc||debuff.mirrors_of_torment.down||buff.sun_kings_blessing_ready.down||action.pyroblast.executing)&(variable.expected_fire_blasts>=variable.needed_fire_blasts||buff.combustion.remains<gcd.max||variable.extended_combustion_remains<=buff.infernal_cascade.duration||buff.infernal_cascade.stack<2||buff.infernal_cascade.remains<gcd.max||cooldown.shifting_power.ready&variable.use_shifting_power)&buff.combustion.up&(!buff.firestorm.react||buff.infernal_cascade.remains<0.5)&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# Spend Hot Streaks during Combustion at high priority.\nactions.combustion_phase+=/flamestrike,if=(buff.hot_streak.up&active_enemies>=variable.combustion_flamestrike)||(buff.firestorm.up&active_enemies>=variable.combustion_flamestrike-runeforge.firestorm)\n# Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.\nactions.combustion_phase+=/radiant_spark,if=buff.combustion.up&2*buff.hot_streak.react+buff.heating_up.react+hot_streak_spells_in_flight=2\nactions.combustion_phase+=/pyroblast,if=buff.firestorm.up\n## With Sun King's Blessing, there is a brief delay before the Sun King's Blessing ready buff is removed after consuming it. It is beneficial to wait for this delay before spending Hot Streaks to not waste a stack.\n## actions.combustion_phase+=/wait,sec=buff.sun_kings_blessing_ready_expiration_delay.remains,if=buff.hot_streak.react&active_enemies<variable.combustion_flamestrike&buff.sun_kings_blessing_ready_expiration_delay.up\nactions.combustion_phase+=/pyroblast,if=buff.hot_streak.up&buff.combustion.up\nactions.combustion_phase+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.up&active_enemies<variable.combustion_flamestrike&buff.combustion.up\n# Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.\nactions.combustion_phase+=/shifting_power,if=variable.use_shifting_power&buff.combustion.up&!action.fire_blast.charges&action.phoenix_flames.charges<action.phoenix_flames.max_charges\n# If a Sun King's Blessing proc would be used, Rune of Power should be used first if the existing Rune of Power will expire during the cast.\nactions.combustion_phase+=/rune_of_power,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>execute_time+action.flamestrike.cast_time&buff.rune_of_power.remains<action.flamestrike.cast_time&active_enemies>=variable.combustion_flamestrike\nactions.combustion_phase+=/flamestrike,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&active_enemies>=variable.combustion_flamestrike&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.combustion_phase+=/rune_of_power,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>execute_time+action.pyroblast.cast_time&buff.rune_of_power.remains<action.pyroblast.cast_time\nactions.combustion_phase+=/pyroblast,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\n# Pyroclasm procs should be used in Combustion at higher priority than Phoenix Flames and Scorch.\nactions.combustion_phase+=/pyroblast,if=buff.pyroclasm.react&buff.pyroclasm.remains>cast_time&buff.combustion.remains>cast_time&active_enemies<variable.combustion_flamestrike&(!conduit.infernal_cascade||buff.infernal_cascade.remains>execute_time||buff.heating_up.react+hot_streak_spells_in_flight<2)\n# Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.\nactions.combustion_phase+=/phoenix_flames,if=buff.combustion.up&travel_time<buff.combustion.remains&buff.heating_up.react+hot_streak_spells_in_flight<2\nactions.combustion_phase+=/scorch,if=buff.combustion.remains>cast_time\n# If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.\nactions.combustion_phase+=/living_bomb,if=buff.combustion.remains<gcd.max&active_enemies>1\nactions.combustion_phase+=/dragons_breath,if=buff.combustion.remains<gcd.max&buff.combustion.up\n\n## Helper variable that contains the actual estimated time that the next Combustion will be ready.\n## actions.combustion_timing=variable,use_off_gcd=1,use_while_casting=1,name=combustion_ready_time,value=cooldown.combustion.remains*expected_kindling_reduction\n## The cast time of the spell that will be precast into Combustion.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=combustion_precast_time,value=(action.fireball.cast_time*!conduit.flame_accretion+action.scorch.cast_time+conduit.flame_accretion)*(active_enemies<variable.combustion_flamestrike)+action.flamestrike.cast_time*(active_enemies>=variable.combustion_flamestrike)-variable.combustion_cast_remains\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time\n## Delay Combustion for after Firestarter unless variable.firestarter_combustion is set.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=firestarter.remains,if=talent.firestarter&!variable.firestarter_combustion\n## Delay Combustion for Radiant Spark if it will come off cooldown soon.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.radiant_spark.remains,if=covenant.kyrian&cooldown.radiant_spark.remains-10<variable.time_to_combustion\n# Delay Combustion for Mirrors of Torment.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.mirrors_of_torment.remains,if=covenant.venthyr&cooldown.mirrors_of_torment.remains-25<variable.time_to_combustion\n## Delay Combustion for Deathborne.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.deathborne.remains+(buff.deathborne.duration-buff.combustion.duration)*runeforge.deaths_fathom,if=covenant.necrolord&cooldown.deathborne.remains-10<variable.time_to_combustion\n## Delay Combustion for Death's Fathom stacks if there are at least two targets.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.deathborne.remains-buff.combustion.duration,if=runeforge.deaths_fathom&buff.deathborne.up&active_enemies>=2\n## Delay Combustion for the Empyreal Ordnance buff if the player is using that trinket.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=variable.empyreal_ordnance_delay-(cooldown.empyreal_ordnance.duration-cooldown.empyreal_ordnance.remains)*!cooldown.empyreal_ordnance.ready,if=equipped.empyreal_ordnance\n## Delay Combustion for Gladiators Badge, unless it would be delayed longer than 20 seconds.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.gladiators_badge_345228.remains,if=equipped.gladiators_badge&cooldown.gladiators_badge_345228.remains-20<variable.time_to_combustion\n## Delay Combustion until Combustion expires if it's up.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.combustion.remains\n## Delay Combustion until RoP expires if it's up.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.rune_of_power.remains,if=talent.rune_of_power&buff.combustion.down\n## Delay Combustion for an extra Rune of Power if the Rune of Power would come off cooldown at least 5 seconds before Combustion would.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.rune_of_power.remains+buff.rune_of_power.duration,if=talent.rune_of_power&buff.combustion.down&cooldown.rune_of_power.remains+5<variable.time_to_combustion\n## Delay Combustion if Disciplinary Command would not be ready for it yet.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.buff_disciplinary_command.remains,if=runeforge.disciplinary_command&buff.disciplinary_command.down\n## Raid Events: Delay Combustion for add spawns of 3 or more adds that will last longer than 15 seconds. These values aren't necessarily optimal in all cases.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=raid_event.adds.in,if=raid_event.adds.exists&raid_event.adds.count>=3&raid_event.adds.duration>15\n## Raid Events: Always use Combustion with vulnerability raid events, override any delays listed above to make sure it gets used here.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=raid_event.vulnerable.in*!raid_event.vulnerable.up,if=raid_event.vulnerable.exists&variable.combustion_ready_time<raid_event.vulnerable.in\n## Use the next Combustion on cooldown if it would not be expected to delay the scheduled one or the scheduled one would happen less than 20 seconds before the fight ends.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time,if=variable.combustion_ready_time+cooldown.combustion.duration*(1-(0.6+0.2*talent.firestarter)*talent.kindling)<=variable.time_to_combustion||variable.time_to_combustion>fight_remains-20\n\nactions.rop_phase=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.up||buff.firestorm.up)\nactions.rop_phase+=/fireball,if=buff.deathborne.up&runeforge.deaths_fathom&variable.time_to_combustion<buff.deathborne.remains&active_enemies>=2\nactions.rop_phase+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike&buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.rop_phase+=/pyroblast,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.rop_phase+=/pyroblast,if=buff.firestorm.up\nactions.rop_phase+=/pyroblast,if=buff.hot_streak.up\n# Use one Fire Blast early in RoP if you don't have either Heating Up or Hot Streak yet and either: (a) have more than two already, (b) have Alexstrasza's Fury ready to use, or (c) Searing Touch is active. Don't do this while hard casting Flamestrikes or when Sun King's Blessing is ready.\nactions.rop_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&buff.sun_kings_blessing_ready.down&active_enemies<variable.hard_cast_flamestrike&!firestarter.active&(!buff.heating_up.up&!buff.hot_streak.up&!prev_off_gcd.fire_blast&(action.fire_blast.charges>=2||(talent.alexstraszas_fury&cooldown.dragons_breath.ready)||searing_touch.active))\n# Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.rop_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&!firestarter.active&buff.sun_kings_blessing_ready.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!runeforge.firestorm)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!runeforge.firestorm))&buff.heating_up.react)||(searing_touch.active&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\nactions.rop_phase+=/call_action_list,name=active_talents\nactions.rop_phase+=/pyroblast,if=buff.pyroclasm.react&cast_time<buff.pyroclasm.remains&cast_time<buff.rune_of_power.remains&(!runeforge.sun_kings_blessing||buff.pyroclasm.remains<action.fireball.cast_time+cast_time*buff.pyroclasm.react)\nactions.rop_phase+=/pyroblast,if=buff.hot_streak.up&searing_touch.active&active_enemies<variable.hot_streak_flamestrike\nactions.rop_phase+=/phoenix_flames,if=!variable.phoenix_pooling&(active_dot.ignite<2||active_enemies>=variable.hard_cast_flamestrike||active_enemies>=variable.hot_streak_flamestrike)\nactions.rop_phase+=/scorch,if=searing_touch.active\nactions.rop_phase+=/dragons_breath,if=active_enemies>2\nactions.rop_phase+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana&target.within10\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.rop_phase+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.rop_phase+=/fireball\n\nactions.standard_rotation=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.up||buff.firestorm.up)\nactions.standard_rotation+=/fireball,if=buff.deathborne.up&runeforge.deaths_fathom&variable.time_to_combustion<buff.deathborne.remains&active_enemies>=2\nactions.standard_rotation+=/pyroblast,if=buff.firestorm.up\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&buff.hot_streak.remains<action.fireball.execute_time\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&(prev_gcd.1.fireball||firestarter.active||action.pyroblast.in_flight)\n# Try to get SKB procs inside RoP phases or Combustion phases when possible.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike&buff.sun_kings_blessing_ready.up&(cooldown.rune_of_power.remains+action.rune_of_power.execute_time+cast_time>buff.sun_kings_blessing_ready.remains||!talent.rune_of_power)&variable.time_to_combustion+cast_time>buff.sun_kings_blessing_ready.remains&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.sun_kings_blessing_ready.up&(cooldown.rune_of_power.remains+action.rune_of_power.execute_time+cast_time>buff.sun_kings_blessing_ready.remains||!talent.rune_of_power)&variable.time_to_combustion+cast_time>buff.sun_kings_blessing_ready.remains&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&searing_touch.active\nactions.standard_rotation+=/pyroblast,if=buff.pyroclasm.react&cast_time<buff.pyroclasm.remains&(!runeforge.sun_kings_blessing||buff.pyroclasm.remains<action.fireball.cast_time+cast_time*buff.pyroclasm.react)\n# During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!firestarter.active&!variable.fire_blast_pooling&buff.sun_kings_blessing_ready.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!runeforge.firestorm)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!runeforge.firestorm))&buff.heating_up.react)||(searing_touch.active&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&active_enemies<variable.hot_streak_flamestrike\nactions.standard_rotation+=/phoenix_flames,if=!variable.phoenix_pooling&(!talent.from_the_ashes||active_enemies>1)&(active_dot.ignite<2||active_enemies>=variable.hard_cast_flamestrike||active_enemies>=variable.hot_streak_flamestrike)\nactions.standard_rotation+=/call_action_list,name=active_talents\nactions.standard_rotation+=/dragons_breath,if=active_enemies>1\nactions.standard_rotation+=/scorch,if=searing_touch.active\nactions.standard_rotation+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana&target.within10\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.standard_rotation+=/fireball",
					["spec"] = 63,
				},
				["Frost DK"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20221211,
					["author"] = "SimC",
					["desc"] = "",
					["lists"] = {
						["single_target"] = {
							{
								["enabled"] = true,
								["description"] = "Single Target Rotation",
								["criteria"] = "variable.rw_buffs || variable.adds_remain",
								["action"] = "remorseless_winter",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runes & buff.killing_machine.up & variable.frostscythe_priority",
								["action"] = "frostscythe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runes & buff.killing_machine.up",
								["action"] = "obliterate",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up & talent.icebreaker.rank = 2",
								["action"] = "howling_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "rune < 4 & runic_power.deficit > 25 & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled",
								["action"] = "horn_of_winter",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ( variable.rp_buffs || runic_power.deficit < 25 || debuff.razorice.stack = 5 & talent.shattering_blade.enabled )",
								["action"] = "frost_strike",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.rime_buffs",
								["action"] = "howling_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ! death_knight.runeforge.razorice & ( debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 )",
								["action"] = "glacial_advance",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runes",
								["action"] = "obliterate",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "rune < 4 & runic_power.deficit > 25 & ( ! talent.breath_of_sindragosa.enabled || cooldown.breath_of_sindragosa.remains > cooldown.horn_of_winter.duration )",
								["action"] = "horn_of_winter",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 20",
								["action"] = "arcane_torrent",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power",
								["action"] = "frost_strike",
							}, -- [12]
						},
						["cold_heart"] = {
							{
								["enabled"] = true,
								["description"] = "Cold Heart",
								["criteria"] = "fight_remains < gcd.max & ( rune < 2 || ! buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack >= 4 || variable.two_hand_check & buff.cold_heart.stack > 8 ) || buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack > 8 || variable.two_hand_check & buff.cold_heart.stack > 10 ) )",
								["action"] = "chains_of_ice",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & buff.cold_heart.stack >= 10 & ( buff.pillar_of_frost.remains < gcd.max * ( 1 + ( talent.frostwyrms_fury.enabled & cooldown.frostwyrms_fury.ready ) ) || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max )",
								["action"] = "chains_of_ice",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.obliteration.enabled & death_knight.runeforge.fallen_crusader & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 15 & ( buff.cold_heart.stack >= 10 & buff.unholy_strength.up || buff.cold_heart.stack >= 13 )",
								["action"] = "chains_of_ice",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.obliteration.enabled & ! death_knight.runeforge.fallen_crusader & buff.cold_heart.stack >= 10 & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 20",
								["action"] = "chains_of_ice",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & ( buff.cold_heart.stack >= 14 & ( buff.unholy_strength.up || buff.chaos_bane.up ) || buff.cold_heart.stack >= 19 || cooldown.pillar_of_frost.remains_expected < 3 & buff.cold_heart.stack >= 14 )",
								["action"] = "chains_of_ice",
							}, -- [5]
						},
						["breath_oblit"] = {
							{
								["enabled"] = true,
								["description"] = "Breath & Obliteration Active Rotation",
								["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
								["action"] = "frostscythe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up",
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up",
								["action"] = "howling_blast",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! buff.killing_machine.up",
								["action"] = "howling_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 25",
								["action"] = "horn_of_winter",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 20",
								["action"] = "arcane_torrent",
							}, -- [6]
						},
						["breath"] = {
							{
								["enabled"] = true,
								["description"] = "Breath Active Rotation",
								["criteria"] = "variable.rw_buffs || variable.adds_remain",
								["action"] = "remorseless_winter",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.rime_buffs & runic_power > ( 45 - talent.rage_of_the_frozen_champion.rank * 8 )",
								["action"] = "howling_blast",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "rune < 2 & runic_power.deficit > 25",
								["action"] = "horn_of_winter",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
								["action"] = "frostscythe",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.frostscythe_priority & runic_power > 45",
								["action"] = "frostscythe",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 40 || buff.pillar_of_frost.up & runic_power.deficit > 15",
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & runic_power < 32 & rune.time_to_2 > runic_power / 16",
								["action"] = "death_and_decay",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runic_power < 32 & rune.time_to_2 > runic_power / 16",
								["action"] = "remorseless_winter",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runic_power < 32 & rune.time_to_2 > runic_power / 16",
								["action"] = "howling_blast",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 25",
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up",
								["action"] = "howling_blast",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "runic_power < 60",
								["action"] = "arcane_torrent",
							}, -- [13]
						},
						["cooldowns"] = {
							{
								["enabled"] = true,
								["description"] = "Cooldowns",
								["action"] = "potion",
								["criteria"] = "variable.cooldown_check || fight_remains < 25",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 6 & ( cooldown.pillar_of_frost.remains_expected < 7 & ( variable.adds_remain || variable.st_planning ) || buff.pillar_of_frost.up ) || boss & fight_remains < 20",
								["action"] = "empower_rune_weapon",
							}, -- [2]
							{
								["enabled"] = true,
								["use_off_gcd"] = 1,
								["action"] = "empower_rune_weapon",
								["criteria"] = "buff.breath_of_sindragosa.up & talent.breath_of_sindragosa.enabled & ! buff.empower_rune_weapon.up & ( runic_power < 70 & rune < 3 || time < 10 )",
							}, -- [3]
							{
								["enabled"] = true,
								["use_off_gcd"] = 1,
								["action"] = "empower_rune_weapon",
								["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 5 & ( cooldown.pillar_of_frost.remains_expected < 7 || buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled )",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & ( variable.adds_remain || variable.st_planning ) || fight_remains < 12",
								["action"] = "abomination_limb",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
								["action"] = "abomination_limb",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning )",
								["action"] = "abomination_limb",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & ( ! death_and_decay.ticking & talent.cleaving_strikes.enabled || ! talent.cleaving_strikes.enabled || active_enemies <= 5 )",
								["action"] = "chill_streak",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning ) & ( buff.empower_rune_weapon.up || cooldown.empower_rune_weapon.remains ) || fight_remains < 12",
								["action"] = "pillar_of_frost",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning ) & ( ! talent.icecap.enabled & ( runic_power > 70 || cooldown.breath_of_sindragosa.remains > 40 ) || talent.icecap.enabled & ( cooldown.breath_of_sindragosa.remains > 10 || buff.breath_of_sindragosa.up ) )",
								["action"] = "pillar_of_frost",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.icecap.enabled & ! talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
								["action"] = "pillar_of_frost",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! buff.breath_of_sindragosa.up & runic_power > 60 & ( variable.adds_remain || variable.st_planning ) || fight_remains < 30",
								["action"] = "breath_of_sindragosa",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.remains < gcd.max * 2 & buff.pillar_of_frost.up & ! talent.obliteration.enabled || ! talent.pillar_of_frost.enabled ) & ( ! raid_event.adds.exists || ( raid_event.adds.in > 15 + raid_event.adds.duration || talent.absolute_zero.enabled & raid_event.adds.in > 15 + raid_event.adds.duration ) ) || fight_remains < 3",
								["action"] = "frostwyrms_fury",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || raid_event.adds.exists & raid_event.adds.up & raid_event.adds.in > cooldown.pillar_of_frost.remains_expected - raid_event.adds.in - raid_event.adds.duration ) & ( buff.pillar_of_frost.remains < gcd.max * 2 || raid_event.adds.exists & raid_event.adds.remains < gcd.max * 2 )",
								["action"] = "frostwyrms_fury",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! variable.two_hand_check || ! buff.pillar_of_frost.up & variable.two_hand_check & cooldown.pillar_of_frost.remains || ! talent.pillar_of_frost.enabled ) & ( ( buff.pillar_of_frost.remains < gcd.max || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max ) & ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled ) )",
								["action"] = "frostwyrms_fury",
							}, -- [15]
							{
								["action"] = "raise_dead",
								["enabled"] = true,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "fight_remains > 5 & target.time_to_pct_35 < 5 & active_enemies <= 2 & ( buff.breath_of_sindragosa.up & runic_power > 40 || ! buff.breath_of_sindragosa.up & ! talent.obliteration.enabled || talent.obliteration.enabled & ! buff.pillar_of_frost.up )",
								["action"] = "soul_reaper",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "! talent.glacial_advance.enabled & ! buff.breath_of_sindragosa.up & pet.ghoul.remains < gcd.max * 2 & active_enemies > 3",
								["action"] = "sacrificial_pact",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "! death_and_decay.ticking & variable.adds_remain & ( buff.pillar_of_frost.up & buff.pillar_of_frost.remains > 5 || ! buff.pillar_of_frost.up ) & ( active_enemies > 5 || talent.cleaving_strikes.enabled & active_enemies >= 2 )",
								["action"] = "any_dnd",
							}, -- [19]
						},
						["racials"] = {
							{
								["enabled"] = true,
								["description"] = "Racial Abilities",
								["criteria"] = "variable.cooldown_check",
								["action"] = "blood_fury",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.cooldown_check",
								["action"] = "berserking",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.cooldown_check",
								["action"] = "arcane_pulse",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.cooldown_check",
								["action"] = "lights_judgment",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.cooldown_check",
								["action"] = "ancestral_call",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.cooldown_check",
								["action"] = "fireblood",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & buff.unholy_strength.up",
								["action"] = "bag_of_tricks",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max * 3 || buff.pillar_of_frost.remains < gcd.max * 3 )",
								["action"] = "bag_of_tricks",
							}, -- [8]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Interrupt",
								["action"] = "mind_freeze",
							}, -- [1]
							{
								["action"] = "strangulate",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
								["var_name"] = "st_planning",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
								["var_name"] = "adds_remain",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.rime.up & ( talent.rage_of_the_frozen_champion.enabled || talent.avalanche.enabled || talent.icebreaker.enabled )",
								["var_name"] = "rime_buffs",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.unleashed_frenzy.enabled & ( buff.unleashed_frenzy.remains < gcd.max * 3 || buff.unleashed_frenzy.stack < 3 ) || talent.icy_talons.enabled & ( buff.icy_talons.remains < gcd.max * 3 || buff.icy_talons.stack < 3 )",
								["var_name"] = "rp_buffs",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled",
								["var_name"] = "cooldown_check",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.frostscythe.enabled & ( buff.killing_machine.up || active_enemies >= 3 ) & ( ! talent.improved_obliterate.enabled & ! talent.frigid_executioner.enabled & ! talent.frostreaper.enabled & ! talent.might_of_the_frozen_wastes.enabled || ! talent.cleaving_strikes.enabled || talent.cleaving_strikes.enabled & ( active_enemies > 6 || ! death_and_decay.ticking & active_enemies > 3 ) )",
								["var_name"] = "frostscythe_priority",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.",
								["var_name"] = "oblit_pooling_time",
								["value"] = "( ( cooldown.pillar_of_frost.remains_expected + 1 ) / gcd.max ) / ( ( rune + 3 ) * ( runic_power + 5 ) ) * 100",
								["action"] = "variable",
								["value_else"] = "gcd.max * 2",
								["criteria"] = "runic_power < 35 & rune < 2 & cooldown.pillar_of_frost.remains_expected < 10",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "breath_pooling_time",
								["value"] = "( ( cooldown.breath_of_sindragosa.remains + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( runic_power + 20 ) ) * 100",
								["value_else"] = "gcd.max * 2",
								["criteria"] = "runic_power.deficit > 10 & cooldown.breath_of_sindragosa.remains < 10",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.obliteration.enabled & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
								["var_name"] = "pooling_runes",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.breath_of_sindragosa.enabled & cooldown.breath_of_sindragosa.remains < variable.breath_pooling_time || talent.obliteration.enabled & runic_power < 35 & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
								["var_name"] = "pooling_runic_power",
							}, -- [12]
							{
								["enabled"] = true,
								["description"] = "Maintain Frost Fever, Icy Talons and Unleashed Frenzy",
								["criteria"] = "! dot.frost_fever.ticking & active_enemies >= 2 & ( ! talent.obliteration.enabled || talent.obliteration.enabled & ( ! buff.pillar_of_frost.up || buff.pillar_of_frost.up & ! buff.killing_machine.up ) )",
								["action"] = "howling_blast",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
								["action"] = "glacial_advance",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
								["action"] = "glacial_advance",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
								["action"] = "glacial_advance",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
								["action"] = "frost_strike",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
								["action"] = "frost_strike",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
								["action"] = "frost_strike",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & variable.rw_buffs",
								["action"] = "remorseless_winter",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "talent.obliteration.enabled & active_enemies >= 3 & variable.adds_remain",
								["action"] = "remorseless_winter",
							}, -- [21]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Choose Action list to run",
								["list_name"] = "trinkets",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldowns",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "racials",
							}, -- [24]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.none",
								["list_name"] = "covenants",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.cold_heart.enabled & ( ! buff.killing_machine.up || talent.breath_of_sindragosa.enabled ) & ( ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled & ! talent.avalanche.enabled ) || fight_remains <= gcd.max )",
								["list_name"] = "cold_heart",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "buff.breath_of_sindragosa.up & talent.obliteration.enabled & buff.pillar_of_frost.up",
								["list_name"] = "breath_oblit",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "buff.breath_of_sindragosa.up & ( ! talent.obliteration.enabled || talent.obliteration.enabled & ! buff.pillar_of_frost.up )",
								["list_name"] = "breath",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "talent.obliteration.enabled & buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up",
								["list_name"] = "obliteration",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "active_enemies >= 2",
								["list_name"] = "aoe",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "active_enemies = 1",
								["list_name"] = "single_target",
							}, -- [31]
						},
						["precombat"] = {
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_1_sync",
								["value"] = "1",
								["value_else"] = "0.5",
								["criteria"] = "trinket.t1.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t1.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t1.cooldown.duration = 0 ) )",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_2_sync",
								["value"] = "1",
								["value_else"] = "0.5",
								["criteria"] = "trinket.t2.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t2.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t2.cooldown.duration = 0 ) )",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
								["var_name"] = "trinket_1_buffs",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
								["var_name"] = "trinket_2_buffs",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "setif",
								["action"] = "variable",
								["var_name"] = "trinket_priority",
								["value"] = "2",
								["value_else"] = "1",
								["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.gathering_storm.enabled || talent.everfrost.enabled",
								["var_name"] = "rw_buffs",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "main_hand.2h & talent.might_of_the_frozen_wastes.enabled",
								["var_name"] = "two_hand_check",
							}, -- [8]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["description"] = "AoE Action List",
								["action"] = "remorseless_winter",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up || ! dot.frost_fever.ticking",
								["action"] = "howling_blast",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & variable.rp_buffs",
								["action"] = "glacial_advance",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up & talent.cleaving_strikes.enabled & death_and_decay.ticking & ! variable.frostscythe_priority",
								["action"] = "obliterate",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power",
								["action"] = "glacial_advance",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.frostscythe_priority",
								["action"] = "frostscythe",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.frostscythe_priority",
								["action"] = "obliterate",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ! talent.glacial_advance.enabled",
								["action"] = "frost_strike",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "rune < 2 & runic_power.deficit > 25",
								["action"] = "horn_of_winter",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 25",
								["action"] = "arcane_torrent",
							}, -- [10]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "gavel_of_the_first_arbiter",
								["action"] = "gavel_of_the_first_arbiter",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["slot"] = "trinket1",
								["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.",
								["criteria"] = "( buff.pillar_of_frost.up || buff.breath_of_sindragosa.up ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( buff.pillar_of_frost.up || buff.breath_of_sindragosa.up ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "trinket1",
								["slot"] = "trinket1",
								["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
								["criteria"] = "( ! trinket.t1.has_use_buff & ( trinket.t2.cooldown.remains || ! trinket.t2.has_use_buff ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! trinket.t2.has_use_buff & ( trinket.t1.cooldown.remains || ! trinket.t1.has_use_buff ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [5]
						},
						["covenants"] = {
							{
								["enabled"] = true,
								["description"] = "Covenant Abilities",
								["criteria"] = "! death_and_decay.ticking & ( variable.rw_buffs & cooldown.remorseless_winter.remains || ! variable.rw_buffs ) & ( ! talent.obliteration.enabled || talent.obliteration.enabled & active_enemies >= 2 & cooldown.pillar_of_frost.remains || active_enemies = 1 ) & ( variable.st_planning || variable.adds_remain )",
								["action"] = "deaths_due",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runic_power.deficit > 13 & cooldown.pillar_of_frost.remains < 3 & ! talent.breath_of_sindragosa.enabled & variable.st_planning",
								["action"] = "swarming_mist",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! talent.breath_of_sindragosa.enabled & variable.adds_remain",
								["action"] = "swarming_mist",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.breath_of_sindragosa.enabled & ( buff.breath_of_sindragosa.up & ( variable.st_planning & runic_power.deficit > 40 || variable.adds_remain & runic_power.deficit > 60 || variable.adds_remain & raid_event.adds.remains < 9 & raid_event.adds.exists ) || ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains )",
								["action"] = "swarming_mist",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.pillar_of_frost.remains < gcd.max * 2 & variable.st_planning & ( talent.breath_of_sindragosa.enabled & runic_power > 65 & cooldown.breath_of_sindragosa.remains < 2 || ! talent.breath_of_sindragosa.enabled )",
								["action"] = "abomination_limb",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain",
								["action"] = "abomination_limb",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.st_planning & ( cooldown.pillar_of_frost.remains < 3 || talent.icecap.enabled )",
								["action"] = "shackle_the_unworthy",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.adds_remain",
								["action"] = "shackle_the_unworthy",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! buff.pillar_of_frost.up & ( soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up )",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [9]
						},
						["obliteration"] = {
							{
								["enabled"] = true,
								["description"] = "Obliteration Active Rotation",
								["criteria"] = "active_enemies > 3",
								["action"] = "remorseless_winter",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
								["action"] = "frostscythe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! dot.frost_fever.ticking & ! buff.killing_machine.react",
								["action"] = "howling_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! buff.killing_machine.react & ( variable.rp_buffs || debuff.razorice.stack = 5 & talent.shattering_blade.enabled ) & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
								["action"] = "frost_strike",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up & buff.killing_machine.up",
								["action"] = "howling_blast",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & variable.rp_buffs & ! buff.killing_machine.up & active_enemies >= 2",
								["action"] = "glacial_advance",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! buff.killing_machine.up & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
								["action"] = "frost_strike",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! buff.killing_machine.up & runic_power < 25",
								["action"] = "howling_blast",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "rune < 1 & runic_power < 25",
								["action"] = "arcane_torrent",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & active_enemies >= 2",
								["action"] = "glacial_advance",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
								["action"] = "frost_strike",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.rime.up",
								["action"] = "howling_blast",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "obliterate",
								["cycle_targets"] = 1,
							}, -- [14]
						},
					},
					["version"] = 20221211,
					["warnings"] = "The import for 'single_target' required some automated changes.\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 6: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\n\nThe import for 'cold_heart' required some automated changes.\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 2: Converted 'talent.frostwyrms_fury' to 'talent.frostwyrms_fury.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'breath' required some automated changes.\nLine 8: Converted operations in '!death_and_decay.ticking&runic_power<32&rune.time_to_2>runic_power%16' to '!death_and_decay.ticking&runic_power<32&rune.time_to_2>runic_power/16'.\nLine 9: Converted operations in 'runic_power<32&rune.time_to_2>runic_power%16' to 'runic_power<32&rune.time_to_2>runic_power/16'.\nLine 10: Converted operations in 'runic_power<32&rune.time_to_2>runic_power%16' to 'runic_power<32&rune.time_to_2>runic_power/16'.\n\nThe import for 'obliteration' required some automated changes.\nLine 5: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 5: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 12: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 5: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 5: Converted 'talent.icebreaker' to 'talent.icebreaker.enabled' (1x).\nLine 6: Converted 'talent.unleashed_frenzy' to 'talent.unleashed_frenzy.enabled' (1x).\nLine 6: Converted 'talent.icy_talons' to 'talent.icy_talons.enabled' (1x).\nLine 7: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 7: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 7: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 7: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 8: Converted 'talent.frostscythe' to 'talent.frostscythe.enabled' (1x).\nLine 8: Converted 'talent.improved_obliterate' to 'talent.improved_obliterate.enabled' (1x).\nLine 8: Converted 'talent.frigid_executioner' to 'talent.frigid_executioner.enabled' (1x).\nLine 8: Converted 'talent.frostreaper' to 'talent.frostreaper.enabled' (1x).\nLine 8: Converted 'talent.might_of_the_frozen_wastes' to 'talent.might_of_the_frozen_wastes.enabled' (1x).\nLine 8: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 8: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 9: Converted operations in '((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+3)*(runic_power+5))*100' to '((cooldown.pillar_of_frost.remains_expected+1)/gcd.max)/((rune+3)*(runic_power+5))*100'.\nLine 10: Converted operations in '((cooldown.breath_of_sindragosa.remains+1)%gcd.max)%((rune+1)*(runic_power+20))*100' to '((cooldown.breath_of_sindragosa.remains+1)/gcd.max)/((rune+1)*(runic_power+20))*100'.\nLine 11: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 12: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 12: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 13: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 13: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 14: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 14: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 15: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 16: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 16: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 17: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 17: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 18: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 19: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 19: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 20: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 20: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 21: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 26: Converted 'talent.cold_heart' to 'talent.cold_heart.enabled' (1x).\nLine 26: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 26: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 26: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 27: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 28: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 28: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 29: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted operations in 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t1.cooldown.duration=0))' to 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t1.cooldown.duration=0))'.\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t2.cooldown.duration=0))' to 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t2.cooldown.duration=0))'.\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 7: Converted 'talent.gathering_storm' to 'talent.gathering_storm.enabled' (1x).\nLine 7: Converted 'talent.everfrost' to 'talent.everfrost.enabled' (1x).\nLine 8: Converted 'talent.might_of_the_frozen_wastes' to 'talent.might_of_the_frozen_wastes.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 8: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 10: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 11: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 11: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 13: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 13: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 13: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 13: Converted 'talent.absolute_zero' to 'talent.absolute_zero.enabled' (1x).\nLine 14: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 15: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 15: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 17: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 17: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 18: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 19: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\n\nThe import for 'covenants' required some automated changes.\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 9: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 9: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nImported 12 action lists.\n",
					["spec"] = 251,
					["profile"] = "actions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.1.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.2.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=rw_buffs,value=talent.gathering_storm||talent.everfrost\nactions.precombat+=/variable,name=two_hand_check,value=main_hand.2h&talent.might_of_the_frozen_wastes\n\n# Interrupt\nactions+=/mind_freeze\nactions+=/strangulate\nactions+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions+=/variable,name=rime_buffs,value=buff.rime.up&(talent.rage_of_the_frozen_champion||talent.avalanche||talent.icebreaker)\nactions+=/variable,name=rp_buffs,value=talent.unleashed_frenzy&(buff.unleashed_frenzy.remains<gcd*3||buff.unleashed_frenzy.stack<3)||talent.icy_talons&(buff.icy_talons.remains<gcd*3||buff.icy_talons.stack<3)\nactions+=/variable,name=cooldown_check,value=talent.pillar_of_frost&buff.pillar_of_frost.up||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon\nactions+=/variable,name=frostscythe_priority,value=talent.frostscythe&(buff.killing_machine.up||active_enemies>=3)&(!talent.improved_obliterate&!talent.frigid_executioner&!talent.frostreaper&!talent.might_of_the_frozen_wastes||!talent.cleaving_strikes||talent.cleaving_strikes&(active_enemies>6||!death_and_decay.ticking&active_enemies>3))\n# Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.\nactions+=/variable,name=oblit_pooling_time,op=setif,value=((cooldown.pillar_of_frost.remains_expected+1)%gcd)%((rune+3)*(runic_power+5))*100,value_else=gcd*2,condition=runic_power<35&rune<2&cooldown.pillar_of_frost.remains_expected<10\nactions+=/variable,name=breath_pooling_time,op=setif,value=((cooldown.breath_of_sindragosa.remains+1)%gcd)%((rune+1)*(runic_power+20))*100,value_else=gcd*2,condition=runic_power.deficit>10&cooldown.breath_of_sindragosa.remains<10\nactions+=/variable,name=pooling_runes,value=talent.obliteration&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\nactions+=/variable,name=pooling_runic_power,value=talent.breath_of_sindragosa&cooldown.breath_of_sindragosa.remains<variable.breath_pooling_time||talent.obliteration&runic_power<35&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\n# Maintain Frost Fever, Icy Talons and Unleashed Frenzy\nactions+=/howling_blast,if=!dot.frost_fever.ticking&active_enemies>=2&(!talent.obliteration||talent.obliteration&(!buff.pillar_of_frost.up||buff.pillar_of_frost.up&!buff.killing_machine.up))\nactions+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions+=/frost_strike,if=active_enemies=1&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions+=/remorseless_winter,if=!talent.breath_of_sindragosa&!talent.obliteration&variable.rw_buffs\nactions+=/remorseless_winter,if=talent.obliteration&active_enemies>=3&variable.adds_remain\n# Choose Action list to run\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=covenants,strict=1,if=!covenant.none\nactions+=/call_action_list,name=cold_heart,if=talent.cold_heart&(!buff.killing_machine.up||talent.breath_of_sindragosa)&((debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance&!talent.avalanche)||fight_remains<=gcd)\nactions+=/run_action_list,name=breath_oblit,if=buff.breath_of_sindragosa.up&talent.obliteration&buff.pillar_of_frost.up\nactions+=/run_action_list,name=breath,if=buff.breath_of_sindragosa.up&(!talent.obliteration||talent.obliteration&!buff.pillar_of_frost.up)\nactions+=/run_action_list,name=obliteration,if=talent.obliteration&buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up\nactions+=/call_action_list,name=aoe,if=active_enemies>=2\nactions+=/call_action_list,name=single_target,if=active_enemies=1\n\n# AoE Action List\nactions.aoe=remorseless_winter\nactions.aoe+=/howling_blast,if=buff.rime.up||!dot.frost_fever.ticking\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power&variable.rp_buffs\nactions.aoe+=/obliterate,if=buff.killing_machine.up&talent.cleaving_strikes&death_and_decay.ticking&!variable.frostscythe_priority\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power\nactions.aoe+=/frostscythe,if=variable.frostscythe_priority\nactions.aoe+=/obliterate,if=!variable.frostscythe_priority\nactions.aoe+=/frost_strike,if=!variable.pooling_runic_power&!talent.glacial_advance\nactions.aoe+=/horn_of_winter,if=rune<2&runic_power.deficit>25\nactions.aoe+=/arcane_torrent,if=runic_power.deficit>25\n\n# Breath Active Rotation\nactions.breath=remorseless_winter,if=variable.rw_buffs||variable.adds_remain\nactions.breath+=/howling_blast,if=variable.rime_buffs&runic_power>(45-talent.rage_of_the_frozen_champion.rank*8)\nactions.breath+=/horn_of_winter,if=rune<2&runic_power.deficit>25\nactions.breath+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.breath+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.breath+=/frostscythe,if=variable.frostscythe_priority&runic_power>45\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>40||buff.pillar_of_frost.up&runic_power.deficit>15\nactions.breath+=/death_and_decay,if=!death_and_decay.ticking&runic_power<32&rune.time_to_2>runic_power%16\nactions.breath+=/remorseless_winter,if=runic_power<32&rune.time_to_2>runic_power%16\nactions.breath+=/howling_blast,if=runic_power<32&rune.time_to_2>runic_power%16\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>25\nactions.breath+=/howling_blast,if=buff.rime.up\nactions.breath+=/arcane_torrent,if=runic_power<60\n\n# Breath & Obliteration Active Rotation\nactions.breath_oblit=frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.breath_oblit+=/obliterate,cycle_targets=1,if=buff.killing_machine.up\nactions.breath_oblit+=/howling_blast,if=buff.rime.up\nactions.breath_oblit+=/howling_blast,if=!buff.killing_machine.up\nactions.breath_oblit+=/horn_of_winter,if=runic_power.deficit>25\nactions.breath_oblit+=/arcane_torrent,if=runic_power.deficit>20\n\n# Cold Heart\nactions.cold_heart=chains_of_ice,if=fight_remains<gcd&(rune<2||!buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>=4||variable.two_hand_check&buff.cold_heart.stack>8)||buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>8||variable.two_hand_check&buff.cold_heart.stack>10))\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&buff.pillar_of_frost.up&buff.cold_heart.stack>=10&(buff.pillar_of_frost.remains<gcd*(1+(talent.frostwyrms_fury&cooldown.frostwyrms_fury.ready))||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&death_knight.runeforge.fallen_crusader&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>15&(buff.cold_heart.stack>=10&buff.unholy_strength.up||buff.cold_heart.stack>=13)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&!death_knight.runeforge.fallen_crusader&buff.cold_heart.stack>=10&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>20\nactions.cold_heart+=/chains_of_ice,if=talent.obliteration&!buff.pillar_of_frost.up&(buff.cold_heart.stack>=14&(buff.unholy_strength.up||buff.chaos_bane.up)||buff.cold_heart.stack>=19||cooldown.pillar_of_frost.remains_expected<3&buff.cold_heart.stack>=14)\n\n# Cooldowns\nactions.cooldowns=potion,if=variable.cooldown_check||fight_remains<25\nactions.cooldowns+=/empower_rune_weapon,if=talent.obliteration&!buff.empower_rune_weapon.up&rune<6&(cooldown.pillar_of_frost.remains_expected<7&(variable.adds_remain||variable.st_planning)||buff.pillar_of_frost.up)||boss&fight_remains<20\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=buff.breath_of_sindragosa.up&talent.breath_of_sindragosa&!buff.empower_rune_weapon.up&(runic_power<70&rune<3||time<10)\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=!talent.breath_of_sindragosa&!talent.obliteration&!buff.empower_rune_weapon.up&rune<5&(cooldown.pillar_of_frost.remains_expected<7||buff.pillar_of_frost.up||!talent.pillar_of_frost)\nactions.cooldowns+=/abomination_limb,if=talent.obliteration&!buff.pillar_of_frost.up&(variable.adds_remain||variable.st_planning)||fight_remains<12\nactions.cooldowns+=/abomination_limb,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/abomination_limb,if=!talent.breath_of_sindragosa&!talent.obliteration&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/chill_streak,if=active_enemies>=2&(!death_and_decay.ticking&talent.cleaving_strikes||!talent.cleaving_strikes||active_enemies<=5)\nactions.cooldowns+=/pillar_of_frost,if=talent.obliteration&(variable.adds_remain||variable.st_planning)&(buff.empower_rune_weapon.up||cooldown.empower_rune_weapon.remains)||fight_remains<12\nactions.cooldowns+=/pillar_of_frost,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)&(!talent.icecap&(runic_power>70||cooldown.breath_of_sindragosa.remains>40)||talent.icecap&(cooldown.breath_of_sindragosa.remains>10||buff.breath_of_sindragosa.up))\nactions.cooldowns+=/pillar_of_frost,if=talent.icecap&!talent.obliteration&!talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/breath_of_sindragosa,if=!buff.breath_of_sindragosa.up&runic_power>60&(variable.adds_remain||variable.st_planning)||fight_remains<30\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies=1&(talent.pillar_of_frost&buff.pillar_of_frost.remains<gcd*2&buff.pillar_of_frost.up&!talent.obliteration||!talent.pillar_of_frost)&(!raid_event.adds.exists||(raid_event.adds.in>15+raid_event.adds.duration||talent.absolute_zero&raid_event.adds.in>15+raid_event.adds.duration))||fight_remains<3\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies>=2&(talent.pillar_of_frost&buff.pillar_of_frost.up||raid_event.adds.exists&raid_event.adds.up&raid_event.adds.in>cooldown.pillar_of_frost.remains_expected-raid_event.adds.in-raid_event.adds.duration)&(buff.pillar_of_frost.remains<gcd*2||raid_event.adds.exists&raid_event.adds.remains<gcd*2)\nactions.cooldowns+=/frostwyrms_fury,if=talent.obliteration&(talent.pillar_of_frost&buff.pillar_of_frost.up&!variable.two_hand_check||!buff.pillar_of_frost.up&variable.two_hand_check&cooldown.pillar_of_frost.remains||!talent.pillar_of_frost)&((buff.pillar_of_frost.remains<gcd||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)&(debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance))\nactions.cooldowns+=/raise_dead\nactions.cooldowns+=/soul_reaper,if=fight_remains>5&target.time_to_pct_35<5&active_enemies<=2&(buff.breath_of_sindragosa.up&runic_power>40||!buff.breath_of_sindragosa.up&!talent.obliteration||talent.obliteration&!buff.pillar_of_frost.up)\nactions.cooldowns+=/sacrificial_pact,if=!talent.glacial_advance&!buff.breath_of_sindragosa.up&pet.ghoul.remains<gcd*2&active_enemies>3\nactions.cooldowns+=/any_dnd,if=!death_and_decay.ticking&variable.adds_remain&(buff.pillar_of_frost.up&buff.pillar_of_frost.remains>5||!buff.pillar_of_frost.up)&(active_enemies>5||talent.cleaving_strikes&active_enemies>=2)\n\n# Covenant Abilities\nactions.covenants=deaths_due,if=!death_and_decay.ticking&(variable.rw_buffs&cooldown.remorseless_winter.remains||!variable.rw_buffs)&(!talent.obliteration||talent.obliteration&active_enemies>=2&cooldown.pillar_of_frost.remains||active_enemies=1)&(variable.st_planning||variable.adds_remain)\nactions.covenants+=/swarming_mist,if=runic_power.deficit>13&cooldown.pillar_of_frost.remains<3&!talent.breath_of_sindragosa&variable.st_planning\nactions.covenants+=/swarming_mist,if=!talent.breath_of_sindragosa&variable.adds_remain\nactions.covenants+=/swarming_mist,if=talent.breath_of_sindragosa&(buff.breath_of_sindragosa.up&(variable.st_planning&runic_power.deficit>40||variable.adds_remain&runic_power.deficit>60||variable.adds_remain&raid_event.adds.remains<9&raid_event.adds.exists)||!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains)\nactions.covenants+=/abomination_limb,if=cooldown.pillar_of_frost.remains<gcd*2&variable.st_planning&(talent.breath_of_sindragosa&runic_power>65&cooldown.breath_of_sindragosa.remains<2||!talent.breath_of_sindragosa)\nactions.covenants+=/abomination_limb,if=variable.adds_remain\nactions.covenants+=/shackle_the_unworthy,if=variable.st_planning&(cooldown.pillar_of_frost.remains<3||talent.icecap)\nactions.covenants+=/shackle_the_unworthy,if=variable.adds_remain\nactions.covenants+=/fleshcraft,if=!buff.pillar_of_frost.up&(soulbind.pustule_eruption||soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up),interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n\n# Obliteration Active Rotation\nactions.obliteration=remorseless_winter,if=active_enemies>3\nactions.obliteration+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.obliteration+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.obliteration+=/howling_blast,if=!dot.frost_fever.ticking&!buff.killing_machine.react\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.react&(variable.rp_buffs||debuff.razorice.stack=5&talent.shattering_blade)&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up&buff.killing_machine.up\nactions.obliteration+=/glacial_advance,if=!variable.pooling_runic_power&variable.rp_buffs&!buff.killing_machine.up&active_enemies>=2\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.up&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up&runic_power<25\nactions.obliteration+=/arcane_torrent,if=rune<1&runic_power<25\nactions.obliteration+=/glacial_advance,if=!variable.pooling_runic_power&active_enemies>=2\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up\nactions.obliteration+=/obliterate,cycle_targets=1\n\n# Racial Abilities\nactions.racials=blood_fury,if=variable.cooldown_check\nactions.racials+=/berserking,if=variable.cooldown_check\nactions.racials+=/arcane_pulse,if=variable.cooldown_check\nactions.racials+=/lights_judgment,if=variable.cooldown_check\nactions.racials+=/ancestral_call,if=variable.cooldown_check\nactions.racials+=/fireblood,if=variable.cooldown_check\nactions.racials+=/bag_of_tricks,if=talent.obliteration&!buff.pillar_of_frost.up&buff.unholy_strength.up\nactions.racials+=/bag_of_tricks,if=!talent.obliteration&buff.pillar_of_frost.up&(buff.unholy_strength.up&buff.unholy_strength.remains<gcd*3||buff.pillar_of_frost.remains<gcd*3)\n\n# Single Target Rotation\nactions.single_target=remorseless_winter,if=variable.rw_buffs||variable.adds_remain\nactions.single_target+=/frostscythe,if=!variable.pooling_runes&buff.killing_machine.up&variable.frostscythe_priority\nactions.single_target+=/obliterate,if=!variable.pooling_runes&buff.killing_machine.up\nactions.single_target+=/howling_blast,if=buff.rime.up&talent.icebreaker.rank=2\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25&talent.obliteration&talent.breath_of_sindragosa\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power&(variable.rp_buffs||runic_power.deficit<25||debuff.razorice.stack=5&talent.shattering_blade)\nactions.single_target+=/howling_blast,if=variable.rime_buffs\nactions.single_target+=/glacial_advance,if=!variable.pooling_runic_power&!death_knight.runeforge.razorice&(debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)\nactions.single_target+=/obliterate,if=!variable.pooling_runes\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25&(!talent.breath_of_sindragosa||cooldown.breath_of_sindragosa.remains>cooldown.horn_of_winter.duration)\nactions.single_target+=/arcane_torrent,if=runic_power.deficit>20\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power\n\nactions.trinkets=use_item,name=gavel_of_the_first_arbiter\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.\nactions.trinkets+=/use_item,slot=trinket1,if=(buff.pillar_of_frost.up||buff.breath_of_sindragosa.up)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,slot=trinket2,if=(buff.pillar_of_frost.up||buff.breath_of_sindragosa.up)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=(!trinket.1.has_use_buff&(trinket.2.cooldown.remains||!trinket.2.has_use_buff)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)\nactions.trinkets+=/use_item,slot=trinket2,if=(!trinket.2.has_use_buff&(trinket.1.cooldown.remains||!trinket.1.has_use_buff)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)",
				},
				["Demonology"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20221115,
					["spec"] = 266,
					["desc"] = "",
					["lists"] = {
						["opener"] = {
							{
								["enabled"] = true,
								["description"] = "opener assumes starting at 5 shards after db precast",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["action"] = "grimoire_felguard",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "summon_vilefiend",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.nether_portal.up",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.nether_portal.up",
								["action"] = "hand_of_guldan",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "only build back to 5 shards for the first dogs cast. Hounds of War procs are used at 2 shards.",
								["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up & ! pet.dreadstalker.active",
								["action"] = "shadow_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & soul_shard < 5 & buff.fel_covenant.stack < 4",
								["action"] = "shadow_bolt",
							}, -- [7]
							{
								["action"] = "call_dreadstalkers",
								["enabled"] = true,
							}, -- [8]
						},
						["tyrant_setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 17",
								["action"] = "grimoire_felguard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "summon_vilefiend",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 12",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > variable.first_tyrant_time",
								["action"] = "summon_demonic_tyrant",
							}, -- [5]
						},
						["default"] = {
							{
								["action"] = "axe_toss",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
								["var_name"] = "next_tyrant_cd",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "in_opener",
								["criteria"] = "pet.demonic_tyrant.active",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.next_tyrant_cd",
								["var_name"] = "buff_sync_cd",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "pet.demonic_tyrant.active",
								["list_name"] = "ogcd",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 2 * gcd.max",
								["action"] = "implosion",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "time < variable.first_tyrant_time",
								["list_name"] = "opener",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "action.soul_rot.known || action.decimating_bolt.known || action.scouring_tithe.known || action.impending_catastrophe.known",
								["list_name"] = "covenant_ability",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < gcd.max & time > variable.first_tyrant_time",
								["action"] = "potion",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "tyrant_setup",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "guillotine",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & pet.demonic_tyrant.active & ( buff.demonic_power.remains < 5 || buff.stolen_power_final.up )",
								["action"] = "power_siphon",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "( ! ( legendary.wilfreds_sigil_of_superior_summoning.enabled || talent.grand_warlocks_design.enabled ) & variable.next_tyrant_cd > 9 ) || ( pet.demonic_tyrant.active & ( soul_shard < 3 || buff.demonic_power.remains < 12 ) )",
								["action"] = "demonic_strength",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.tyrant.down & variable.next_tyrant_cd > 10 & buff.nether_portal.down & buff.power_siphon.down",
								["action"] = "bilescourge_bombers",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & cooldown.summon_demonic_tyrant.remains_expected > 22",
								["action"] = "call_dreadstalkers",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( variable.next_tyrant_cd > 20 - 5 * ! ( legendary.wilfreds_sigil_of_superior_summoning.enabled || talent.grand_warlocks_design.enabled ) )",
								["action"] = "call_dreadstalkers",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5",
								["action"] = "implosion",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 30",
								["action"] = "grimoire_felguard",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 28",
								["action"] = "summon_vilefiend",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < 15",
								["action"] = "summon_demonic_tyrant",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "hand_of_guldan",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & talent.fel_covenant.enabled & buff.fel_covenant.remains < 5",
								["action"] = "shadow_bolt",
							}, -- [24]
							{
								["enabled"] = true,
								["description"] = "Pop one Doom at irrelevant # of demons before tyrant and replace the kazaaks value with a higher one right before the tick.",
								["criteria"] = "refreshable & dot.doom.remains < 2 & talent.kazaaks_final_curse.enabled & pet.demonic_tyrant.active",
								["action"] = "doom",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "dot.doom.remains = 0 & talent.kazaaks_final_curse.enabled & ( variable.next_tyrant_cd < 3 || ( time > variable.first_tyrant_time - 3 & time < variable.first_tyrant_time ) )",
								["action"] = "doom",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_power.up",
								["action"] = "guillotine",
							}, -- [27]
							{
								["enabled"] = true,
								["description"] = "If Dreadstalkers are already active, no need to save shards",
								["criteria"] = "soul_shard >= 3 & ( pet.dreadstalker.active || pet.demonic_tyrant.active )",
								["action"] = "hand_of_guldan",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & buff.nether_portal.up & cooldown.call_dreadstalkers.remains > 2 * gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & ( ! talent.nether_portal.enabled || cooldown.nether_portal.remains ) & ( ! talent.grimoire_felguard.enabled || cooldown.grimoire_felguard.remains ) & ( ! talent.summon_vilefiend.enabled || cooldown.summon_vilefiend.remains ) & ( buff.dreadstalkers.remains < gcd.max + cast_time + action.summon_demonic_tyrant.cast ) & variable.next_tyrant_cd < gcd.max & time > variable.first_tyrant_time - gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [30]
							{
								["enabled"] = true,
								["description"] = "Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority TODO: RETEST - prolly depends on mastery",
								["criteria"] = "! talent.sacrificed_souls.enabled",
								["action"] = "soul_strike",
							}, -- [31]
							{
								["enabled"] = true,
								["description"] = "Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready",
								["criteria"] = "! variable.use_bolt_timings & buff.wild_imps.stack > 1 & buff.demonic_core.stack < 3",
								["action"] = "power_siphon",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd > 20",
								["action"] = "demonbolt",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "During Tyrant setup, spend Demonic Cores for Soul Shards",
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd < 12",
								["action"] = "demonbolt",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & ( buff.demonic_core.stack > 2 || talent.sacrificed_souls.enabled )",
								["action"] = "demonbolt",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & active_enemies > 1",
								["action"] = "demonbolt",
							}, -- [36]
							{
								["action"] = "soul_strike",
								["enabled"] = true,
							}, -- [37]
							{
								["enabled"] = true,
								["description"] = "If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now",
								["criteria"] = "soul_shard >= 3 & variable.next_tyrant_cd > 25 & ( talent.demonic_calling.enabled || cooldown.call_dreadstalkers.remains > ( ( 5 - soul_shard ) * action.shadow_bolt.execute_time ) + action.hand_of_guldan.execute_time )",
								["action"] = "hand_of_guldan",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "dot.doom.remains = 0 & time > variable.first_tyrant_time & ! talent.kazaaks_final_curse.enabled",
								["action"] = "doom",
								["cycle_targets"] = 1,
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "dot.doom.remains = 0 & time > variable.first_tyrant_time & talent.kazaaks_final_curse.enabled & variable.next_tyrant_cd > dot.doom.duration + 7 & buff.demonic_power.down",
								["action"] = "doom",
								["cycle_targets"] = 1,
							}, -- [40]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [41]
							{
								["enabled"] = true,
								["description"] = "Straight up dps loss. castable while moving tho.",
								["action"] = "summon_soulkeeper",
							}, -- [42]
						},
						["precombat"] = {
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "inquisitors_gaze",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ( boss || action.demonbolt.cast = 0 )",
								["action"] = "demonbolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ! ( boss || action.demonbolt.cast = 0 )",
								["action"] = "shadow_bolt",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "talent.fel_covenant.enabled + talent.sacrificed_souls.enabled + talent.power_siphon.enabled > 1",
								["var_name"] = "use_bolt_timings",
							}, -- [5]
						},
						["covenant_ability"] = {
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & pet.demonic_tyrant.active",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled & ! runeforge.decaying_soul_satchel.enabled & ( variable.next_tyrant_cd < 20 || variable.next_tyrant_cd > 30 )",
								["action"] = "soul_rot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! ( soulbind.field_of_blossoms.enabled || soulbind.grove_invigoration.enabled ) & ! runeforge.decaying_soul_satchel.enabled & ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 18",
								["action"] = "soul_rot",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.lead_by_example.enabled & ( pet.demonic_tyrant.active & soul_shard < 2 || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.kevins_oozeling.enabled & ( pet.demonic_tyrant.active || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( soulbind.forgeborne_reveries.enabled || ( soulbind.volatile_solvent.enabled & ! soulbind.kevins_oozeling.enabled ) ) & ! pet.demonic_tyrant.active",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & ( ! talent.power_siphon.enabled || cooldown.power_siphon.remains < action.decimating_bolt.execute_time ) & ! cooldown.summon_demonic_tyrant.up & ( pet.demonic_tyrant.remains < 8 || cooldown.summon_demonic_tyrant.remains_expected < 30 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent.down",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled & pet.demonic_tyrant.active",
								["action"] = "scouring_tithe",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! soulbind.combat_meditation.enabled",
								["action"] = "scouring_tithe",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.demonic_tyrant.active & soul_shard = 0",
								["action"] = "impending_catastrophe",
							}, -- [11]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "pet.demonic_tyrant.active",
								["var_name"] = "use_buff_trinkets",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "time > variable.first_tyrant_time & variable.buff_sync_cd > 20",
								["list_name"] = "pure_damage_trinks",
							}, -- [4]
						},
						["pure_damage_trinks"] = {
							{
								["enabled"] = true,
								["criteria"] = "! trinket.t1.has_use_buff",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! trinket.t2.has_use_buff",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [2]
						},
						["ogcd"] = {
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20221115,
					["warnings"] = "The import for 'pure_damage_trinks' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\n\nThe import for 'covenant_ability' required some automated changes.\nLine 1: Converted 'soulbind.field_of_blossoms' to 'soulbind.field_of_blossoms.enabled' (1x).\nLine 1: Converted 'runeforge.decaying_soul_satchel' to 'runeforge.decaying_soul_satchel.enabled' (1x).\nLine 2: Converted 'soulbind.grove_invigoration' to 'soulbind.grove_invigoration.enabled' (1x).\nLine 2: Converted 'runeforge.decaying_soul_satchel' to 'runeforge.decaying_soul_satchel.enabled' (1x).\nLine 3: Converted 'soulbind.field_of_blossoms' to 'soulbind.field_of_blossoms.enabled' (1x).\nLine 3: Converted 'soulbind.grove_invigoration' to 'soulbind.grove_invigoration.enabled' (1x).\nLine 3: Converted 'runeforge.decaying_soul_satchel' to 'runeforge.decaying_soul_satchel.enabled' (1x).\nLine 4: Converted 'soulbind.lead_by_example' to 'soulbind.lead_by_example.enabled' (1x).\nLine 5: Converted 'soulbind.kevins_oozeling' to 'soulbind.kevins_oozeling.enabled' (1x).\nLine 6: Converted 'soulbind.forgeborne_reveries' to 'soulbind.forgeborne_reveries.enabled' (1x).\nLine 6: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\nLine 6: Converted 'soulbind.kevins_oozeling' to 'soulbind.kevins_oozeling.enabled' (1x).\nLine 7: Converted 'talent.power_siphon' to 'talent.power_siphon.enabled' (1x).\nLine 8: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\nLine 9: Converted 'soulbind.combat_meditation' to 'soulbind.combat_meditation.enabled' (1x).\nLine 10: Converted 'soulbind.combat_meditation' to 'soulbind.combat_meditation.enabled' (1x).\n\nImported 8 action lists.\n",
					["profile"] = "actions.precombat+=/summon_pet\nactions.precombat+=/inquisitors_gaze\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=12\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=15,if=talent.nether_portal.enabled\n## actions.precombat+=/variable,name=in_opener,op=set,value=1\nactions.precombat+=/demonbolt,if=soul_shards<5&(boss||action.demonbolt.cast=0)\nactions.precombat+=/shadow_bolt,if=soul_shards<5&!(boss||action.demonbolt.cast=0)\nactions.precombat+=/variable,name=use_bolt_timings,op=set,value=talent.fel_covenant.enabled+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1\n\nactions+=/axe_toss\nactions+=/devour_magic\nactions+=/variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected\nactions+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\nactions+=/variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=ogcd,strict=1,if=pet.demonic_tyrant.active\nactions+=/implosion,if=time_to_die<2*gcd\nactions+=/call_action_list,name=opener,strict=1,if=time<variable.first_tyrant_time\nactions+=/call_action_list,name=covenant_ability,strict=1,if=action.soul_rot.known||action.decimating_bolt.known||action.scouring_tithe.known||action.impending_catastrophe.known\nactions+=/potion,if=variable.next_tyrant_cd<gcd.max&time>variable.first_tyrant_time\nactions+=/call_action_list,name=tyrant_setup\nactions+=/guillotine,if=active_enemies>1\nactions+=/power_siphon,if=variable.use_bolt_timings&pet.demonic_tyrant.active&(buff.demonic_power.remains<5||buff.stolen_power_final.up)\nactions+=/demonic_strength,if=(!(legendary.wilfreds_sigil_of_superior_summoning.enabled||talent.grand_warlocks_design.enabled)&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&(soul_shard<3||buff.demonic_power.remains<12))\nactions+=/bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>10&buff.nether_portal.down&buff.power_siphon.down\nactions+=/call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\nactions+=/call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!(legendary.wilfreds_sigil_of_superior_summoning.enabled||talent.grand_warlocks_design.enabled))\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5\nactions+=/grimoire_felguard,if=time_to_die<30\nactions+=/summon_vilefiend,if=time_to_die<28\nactions+=/summon_demonic_tyrant,if=time_to_die<15\nactions+=/hand_of_guldan,if=soul_shard=5\nactions+=/shadow_bolt,if=soul_shard<5&talent.fel_covenant.enabled&buff.fel_covenant.remains<5\n# Pop one Doom at irrelevant # of demons before tyrant and replace the kazaaks value with a higher one right before the tick.\nactions+=/doom,if=refreshable&dot.doom.remains<2&talent.kazaaks_final_curse.enabled&pet.demonic_tyrant.active\nactions+=/doom,if=dot.doom.remains=0&talent.kazaaks_final_curse.enabled&(variable.next_tyrant_cd<3||(time>variable.first_tyrant_time-3&time<variable.first_tyrant_time))\nactions+=/guillotine,if=buff.demonic_power.up\n# If Dreadstalkers are already active, no need to save shards\nactions+=/hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\nactions+=/hand_of_guldan,if=soul_shard>=3&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\nactions+=/hand_of_guldan,if=soul_shard>=1&(!talent.nether_portal.enabled||cooldown.nether_portal.remains)&(!talent.grimoire_felguard.enabled||cooldown.grimoire_felguard.remains)&(!talent.summon_vilefiend.enabled||cooldown.summon_vilefiend.remains)&(buff.dreadstalkers.remains<gcd.max+cast_time+action.summon_demonic_tyrant.cast)&variable.next_tyrant_cd<gcd.max&time>variable.first_tyrant_time-gcd.max\n# Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority TODO: RETEST - prolly depends on mastery\nactions+=/soul_strike,if=!talent.sacrificed_souls.enabled\n# Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready\nactions+=/power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n# During Tyrant setup, spend Demonic Cores for Soul Shards\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1\nactions+=/soul_strike\n# If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now\nactions+=/hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\nactions+=/doom,cycle_targets=1,if=dot.doom.remains=0&time>variable.first_tyrant_time&!talent.kazaaks_final_curse.enabled\nactions+=/doom,cycle_targets=1,if=dot.doom.remains=0&time>variable.first_tyrant_time&talent.kazaaks_final_curse.enabled&variable.next_tyrant_cd>dot.doom.duration+7&buff.demonic_power.down\nactions+=/shadow_bolt\n# Straight up dps loss. castable while moving tho.\nactions+=/summon_soulkeeper\n## actions+=/summon_soulkeeper,if=cooldown.nether_portal.up&buff.nether_portal.down&variable.next_tyrant_cd>15&buff.demonic_power.down&buff.tormented_soul.stack=10\n\nactions.covenant_ability=soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\nactions.covenant_ability+=/soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\nactions.covenant_ability+=/soul_rot,if=!(soulbind.field_of_blossoms||soulbind.grove_invigoration)&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\nactions.covenant_ability+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent.down,interrupt_if=buff.volatile_solvent.up\nactions.covenant_ability+=/scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active\nactions.covenant_ability+=/scouring_tithe,if=!soulbind.combat_meditation\nactions.covenant_ability+=/impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\n# opener assumes starting at 5 shards after db precast\nactions.opener+=/nether_portal\nactions.opener+=/grimoire_felguard\nactions.opener+=/summon_vilefiend\nactions.opener+=/call_dreadstalkers,if=buff.nether_portal.up\nactions.opener+=/hand_of_guldan,if=buff.nether_portal.up\n# only build back to 5 shards for the first dogs cast. Hounds of War procs are used at 2 shards.\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up&!pet.dreadstalker.active\nactions.opener+=/shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.fel_covenant.stack<4\nactions.opener+=/call_dreadstalkers\n\nactions.ogcd=berserking\nactions.ogcd+=/blood_fury\nactions.ogcd+=/fireblood\nactions.ogcd+=/use_items\n\nactions.trinkets=variable,name=use_buff_trinkets,value=pet.demonic_tyrant.active\nactions.trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/call_action_list,name=pure_damage_trinks,if=time>variable.first_tyrant_time&variable.buff_sync_cd>20\n\nactions.pure_damage_trinks+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff\nactions.pure_damage_trinks+=/use_item,slot=trinket2,if=!trinket.2.has_use_buff\n\nactions.tyrant_setup=nether_portal,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/grimoire_felguard,if=variable.next_tyrant_cd<17\nactions.tyrant_setup+=/summon_vilefiend,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/call_dreadstalkers,if=variable.next_tyrant_cd<12\nactions.tyrant_setup+=/summon_demonic_tyrant,if=time>variable.first_tyrant_time",
					["author"] = "Demotime",
				},
			},
			["toggles"] = {
				["interrupts"] = {
					["value"] = true,
					["separate"] = true,
				},
				["cooldowns"] = {
					["value"] = true,
					["override"] = true,
					["separate"] = true,
				},
				["mode"] = {
					["dual"] = true,
					["reactive"] = false,
					["aoe"] = true,
				},
				["defensives"] = {
					["value"] = true,
					["separate"] = true,
				},
			},
			["iconStore"] = {
				["minimapPos"] = 207.3620184654129,
				["hide"] = true,
			},
			["minimapIcon"] = true,
		},
	},
}
