
PlaterDB = {
	["captured_spells"] = {
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184581,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74571,
		},
		[391665] = {
			["source"] = "Ash Bugsbane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 197292,
		},
		[372503] = {
			["type"] = "BUFF",
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 189610,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["type"] = "BUFF",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184125,
		},
		[385023] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Thicket Scalebiter",
			["npcID"] = 192946,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["type"] = "BUFF",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1869,
		},
		[196728] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Niuzao",
			["npcID"] = 73967,
		},
		[82715] = {
			["source"] = "Skitterweb Lurker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1781,
		},
		[151697] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75426,
		},
		[83993] = {
			["source"] = "Agatha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44951,
		},
		[386176] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[33661] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dalaran Worker",
			["npcID"] = 2628,
		},
		[54644] = {
			["source"] = "Heatwave",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[81087] = {
			["source"] = "7th Legion Submariner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45403,
		},
		[8599] = {
			["source"] = "Gorefang",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12431,
		},
		[193473] = {
			["source"] = "Void Tendril",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192337,
		},
		[209378] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74790,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184422,
		},
		[87603] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bolgaff",
			["npcID"] = 47003,
		},
		[79970] = {
			["source"] = "Master Sergeant Pietro Zaren",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45405,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184581,
		},
		[115804] = {
			["source"] = "Dinonugz",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[150678] = {
			["encounterName"] = "Gug'rokk",
			["type"] = "BUFF",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74790,
		},
		[63619] = {
			["source"] = "Mindbender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 62982,
		},
		[373662] = {
			["type"] = "BUFF",
			["source"] = "Earthen Warder",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184132,
		},
		[3583] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Bloodfang Scout",
			["npcID"] = 45481,
		},
		[389249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Do-Yeon Shadowrider",
			["npcID"] = 188444,
		},
		[224327] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[84474] = {
			["source"] = "Bomb",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45237,
		},
		[213213] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ly'leth Lunastre",
			["npcID"] = 106468,
		},
		[151446] = {
			["source"] = "Bloodmaul Enforcer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 84978,
		},
		[34189] = {
			["source"] = "Deathstalker Rane Yorick",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44882,
		},
		[32736] = {
			["source"] = "Forsaken Vanguard",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45280,
		},
		[151447] = {
			["source"] = "Bloodmaul Enforcer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 84978,
		},
		[30213] = {
			["source"] = "Felguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[377500] = {
			["type"] = "BUFF",
			["source"] = "Infinite Agent",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184335,
		},
		[211299] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[207850] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[274792] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Released Crawg",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 140149,
		},
		[369328] = {
			["type"] = "BUFF",
			["source"] = "Runic Protector",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184107,
		},
		[378143] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Valdrakken Citizen",
			["npcID"] = 189895,
		},
		[79877] = {
			["source"] = "Worgen Rebel",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45292,
		},
		[16592] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Baron Ashbury",
			["npcID"] = 45880,
		},
		[381593] = {
			["source"] = "Ebonstone Golem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184300,
		},
		[3110] = {
			["source"] = "Bizbis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 416,
		},
		[267385] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Tentacle",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 135987,
		},
		[85147] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Forsaken Catapult",
			["npcID"] = 45636,
		},
		[118905] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Capacitor Totem",
			["npcID"] = 61245,
		},
		[207980] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[394754] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lindormi",
			["npcID"] = 197915,
		},
		[120694] = {
			["source"] = "Beast",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 110063,
		},
		[79878] = {
			["source"] = "Worgen Rebel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45292,
		},
		[334713] = {
			["source"] = "Wrathguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136407,
		},
		[57984] = {
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95061,
		},
		[375339] = {
			["type"] = "BUFF",
			["source"] = "Olaf",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184580,
		},
		[369335] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184107,
		},
		[382749] = {
			["type"] = "DEBUFF",
			["source"] = "Charred Hornspike",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191479,
		},
		[151581] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75193,
		},
		[83903] = {
			["source"] = "Mutant Bush Chicken",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44935,
		},
		[373552] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[55078] = {
			["source"] = "Rune Weapon",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27893,
		},
		[151965] = {
			["source"] = "Bloodmaul Slaver",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75191,
		},
		[369465] = {
			["type"] = "BUFF",
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186420,
		},
		[370104] = {
			["type"] = "BUFF",
			["source"] = "Piercer Gigra",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186511,
		},
		[204343] = {
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186634,
		},
		[81764] = {
			["source"] = "Caretaker Smithers",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45219,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184125,
		},
		[204344] = {
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186634,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74787,
		},
		[214692] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[377900] = {
			["source"] = "Qalashi Steelcrafter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186483,
		},
		[259277] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[84575] = {
			["source"] = "Horde Cannon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45263,
		},
		[34447] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Remnant",
			["npcID"] = 45728,
		},
		[2649] = {
			["source"] = "Littlefoot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[369853] = {
			["source"] = "Burly Rock-Thrower",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184019,
		},
		[154331] = {
			["source"] = "Grove Cultivator Kados",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 133104,
		},
		[164615] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81767,
		},
		[198533] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jade Serpent Statue",
			["npcID"] = 60849,
		},
		[192082] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wind Rush Totem",
			["npcID"] = 97285,
		},
		[79849] = {
			["source"] = "Gija",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47248,
		},
		[79881] = {
			["source"] = "Worgen Rebel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45292,
		},
		[79977] = {
			["source"] = "Master Sergeant Pietro Zaren",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45405,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75786,
		},
		[54680] = {
			["source"] = "Dinonugz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[164617] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81767,
		},
		[209713] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[392087] = {
			["source"] = "Swog'ranka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193634,
		},
		[392088] = {
			["source"] = "Swog'ranka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193634,
		},
		[377908] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Rustfang Creeper",
			["npcID"] = 187672,
		},
		[24394] = {
			["source"] = "Dinonugz",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[50273] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Relios the Relic Keeper",
			["npcID"] = 45734,
		},
		[150055] = {
			["encounterName"] = "Magmolatus",
			["type"] = "DEBUFF",
			["source"] = "Molten Elemental",
			["encounterID"] = 1655,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74579,
		},
		[89751] = {
			["source"] = "Akraminul",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[24450] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 165189,
		},
		[81767] = {
			["source"] = "Caretaker Smithers",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45219,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["type"] = "BUFF",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74787,
		},
		[1604] = {
			["source"] = "Ashen Spark",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 190528,
		},
		[30151] = {
			["source"] = "Akraminul",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[32714] = {
			["source"] = "Hillsbrad Worgen",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45254,
		},
		[83173] = {
			["source"] = "Agatha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44608,
		},
		[84802] = {
			["source"] = "Forsaken Catapult",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45282,
		},
		[10277] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Torn Fin Coastrunner",
			["npcID"] = 2375,
		},
		[389541] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "White Tiger Statue",
			["npcID"] = 196581,
		},
		[212784] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[272012] = {
			["source"] = "Illidari Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136398,
		},
		[91797] = {
			["source"] = "Gravelstealer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[151720] = {
			["source"] = "Molten Earth Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75209,
		},
		[90328] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[272013] = {
			["source"] = "Vicious Hellhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136399,
		},
		[209719] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[270481] = {
			["source"] = "Demonic Tyrant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 135002,
		},
		[149997] = {
			["encounterName"] = "Magmolatus",
			["type"] = "BUFF",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74571,
		},
		[267034] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134069,
		},
		[84662] = {
			["source"] = "Korok the Colossus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45301,
		},
		[84804] = {
			["source"] = "Forsaken Catapult",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45282,
		},
		[372557] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Scavenger Matriarch",
			["npcID"] = 192812,
		},
		[84868] = {
			["source"] = "Giant Rabid Bear",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1797,
		},
		[104318] = {
			["source"] = "Wild Imp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 55659,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184125,
		},
		[152298] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75820,
		},
		[134477] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[267548] = {
			["source"] = "Sunken Denizen",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 136295,
		},
		[209722] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
		},
		[152043] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75191,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[369408] = {
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184130,
		},
		[369366] = {
			["type"] = "DEBUFF",
			["source"] = "Earthen Warder",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184132,
		},
		[152939] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75786,
		},
		[382264] = {
			["source"] = "Chrono-Lord Deios",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191220,
		},
		[152427] = {
			["source"] = "Magma Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75211,
		},
		[377510] = {
			["source"] = "Infinite Timereaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184331,
		},
		[26000] = {
			["source"] = "Pat's Snowcloud Guy",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 15730,
		},
		[211384] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[377511] = {
			["type"] = "BUFF",
			["source"] = "Infinite Timereaver",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184331,
		},
		[369368] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184132,
		},
		[377486] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184335,
		},
		[382573] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184131,
		},
		[260249] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[382576] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184131,
		},
		[79868] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Relios the Relic Keeper",
			["npcID"] = 45734,
		},
		[212031] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Energy",
			["npcID"] = 105705,
		},
		[91800] = {
			["source"] = "Risen Ghoul",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184422,
		},
		[267809] = {
			["source"] = "Forgotten Denizen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136297,
		},
		[369006] = {
			["encounterName"] = "Emberon",
			["type"] = "DEBUFF",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184422,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75786,
		},
		[84806] = {
			["source"] = "Forsaken Catapult",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45282,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186107,
		},
		[369033] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184422,
		},
		[227291] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Niuzao",
			["npcID"] = 73967,
		},
		[369411] = {
			["source"] = "Cavern Seeker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184301,
		},
		[48168] = {
			["source"] = "Matron Ossela",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96955,
		},
		[369423] = {
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184303,
		},
		[49966] = {
			["source"] = "Littlefoot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[369337] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184107,
		},
		[369400] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184132,
		},
		[369365] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184132,
		},
		[272156] = {
			["source"] = "Void Terror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136403,
		},
		[369399] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186420,
		},
		[75002] = {
			["source"] = "Worgen Rusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45375,
		},
		[30831] = {
			["type"] = "BUFF",
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186634,
		},
		[153227] = {
			["encounterName"] = "Roltall",
			["type"] = "DEBUFF",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75786,
		},
		[213304] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Suspicious Noble",
			["npcID"] = 107435,
		},
		[81262] = {
			["source"] = "Efflorescence",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47649,
		},
		[151601] = {
			["source"] = "Pillar of Fire",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75327,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184124,
		},
		[264667] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Unknown",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[66060] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Bloodfang Scout",
			["npcID"] = 45481,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74570,
		},
		[9080] = {
			["source"] = "Forsaken Vanguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45280,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74570,
		},
		[152170] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74475,
		},
		[82061] = {
			["source"] = "Ariok",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 48567,
		},
		[382071] = {
			["encounterName"] = "Sentinel Talondras",
			["type"] = "DEBUFF",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184124,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184124,
		},
		[209512] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[81167] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Elemental Servitor",
			["npcID"] = 45711,
		},
		[369409] = {
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184130,
		},
		[181113] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Eternal Orb",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191566,
		},
		[78509] = {
			["source"] = "Bloodfang Scavenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44547,
		},
		[151092] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Captured Miner",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74356,
		},
		[377738] = {
			["type"] = "BUFF",
			["source"] = "Refti Custodian",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184319,
		},
		[84014] = {
			["source"] = "Agatha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44951,
		},
		[209027] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Duskwatch Guard",
			["npcID"] = 104246,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[269097] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134060,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184018,
		},
		[369605] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184018,
		},
		[211391] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[228318] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[375286] = {
			["encounterName"] = "The Lost Dwarves",
			["type"] = "DEBUFF",
			["source"] = "Longboat Raid",
			["encounterID"] = 2555,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186945,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184580,
		},
		[80146] = {
			["source"] = "Forest Ettin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44367,
		},
		[209667] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[369603] = {
			["encounterName"] = "The Lost Dwarves",
			["type"] = "BUFF",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184580,
		},
		[369602] = {
			["encounterName"] = "The Lost Dwarves",
			["type"] = "BUFF",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184580,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["type"] = "BUFF",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1868,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184580,
		},
		[16827] = {
			["source"] = "Scorpid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[369792] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184582,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["type"] = "BUFF",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184582,
		},
		[272167] = {
			["source"] = "Bilescourge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136404,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184582,
		},
		[6660] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45376,
		},
		[369675] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184022,
		},
		[209413] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[209477] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Wyrm",
			["npcID"] = 105703,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74790,
		},
		[150807] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Captured Miner",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74355,
		},
		[151415] = {
			["source"] = "Bloodmaul Enforcer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 84978,
		},
		[151990] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75191,
		},
		[84528] = {
			["source"] = "Orc Sea Dog",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45196,
		},
		[369828] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184023,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1869,
		},
		[369823] = {
			["type"] = "BUFF",
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184023,
		},
		[40505] = {
			["source"] = "Bloodmaul Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75210,
		},
		[31279] = {
			["source"] = "Ferocious Grizzled Bear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1778,
		},
		[84012] = {
			["source"] = "Agatha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44951,
		},
		[164616] = {
			["source"] = "Bloodmaul Flamespeaker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 81767,
		},
		[150011] = {
			["encounterName"] = "Magmolatus",
			["type"] = "DEBUFF",
			["source"] = "Forgemaster Gog'duh",
			["encounterID"] = 1655,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74366,
		},
		[80012] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45376,
		},
		[152183] = {
			["source"] = "Slagna",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75406,
		},
		[369696] = {
			["source"] = "Scavenging Leaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184134,
		},
		[256044] = {
			["source"] = "Overseer Korgus",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 127503,
		},
		[369697] = {
			["source"] = "Scavenging Leaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184134,
		},
		[150048] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Molten Elemental",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74579,
		},
		[369417] = {
			["type"] = "BUFF",
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184303,
		},
		[373607] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[150076] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Forgemaster Gog'duh",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74366,
		},
		[18670] = {
			["source"] = "Korok the Colossus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45301,
		},
		[100780] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[209033] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Duskwatch Guard",
			["npcID"] = 104246,
		},
		[60195] = {
			["source"] = "Orc Sea Dog",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44942,
		},
		[87104] = {
			["source"] = "Hillsbrad Refugee",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44966,
		},
		[389247] = {
			["source"] = "Blacktalon Avenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187187,
		},
		[376243] = {
			["source"] = "Blacktalon Avenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187187,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184125,
		},
		[371313] = {
			["type"] = "DEBUFF",
			["source"] = "Blazing Manifestation",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186336,
		},
		[29363] = {
			["source"] = "Vampiric Duskbat",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1554,
		},
		[86249] = {
			["source"] = "7th Legion Submariner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45403,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74790,
		},
		[219488] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[86345] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilnean Warhound",
			["npcID"] = 45499,
		},
		[88421] = {
			["source"] = "Forest Ettin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44367,
		},
		[150078] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Forgemaster Gog'duh",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74366,
		},
		[138130] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[108446] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[79862] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deathstalker Commander Belmont",
			["npcID"] = 45474,
		},
		[372718] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184124,
		},
		[87080] = {
			["source"] = "Skitterweb Lurker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1781,
		},
		[228645] = {
			["source"] = "Rune Weapon",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27893,
		},
		[268347] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134060,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["type"] = "BUFF",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184124,
		},
		[201754] = {
			["source"] = "Dinonugz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[150004] = {
			["encounterName"] = "Magmolatus",
			["type"] = "BUFF",
			["source"] = "Forgemaster Gog'duh",
			["encounterID"] = 1655,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74366,
		},
		[79607] = {
			["source"] = "Skitterweb Matriarch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44906,
		},
		[79858] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dalaran Summoner",
			["npcID"] = 2358,
		},
		[88760] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hungry Mine Creeper",
			["npcID"] = 47662,
		},
		[180612] = {
			["encounterName"] = "Slave Watcher Crushto",
			["type"] = "BUFF",
			["source"] = "Rune Weapon",
			["encounterID"] = 1653,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27893,
		},
		[188046] = {
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198489,
		},
		[79848] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Worgen Battlemage",
			["npcID"] = 45483,
		},
		[211464] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felbound Enforcer",
			["npcID"] = 104278,
		},
		[83919] = {
			["source"] = "Webbed Victim",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44941,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184018,
		},
		[3396] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hungry Mine Creeper",
			["npcID"] = 47662,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["type"] = "BUFF",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1870,
		},
		[80003] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Worgen Commando",
			["npcID"] = 45861,
		},
		[272439] = {
			["source"] = "Ur'zul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136402,
		},
		[211401] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[84992] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Arthura",
			["npcID"] = 45473,
		},
		[85197] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Agatha",
			["npcID"] = 45609,
		},
		[373618] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[81173] = {
			["source"] = "Caretaker Smithers",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45219,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74475,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["type"] = "BUFF",
			["source"] = "Image of Advisor Melandrus",
			["npcID"] = 105754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1870,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74571,
		},
		[267459] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Forgotten Denizen",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136083,
		},
		[397892] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[207979] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[79864] = {
			["source"] = "Bloodfang Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45195,
		},
		[377836] = {
			["source"] = "Kalu'ak Figurine",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192628,
		},
		[149891] = {
			["source"] = "Forgemaster Gog'duh",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74366,
		},
		[80471] = {
			["source"] = "Fenwick Thatros",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47008,
		},
		[389243] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fao the Relentless",
			["npcID"] = 186331,
		},
		[86603] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dusk Lily Agent",
			["npcID"] = 113617,
		},
		[373364] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[125056] = {
			["source"] = "Dinonugz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[372600] = {
			["type"] = "BUFF",
			["source"] = "Sentinel Talondras",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184124,
		},
		[382437] = {
			["type"] = "BUFF",
			["source"] = "Olaf",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191913,
		},
		[374389] = {
			["source"] = "Swog'ranka",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 193634,
		},
		[17253] = {
			["source"] = "Taco",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[83847] = {
			["source"] = "Admiral Hatchet",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44916,
		},
		[151542] = {
			["source"] = "Bloodmaul Enforcer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 84978,
		},
		[59638] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
		},
		[100784] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[79865] = {
			["source"] = "Marud",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47247,
		},
		[3427] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Torn Fin Muckdweller",
			["npcID"] = 2374,
		},
		[396364] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Raszageth",
			["npcID"] = 199388,
		},
		[80472] = {
			["source"] = "Fenwick Thatros",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47008,
		},
		[209516] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Saber",
			["npcID"] = 105699,
		},
		[87179] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dalaran Summoner",
			["npcID"] = 2358,
		},
		[89766] = {
			["source"] = "Felguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[382696] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184131,
		},
		[373570] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[209036] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Duskwatch Sentry",
			["npcID"] = 104251,
		},
		[150751] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74787,
		},
		[50648] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Relios the Relic Keeper",
			["npcID"] = 45734,
		},
		[269399] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134069,
		},
		[211406] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[377971] = {
			["source"] = "Gigantic Thresher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192919,
		},
		[107428] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[386195] = {
			["source"] = "Dreadstalker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 98035,
		},
		[396751] = {
			["source"] = "Moth'go Deeploom",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193735,
		},
		[113656] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[80473] = {
			["source"] = "Fenwick Thatros",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47008,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74475,
		},
		[87180] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Summoned Water Elemental",
			["npcID"] = 46820,
		},
		[396369] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Raszageth",
			["npcID"] = 199388,
		},
		[377589] = {
			["source"] = "Glacierleaper",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[164587] = {
			["source"] = "Bloodmaul Ogron",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81750,
		},
		[317792] = {
			["source"] = "Magus of the Dead",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163366,
		},
		[397903] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[79721] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45376,
		},
		[370054] = {
			["source"] = "Olphis the Molten",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 181875,
		},
		[124007] = {
			["source"] = "Xuen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 63508,
		},
		[151685] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75820,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74787,
		},
		[152835] = {
			["encounterName"] = "Roltall",
			["type"] = "BUFF",
			["source"] = "Fiery Boulder",
			["encounterID"] = 1652,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75853,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[272432] = {
			["source"] = "Wrathguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136407,
		},
		[36213] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Greater Earth Elemental",
			["npcID"] = 95072,
		},
		[151558] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75272,
		},
		[58867] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[211473] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[261896] = {
			["source"] = "Orgrimmar Bruiser",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 133168,
		},
		[79976] = {
			["source"] = "Master Sergeant Pietro Zaren",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45405,
		},
		[369674] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184022,
		},
		[397907] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[369419] = {
			["type"] = "DEBUFF",
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184303,
		},
		[377723] = {
			["type"] = "BUFF",
			["source"] = "Refti Custodian",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184319,
		},
		[151623] = {
			["source"] = "Magma Lord",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75211,
		},
		[382578] = {
			["type"] = "BUFF",
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184131,
		},
		[261616] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Katy Stampwhistle",
			["npcID"] = 132969,
		},
		[152837] = {
			["encounterName"] = "Roltall",
			["type"] = "BUFF",
			["source"] = "Fiery Boulder",
			["encounterID"] = 1652,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75854,
		},
		[3485] = {
			["source"] = "Nightlash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46981,
		},
		[152089] = {
			["source"] = "Bloodmaul Slaver",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75191,
		},
		[124009] = {
			["source"] = "Xuen",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 63508,
		},
		[68687] = {
			["source"] = "Gilnean Hound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45367,
		},
		[13884] = {
			["source"] = "Skitterweb Striker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1780,
		},
		[151548] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75272,
		},
		[209495] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[79962] = {
			["source"] = "Nelur Lightsown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96954,
		},
		[89753] = {
			["source"] = "Akraminul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[369806] = {
			["type"] = "BUFF",
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184020,
		},
		[84308] = {
			["source"] = "Bloodfang Scavenger",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44547,
		},
		[150811] = {
			["encounterName"] = "Slave Watcher Crushto",
			["type"] = "DEBUFF",
			["source"] = "Captured Miner",
			["encounterID"] = 1653,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74357,
		},
		[396762] = {
			["source"] = "Moth'go Deeploom",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193735,
		},
		[61684] = {
			["source"] = "Taco",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[171982] = {
			["source"] = "Akraminul",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[164592] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75198,
		},
		[267444] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["type"] = "BUFF",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 134069,
		},
		[79892] = {
			["source"] = "Murgha the Tempered",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96957,
		},
		[394464] = {
			["source"] = "Piercer Gigra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186511,
		},
		[152073] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75191,
		},
		[6268] = {
			["source"] = "Darktusk Boar",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 46575,
		},
		[211477] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[86237] = {
			["source"] = "Bloodfang Stalker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45195,
		},
		[269104] = {
			["encounterName"] = "Lord Stormsong",
			["type"] = "DEBUFF",
			["source"] = "Awoken Void",
			["encounterID"] = 2132,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 137036,
		},
		[269131] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134060,
		},
		[3150] = {
			["source"] = "Rabid Worg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1766,
		},
		[152897] = {
			["encounterName"] = "Roltall",
			["type"] = "DEBUFF",
			["source"] = "Heat Wave",
			["encounterID"] = 1652,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75865,
		},
		[224125] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[151545] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Bloodmaul Warder",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75210,
		},
		[369811] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184020,
		},
		[224127] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[377732] = {
			["source"] = "Refti Custodian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184319,
		},
		[274720] = {
			["source"] = "Abyssal Eel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 140038,
		},
		[397897] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74475,
		},
		[224126] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[152742] = {
			["encounterName"] = "Roltall",
			["type"] = "BUFF",
			["source"] = "Fiery Boulder",
			["encounterID"] = 1652,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 75828,
		},
		[91807] = {
			["source"] = "Gravelstealer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[6507] = {
			["source"] = "Worgen Sentry",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44987,
		},
		[164582] = {
			["source"] = "Bloodmaul Ogron",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81750,
		},
		[193635] = {
			["source"] = "Void Tendril",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192337,
		},
		[79851] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deathstalker Commander Belmont",
			["npcID"] = 45474,
		},
		[79857] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Worgen Battlemage",
			["npcID"] = 45483,
		},
		[22938] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Remnant",
			["npcID"] = 45728,
		},
		[79854] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Worgen Battlemage",
			["npcID"] = 45483,
		},
		[385145] = {
			["source"] = "River Frillfish",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192149,
		},
		[87081] = {
			["source"] = "Skitterweb Striker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1780,
		},
		[267360] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 134069,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[83001] = {
			["source"] = "Kree",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 50330,
		},
		[377609] = {
			["type"] = "DEBUFF",
			["source"] = "Fragment of Disloyalty",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 196825,
		},
		[151566] = {
			["source"] = "Bloodmaul Magma Binder",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 74349,
		},
		[84867] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infested Bear",
			["npcID"] = 47204,
		},
		[77508] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75820,
		},
		[112042] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Zhar'nar",
			["npcID"] = 1860,
		},
		[164597] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 75198,
		},
		[195321] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[369818] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184020,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 74787,
		},
	},
	["captured_casts"] = {
		[79857] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worgen Battlemage",
			["npcID"] = 45483,
		},
		[377483] = {
			["source"] = "Ketess the Pillager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191746,
		},
		[369811] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[396665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[372369] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hyena Tender",
			["npcID"] = 192506,
		},
		[375694] = {
			["source"] = "Infused Tarasek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181310,
		},
		[384134] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[389505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[219049] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Naturalist Tel'arn",
			["npcID"] = 109041,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[369813] = {
			["source"] = "Bound Inferno",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186627,
		},
		[377486] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[204344] = {
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186634,
		},
		[212784] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[386694] = {
			["source"] = "Stormsurge Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194897,
		},
		[152939] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75786,
		},
		[377488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Seal Keeper",
			["npcID"] = 187155,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[379023] = {
			["source"] = "Hillside Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191240,
		},
		[370072] = {
			["source"] = "Lapisagos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186854,
		},
		[396159] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Burster",
			["npcID"] = 186836,
		},
		[396415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galestrike Proto-Dragon",
			["npcID"] = 187211,
		},
		[369050] = {
			["source"] = "Tarasek Shockshaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191224,
		},
		[377490] = {
			["source"] = "Thunderspine Crasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191057,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[369818] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[393859] = {
			["source"] = "Scalecrawler Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187689,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[378003] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[22938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Remnant",
			["npcID"] = 45728,
		},
		[395908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Icebulk",
			["npcID"] = 192767,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[369055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molka The Grinder",
			["npcID"] = 193443,
		},
		[221356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Stardancer",
			["npcID"] = 111164,
		},
		[371358] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Curator",
			["npcID"] = 187154,
		},
		[198595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Thundercaller",
			["npcID"] = 95842,
		},
		[396423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galestrike Proto-Dragon",
			["npcID"] = 187211,
		},
		[379033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Wardog",
			["npcID"] = 185465,
		},
		[385172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wind Serpent",
			["npcID"] = 191645,
		},
		[372129] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[394891] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Braekkas",
			["npcID"] = 196855,
		},
		[378012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lavacaller Primalist",
			["npcID"] = 186823,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[381593] = {
			["source"] = "Ebonstone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184300,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[387732] = {
			["source"] = "Blazing Firesquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195448,
		},
		[393615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[377503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Seal Keeper",
			["npcID"] = 187155,
		},
		[392337] = {
			["source"] = "Conjured Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186853,
		},
		[389269] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187061,
		},
		[392594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meatgrinder Sotok",
			["npcID"] = 186777,
		},
		[210875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormforged Sentinel",
			["npcID"] = 96574,
		},
		[200901] = {
			["encounterName"] = "Hyrja",
			["source"] = "Solsten",
			["npcID"] = 97219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[396432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Proto-Dragon",
			["npcID"] = 189798,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[392087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stubborn Hornswog",
			["npcID"] = 186834,
		},
		[379044] = {
			["source"] = "Ketess the Pillager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191746,
		},
		[396180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Burster",
			["npcID"] = 186836,
		},
		[221875] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[114646] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[369072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[377512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spiteful Snail",
			["npcID"] = 186833,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["npcID"] = 190187,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[151545] = {
			["source"] = "Bloodmaul Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75210,
		},
		[391837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emerald Warden",
			["npcID"] = 191252,
		},
		[385955] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[395675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[372147] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[267034] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[151548] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[164592] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75198,
		},
		[381357] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hunting Ottuk",
			["npcID"] = 190267,
		},
		[87603] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bolgaff",
			["npcID"] = 47003,
		},
		[396447] = {
			["source"] = "Vicious Rimefang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194120,
		},
		[397726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrieking Whelp",
			["npcID"] = 187159,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[375988] = {
			["source"] = "Amberfur Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192473,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[400542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kalecgos",
			["npcID"] = 193460,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[206921] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[369853] = {
			["source"] = "Burly Rock-Thrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184019,
		},
		[267809] = {
			["source"] = "Forgotten Denizen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136297,
		},
		[79868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Relios the Relic Keeper",
			["npcID"] = 45734,
		},
		[226231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Farseer",
			["npcID"] = 111170,
		},
		[386223] = {
			["source"] = "Primal Stormshield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194896,
		},
		[389804] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Curator",
			["npcID"] = 187154,
		},
		[386991] = {
			["source"] = "Primal Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184869,
		},
		[164597] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75198,
		},
		[389040] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thondrozus",
			["npcID"] = 192769,
		},
		[388529] = {
			["source"] = "Seabreaker Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192931,
		},
		[377532] = {
			["source"] = "Thunderspine Crasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191057,
		},
		[392366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Juggernaut",
			["npcID"] = 197793,
		},
		[377277] = {
			["source"] = "Healing Wing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192221,
		},
		[211401] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["source"] = "Professor Maxdormu",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[269097] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[396717] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[272167] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Bilescourge",
			["npcID"] = 136404,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[369865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[396975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firava the Rekindler",
			["npcID"] = 195915,
		},
		[209485] = {
			["source"] = "Arcane Manifestation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105704,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Image of Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105754,
		},
		[393907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Discordant Watcher",
			["npcID"] = 189149,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[394676] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Icecaller",
			["npcID"] = 198501,
		},
		[215241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Executor",
			["npcID"] = 111621,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[224321] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arc Well",
			["npcID"] = 112664,
		},
		[211406] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[389054] = {
			["source"] = "Arcane Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196694,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[392635] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaurdyth",
			["npcID"] = 197835,
		},
		[394426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Flamecaller",
			["npcID"] = 198503,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[388801] = {
			["source"] = "Risen Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195855,
		},
		[395707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[369365] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[199772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Champion",
			["npcID"] = 97087,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[375249] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bluebill Waddler",
			["npcID"] = 192947,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["source"] = "Stormforged Obliterator",
			["npcID"] = 102019,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[392130] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[396991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[383693] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[210261] = {
			["source"] = "Duskwatch Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104251,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[394436] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shas'ith",
			["npcID"] = 189822,
		},
		[17843] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[376279] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[209495] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[387277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Revenant",
			["npcID"] = 195917,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[206939] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[50648] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Relios the Relic Keeper",
			["npcID"] = 45734,
		},
		[391118] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalebane Lieutenant",
			["npcID"] = 191739,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 99868,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[378843] = {
			["source"] = "Scytherin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191713,
		},
		[199652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Haldor",
			["npcID"] = 95843,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56439,
		},
		[225100] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[224205] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Astral Defender",
			["npcID"] = 112638,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[394959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Acequian",
			["npcID"] = 187617,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[221521] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Resolute Courtesan",
			["npcID"] = 111166,
		},
		[164617] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[384476] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[198888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Storm Drake",
			["npcID"] = 97068,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[386012] = {
			["source"] = "Stormcaller Zarii",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194316,
		},
		[151447] = {
			["source"] = "Bloodmaul Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84978,
		},
		[397010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Honor Guard",
			["npcID"] = 197147,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[387037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Revenant",
			["npcID"] = 195917,
		},
		[391385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Lava Elemental",
			["npcID"] = 182815,
		},
		[386526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nullmagic Hornswog",
			["npcID"] = 187246,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["source"] = "Storm Drake",
			["npcID"] = 97788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[386015] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[157331] = {
			["source"] = "Greater Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77936,
		},
		[225105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shal'dorei Archmage",
			["npcID"] = 112595,
		},
		[395991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Torrent",
			["npcID"] = 197221,
		},
		[396503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[84804] = {
			["source"] = "Forsaken Catapult",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45282,
		},
		[374765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Bloodbeak",
			["npcID"] = 185350,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[198892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Storm Drake",
			["npcID"] = 97068,
		},
		[209378] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[398296] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[391903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Egg Guardian",
			["npcID"] = 190171,
		},
		[361469] = {
			["source"] = "Past Self",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185800,
		},
		[221783] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[369399] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[369400] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[394464] = {
			["source"] = "Piercer Gigra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186511,
		},
		[151581] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75193,
		},
		[211299] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[386026] = {
			["source"] = "Unstable Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194895,
		},
		[384492] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[396001] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[384493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shikaar Ranger",
			["npcID"] = 188414,
		},
		[150048] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Molten Elemental",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74579,
		},
		[386028] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[372474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Skirmisher",
			["npcID"] = 191221,
		},
		[387564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conjured Lasher",
			["npcID"] = 196102,
		},
		[381683] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[80012] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45376,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75786,
		},
		[392682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[396007] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[369921] = {
			["source"] = "Blazing Firesquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195448,
		},
		[381430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Keystone",
			["npcID"] = 189811,
		},
		[386801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grounded Primalist",
			["npcID"] = 187204,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[396520] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rumbling Proto-Dragon",
			["npcID"] = 190069,
		},
		[386546] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 186741,
		},
		[369411] = {
			["source"] = "Cavern Seeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184301,
		},
		[207979] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Jazshariu",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[387826] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[51963] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[369157] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Tarasek",
			["npcID"] = 188372,
		},
		[207980] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[393454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[375296] = {
			["source"] = "Drakonid Crechebound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187131,
		},
		[390897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalepiercer",
			["npcID"] = 186632,
		},
		[84873] = {
			["source"] = "Darktusk Boar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46575,
		},
		[387317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Culler",
			["npcID"] = 190093,
		},
		[396780] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195837,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[379134] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rumbling Primalist",
			["npcID"] = 187172,
		},
		[377344] = {
			["source"] = "Territorial Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192329,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[221153] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pulsauron",
			["npcID"] = 111072,
		},
		[381438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tormented Steam",
			["npcID"] = 188696,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[371976] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[369675] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[274792] = {
			["source"] = "Released Crawg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 140149,
		},
		[386555] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
		},
		[396018] = {
			["source"] = "The Crybaby Hozen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59552,
		},
		[387067] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Construct",
			["npcID"] = 186740,
		},
		[395763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Cauldron Keeper",
			["npcID"] = 186606,
		},
		[396019] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184580,
		},
		[393718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[396020] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[369423] = {
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184303,
		},
		[385024] = {
			["source"] = "Shifty Salamanther",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190243,
		},
		[199034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Aspirant",
			["npcID"] = 101637,
		},
		[377608] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195837,
		},
		[378120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Rock",
			["npcID"] = 192799,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[371983] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[211439] = {
			["encounterName"] = "Gul'dan",
			["source"] = "The Demon Within",
			["npcID"] = 111022,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[374797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Divebeak Ohuna",
			["npcID"] = 189373,
		},
		[383237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Lavaburst",
			["npcID"] = 188666,
		},
		[397048] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostbreath Arachnid",
			["npcID"] = 199333,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[390912] = {
			["source"] = "Vile Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197219,
		},
		[267385] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Tentacle",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135987,
		},
		[377500] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[394749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Storm",
			["npcID"] = 198716,
		},
		[397051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[382696] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186107,
		},
		[224229] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Celestial Acolyte",
			["npcID"] = 112655,
		},
		[199805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormforged Sentinel",
			["npcID"] = 96574,
		},
		[369335] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184107,
		},
		[369465] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[59638] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[369409] = {
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184130,
		},
		[377732] = {
			["source"] = "Refti Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184319,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[211571] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Chaos-Mage",
			["npcID"] = 113012,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184580,
		},
		[3110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zepjub",
			["npcID"] = 416,
		},
		[369946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boneshaper Jardak",
			["npcID"] = 188693,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[87180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Water Elemental",
			["npcID"] = 46820,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[393937] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Discordant Watcher",
			["npcID"] = 189149,
		},
		[369828] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[369823] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[369674] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[389247] = {
			["source"] = "Blacktalon Avenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187187,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[224488] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Nobleborn Warpcaster",
			["npcID"] = 112676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1871,
		},
		[387596] = {
			["source"] = "Risen Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195877,
		},
		[217583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Executor",
			["npcID"] = 111621,
		},
		[203750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Chronomaton",
			["npcID"] = 111622,
		},
		[152183] = {
			["source"] = "Slagna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75406,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74571,
		},
		[152427] = {
			["source"] = "Magma Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75211,
		},
		[152298] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75820,
		},
		[151566] = {
			["source"] = "Bloodmaul Magma Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74349,
		},
		[151558] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["npcID"] = 194990,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[167385] = {
			["source"] = "Dungeoneer's Training Dummy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194644,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[375945] = {
			["source"] = "Wild Argali",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188292,
		},
		[395784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[188046] = {
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198489,
		},
		[396552] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[373279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thing From Beyond",
			["npcID"] = 189988,
		},
		[390926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barker",
			["npcID"] = 194515,
		},
		[376860] = {
			["source"] = "Lapisagos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186854,
		},
		[391849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Sentry",
			["npcID"] = 186736,
		},
		[396775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klozicc the Ascended",
			["npcID"] = 187209,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[84662] = {
			["source"] = "Korok the Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45301,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74570,
		},
		[370212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Wallcrasher",
			["npcID"] = 187813,
		},
		[378397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earth Elemental",
			["npcID"] = 187322,
		},
		[394102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[382233] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74570,
		},
		[393998] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Discordant Watcher",
			["npcID"] = 189149,
		},
		[104318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Imp",
			["npcID"] = 55659,
		},
		[373027] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[396812] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196576,
		},
		[397043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[378143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 191844,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[209404] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[84868] = {
			["source"] = "Ferocious Grizzled Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1778,
		},
		[369193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Mender",
			["npcID"] = 186602,
		},
		[388886] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197905,
		},
		[381659] = {
			["source"] = "Seereel, the Spring",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193710,
		},
		[396559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[164615] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[382749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stubborn Hornswog",
			["npcID"] = 186834,
		},
		[396751] = {
			["source"] = "Moth'go Deeploom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193735,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[392724] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[267360] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[377765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galestrike Primalist",
			["npcID"] = 187175,
		},
		[269131] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[268347] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[391958] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cloying Gale",
			["npcID"] = 198126,
		},
		[269399] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[317791] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[369197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zhurtan the Riverboiler",
			["npcID"] = 188687,
		},
		[391959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[395797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Frostsculptor",
			["npcID"] = 198424,
		},
		[373034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muck Brawler",
			["npcID"] = 192630,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["npcID"] = 194999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[396400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[205361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krosus",
			["npcID"] = 101002,
		},
		[378150] = {
			["source"] = "Primalist Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189869,
		},
		[387613] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195842,
		},
		[390938] = {
			["source"] = "Aggravated Skitterfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197406,
		},
		[389273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[387614] = {
			["source"] = "Ukhel Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195851,
		},
		[151697] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75426,
		},
		[270481] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[396774] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klozicc the Ascended",
			["npcID"] = 187209,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[373405] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[200969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Tor",
			["npcID"] = 97084,
		},
		[384291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ayanga",
			["npcID"] = 192961,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["npcID"] = 95833,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[386849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[369925] = {
			["source"] = "Transformed Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197225,
		},
		[384292] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Thunder Caller",
			["npcID"] = 194647,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[391665] = {
			["source"] = "Ash Bugsbane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197292,
		},
		[396313] = {
			["source"] = "Nokhud Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185147,
		},
		[231532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pyrestar Demolisher",
			["npcID"] = 114845,
		},
		[209410] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[396825] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[395035] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[377900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Skullhauler",
			["npcID"] = 199298,
		},
		[209027] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[377389] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[191508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Aspirant",
			["npcID"] = 101637,
		},
		[396315] = {
			["source"] = "Nokhud Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185147,
		},
		[391793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Furious Deluge",
			["npcID"] = 197220,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[370054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmammoth Bull",
			["npcID"] = 186728,
		},
		[396316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[384296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ayanga",
			["npcID"] = 192961,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[394706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Frost",
			["npcID"] = 198702,
		},
		[396317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56762,
		},
		[373395] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[200205] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reaves",
			["npcID"] = 101462,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[394731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Earth",
			["npcID"] = 198709,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[224246] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Celestial Acolyte",
			["npcID"] = 112655,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[375423] = {
			["source"] = "Infused Tarasek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181310,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[209413] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[388392] = {
			["source"] = "Unruly Textbook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196044,
		},
		[390256] = {
			["source"] = "Nokhud Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192340,
		},
		[375605] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Construct",
			["npcID"] = 185272,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["npcID"] = 197145,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[375094] = {
			["source"] = "Hornstrider Runner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195905,
		},
		[375201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Divebeak Ohuna",
			["npcID"] = 189373,
		},
		[386675] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[395811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Pillager",
			["npcID"] = 190983,
		},
		[390952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grand Flame",
			["npcID"] = 188009,
		},
		[390150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[387629] = {
			["source"] = "Desecrated Ohuna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195876,
		},
		[372539] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[393511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldronbearer Blakor",
			["npcID"] = 186783,
		},
		[396836] = {
			["source"] = "Colossal Glacier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194798,
		},
		[396069] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshard",
			["npcID"] = 185647,
		},
		[214692] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[377609] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cleff",
			["npcID"] = 194514,
		},
		[9532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muckgill",
			["npcID"] = 47759,
		},
		[387049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Dragon",
			["npcID"] = 194089,
		},
		[377912] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[369107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Construct",
			["npcID"] = 185272,
		},
		[224378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Celestial Acolyte",
			["npcID"] = 112655,
		},
		[212997] = {
			["encounterName"] = "Tichondrius",
			["source"] = "Tichondrius",
			["npcID"] = 103685,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1862,
		},
		[396327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[395756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Flameslinger",
			["npcID"] = 196336,
		},
		[395816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Wallcrasher",
			["npcID"] = 187813,
		},
		[388911] = {
			["source"] = "Spellbound Battleaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196577,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[394795] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molka The Grinder",
			["npcID"] = 193443,
		},
		[396073] = {
			["source"] = "The Nodding Tiger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59544,
		},
		[387122] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Construct",
			["npcID"] = 186740,
		},
		[391470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lockjaw",
			["npcID"] = 194459,
		},
		[393772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hihveer",
			["npcID"] = 188717,
		},
		[211464] = {
			["source"] = "Felbound Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104278,
		},
		[396330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[378428] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Rubble",
			["npcID"] = 194212,
		},
		[395819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[396075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Torrent",
			["npcID"] = 197221,
		},
		[209033] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104246,
		},
		[386024] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[206222] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[198962] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Runecarver",
			["npcID"] = 96664,
		},
		[387125] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[397100] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[225404] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Trained Shadescale",
			["npcID"] = 112804,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1871,
		},
		[198934] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Mystic",
			["npcID"] = 95834,
		},
		[386072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[396078] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Destroyer",
			["npcID"] = 193288,
		},
		[387127] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[394800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Earthcaller",
			["npcID"] = 198500,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["npcID"] = 197145,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[369901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 186965,
		},
		[224510] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Battle-Magus",
			["npcID"] = 112671,
		},
		[389686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Fury",
			["npcID"] = 187160,
		},
		[394802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Stormcaller",
			["npcID"] = 198502,
		},
		[192158] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["npcID"] = 97202,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[377411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimblewing Striker",
			["npcID"] = 192938,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[377923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Elemental",
			["npcID"] = 186570,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104918,
		},
		[393780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[377105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Guard",
			["npcID"] = 190510,
		},
		[370766] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Thrasher",
			["npcID"] = 187139,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[393781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[395061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molka The Grinder",
			["npcID"] = 193443,
		},
		[370764] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Fury",
			["npcID"] = 187160,
		},
		[85147] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forsaken Catapult",
			["npcID"] = 45601,
		},
		[215433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Mystic",
			["npcID"] = 95834,
		},
		[212492] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Spellblade Aluriel",
			["npcID"] = 104881,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1871,
		},
		[372045] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Caustic Spiderling",
			["npcID"] = 189233,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[192288] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["npcID"] = 97202,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[393783] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskakx",
			["npcID"] = 192761,
		},
		[389947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Brute",
			["npcID"] = 185168,
		},
		[377927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 192690,
		},
		[383298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Lava Elemental",
			["npcID"] = 182815,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[211470] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[387135] = {
			["source"] = "Primalist Arcblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194898,
		},
		[393787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskakx",
			["npcID"] = 192761,
		},
		[378995] = {
			["source"] = "Ketess the Pillager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191746,
		},
		[389949] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Teerai Battlemaster",
			["npcID"] = 191494,
		},
		[224387] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sidereal Familiar",
			["npcID"] = 112718,
		},
		[382277] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[397878] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[200218] = {
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101462,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[377419] = {
			["source"] = "Kurog Grimtotem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189914,
		},
		[397112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Proto-Dragon",
			["npcID"] = 191705,
		},
		[225410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Withered Skulker",
			["npcID"] = 113128,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[370259] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earth Elemental",
			["npcID"] = 187322,
		},
		[391998] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baron Ashflow",
			["npcID"] = 192274,
		},
		[396346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Brute",
			["npcID"] = 185168,
		},
		[377421] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimblewing Striker",
			["npcID"] = 192938,
		},
		[397881] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[372800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expedition Guardian",
			["npcID"] = 187125,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[377166] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[387652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frozen Revenant",
			["npcID"] = 187203,
		},
		[211473] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[369750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[394558] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Flame",
			["npcID"] = 198577,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[368984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldronbearer Blakor",
			["npcID"] = 186783,
		},
		[369751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Djaradin",
			["npcID"] = 195032,
		},
		[387398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Obsidian Guardian",
			["npcID"] = 189489,
		},
		[387843] = {
			["source"] = "Spectral Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196202,
		},
		[387910] = {
			["source"] = "Algeth'ar Echoknight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196200,
		},
		[395872] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[198959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Runecarver",
			["npcID"] = 96664,
		},
		[372310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[125056] = {
			["source"] = "Faultline",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 165189,
		},
		[224390] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sidereal Familiar",
			["npcID"] = 112718,
		},
		[397886] = {
			["source"] = "Corrupt Droplet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 62358,
		},
		[221577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Farseer",
			["npcID"] = 111170,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 95674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[387145] = {
			["source"] = "Stormcaller Zarii",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194316,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[205370] = {
			["encounterName"] = "Krosus",
			["source"] = "Krosus",
			["npcID"] = 101002,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1842,
		},
		[79971] = {
			["source"] = "Master Sergeant Pietro Zaren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45405,
		},
		[198944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Shieldmaiden",
			["npcID"] = 95832,
		},
		[393540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zhurtan the Riverboiler",
			["npcID"] = 188687,
		},
		[397888] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[390983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[371005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Thrasher",
			["npcID"] = 187139,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[397889] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[383823] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[396355] = {
			["source"] = "Rimetalon Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195752,
		},
		[221464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chaos Mage Beleron",
			["npcID"] = 111225,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[211477] = {
			["source"] = "Legion Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104277,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[384336] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[191401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Marksman",
			["npcID"] = 96640,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["source"] = "Primal Flame",
			["npcID"] = 187593,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[267459] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Forgotten Denizen",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136083,
		},
		[224515] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Nobleborn Warpcaster",
			["npcID"] = 112676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1871,
		},
		[397892] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[390988] = {
			["source"] = "Blazing Firesquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195448,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[386640] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Looter",
			["npcID"] = 187242,
		},
		[388942] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[389430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[397914] = {
			["source"] = "Depraved Mistweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200137,
		},
		[373392] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[118905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Capacitor Totem",
			["npcID"] = 61245,
		},
		[396360] = {
			["source"] = "Rimetalon Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195752,
		},
		[377179] = {
			["source"] = "Windscourge Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190230,
		},
		[377435] = {
			["source"] = "Time-Lost Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187265,
		},
		[374112] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Frostbreath Arachnid",
			["npcID"] = 189234,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[390223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Tarasek",
			["npcID"] = 187089,
		},
		[387410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Three-Card",
			["npcID"] = 194519,
		},
		[387683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frozen Revenant",
			["npcID"] = 187203,
		},
		[372082] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[387411] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[397897] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Jazshariu",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[374135] = {
			["source"] = "Desiccated Deer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193420,
		},
		[397110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbound Colossus",
			["npcID"] = 187843,
		},
		[381530] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[247041] = {
			["source"] = "Seereel, the Spring",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193710,
		},
		[204448] = {
			["encounterName"] = "Skorpyron",
			["source"] = "Skorpyron",
			["npcID"] = 102263,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1849,
		},
		[391136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[397899] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[378454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Stonekin",
			["npcID"] = 194291,
		},
		[378420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Displaced Earth",
			["npcID"] = 187393,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[221584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Farseer",
			["npcID"] = 111170,
		},
		[393307] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[396366] = {
			["source"] = "Rimetalon Spellflinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195756,
		},
		[392530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quarry Infuser",
			["npcID"] = 197799,
		},
		[79721] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45376,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[393298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Colossus",
			["npcID"] = 188673,
		},
		[394833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmammoth Bull",
			["npcID"] = 186728,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74571,
		},
		[375652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Tender",
			["npcID"] = 196115,
		},
		[372839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Spearman",
			["npcID"] = 191227,
		},
		[395857] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Stonemender",
			["npcID"] = 187600,
		},
		[388696] = {
			["source"] = "Moth'go Deeploom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193735,
		},
		[374892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tamed Magmammoth Calf",
			["npcID"] = 197224,
		},
		[28993] = {
			["source"] = "Nightlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46981,
		},
		[381280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uktulut Trainee",
			["npcID"] = 193204,
		},
		[371306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 186741,
		},
		[374885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Attendant",
			["npcID"] = 189555,
		},
		[396370] = {
			["source"] = "Rimetalon Spellflinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195756,
		},
		[386146] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[395859] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[392579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quarry Stonebreaker",
			["npcID"] = 197831,
		},
		[392279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Dragon",
			["npcID"] = 194089,
		},
		[393305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthwarden",
			["npcID"] = 193709,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[383073] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[392280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaurdyth",
			["npcID"] = 197835,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[397907] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[371565] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Windscourge",
			["npcID"] = 195854,
		},
		[397394] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[317792] = {
			["source"] = "Magus of the Dead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 163366,
		},
		[397904] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[199210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Marksman",
			["npcID"] = 96640,
		},
		[389213] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[395097] = {
			["source"] = "Makhra the Ashtouched",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195409,
		},
		[376426] = {
			["source"] = "Conjured Stormling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181840,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[393306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthwarden",
			["npcID"] = 193709,
		},
		[392539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Terrasentry",
			["npcID"] = 197801,
		},
		[381535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Keystone",
			["npcID"] = 189811,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[371824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[225407] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Withered Skulker",
			["npcID"] = 113128,
		},
		[371313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Destructive Flames",
			["npcID"] = 188174,
		},
		[384868] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[371812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[209477] = {
			["source"] = "Mana Wyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105703,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["npcID"] = 95833,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[388706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Storm Elemental",
			["npcID"] = 191235,
		},
		[192563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Purifier",
			["npcID"] = 97197,
		},
		[375919] = {
			["source"] = "Scythid Steamstalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182008,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[221591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Stardancer",
			["npcID"] = 111164,
		},
		[373618] = {
			["source"] = "Hypnosis Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190174,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[199050] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Shieldmaiden",
			["npcID"] = 95832,
		},
		[10277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torn Fin Coastrunner",
			["npcID"] = 2375,
		},
		[398300] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[373364] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[57984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greater Fire Elemental",
			["npcID"] = 95061,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[395871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Stonemender",
			["npcID"] = 187600,
		},
		[199726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Ranulf",
			["npcID"] = 97083,
		},
		[383084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Primalist",
			["npcID"] = 190066,
		},
		[394593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Lancer",
			["npcID"] = 193198,
		},
		[267997] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194367,
		},
		[154331] = {
			["source"] = "Grove Cultivator Kados",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133104,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Ancient Branch",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196548,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[377971] = {
			["source"] = "Massive Thresher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191951,
		},
		[384365] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[396856] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firava the Rekindler",
			["npcID"] = 195915,
		},
		[380487] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[369788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Pillager",
			["npcID"] = 190983,
		},
		[370104] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Protector",
			["npcID"] = 186600,
		},
		[397109] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbound Colossus",
			["npcID"] = 187843,
		},
		[375671] = {
			["source"] = "Hoary Icicle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194797,
		},
		[78509] = {
			["source"] = "Bloodfang Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44547,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[377383] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[218806] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Solarist Tel'arn",
			["npcID"] = 109038,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[396388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[157348] = {
			["source"] = "Greater Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77936,
		},
		[382578] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[345495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frothing Pustule",
			["npcID"] = 175519,
		},
		[395878] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[387950] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Caldera Stomper",
			["npcID"] = 187919,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 95674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[396646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[375591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbling Sapling",
			["npcID"] = 191313,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[372862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Splash",
			["npcID"] = 185645,
		},
		[387440] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[212031] = {
			["source"] = "Bound Energy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105705,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Strife",
			["encounterID"] = 1417,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59051,
		},
		[389270] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195884,
		},
		[3396] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hungry Mine Creeper",
			["npcID"] = 47662,
		},
		[388976] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[214181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Putrid Sludge",
			["npcID"] = 112251,
		},
		[31707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[88421] = {
			["source"] = "Forest Ettin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44367,
		},
		[205486] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[183108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Luddy Quicksnap",
			["npcID"] = 193292,
		},
		[391791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Furious Deluge",
			["npcID"] = 197220,
		},
		[387955] = {
			["source"] = "Ethereal Restorer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196203,
		},
		[388863] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[205231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkglare",
			["npcID"] = 103673,
		},
		[383864] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baron Ashflow",
			["npcID"] = 192274,
		},
		[388862] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[79854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worgen Battlemage",
			["npcID"] = 45483,
		},
		[397931] = {
			["source"] = "Minion of Doubt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 57109,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[394607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Lancer",
			["npcID"] = 193198,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[383866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Droplet",
			["npcID"] = 194526,
		},
		[385145] = {
			["source"] = "Time-Lost Raptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187256,
		},
		[135029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[79881] = {
			["source"] = "Worgen Rebel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45292,
		},
		[218148] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Solarist Tel'arn",
			["npcID"] = 109038,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[54633] = {
			["source"] = "Fenwick Thatros",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47008,
		},
		[391915] = {
			["source"] = "Cragsworn Stoneshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195838,
		},
		[375459] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Rumbler",
			["npcID"] = 192941,
		},
		[387960] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Caldera Stomper",
			["npcID"] = 187919,
		},
		[395377] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thondrozus",
			["npcID"] = 192769,
		},
		[389495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[199674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Bjorn",
			["npcID"] = 97081,
		},
		[381701] = {
			["source"] = "Seereel, the Spring",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193710,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[86249] = {
			["source"] = "7th Legion Submariner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45403,
		},
		[397011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Honor Guard",
			["npcID"] = 197147,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[395273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Stormsentry",
			["npcID"] = 196856,
		},
		[396925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 197149,
		},
		[394972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavabearer",
			["npcID"] = 197148,
		},
		[397014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Emissary",
			["npcID"] = 197146,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[79607] = {
			["source"] = "Skitterweb Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44906,
		},
		[381570] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Keystone",
			["npcID"] = 189811,
		},
		[378757] = {
			["source"] = "Scytherin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191713,
		},
		[369806] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[387453] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[151965] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75191,
		},
		[208944] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["source"] = "Elisande",
			["npcID"] = 106643,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1872,
		},
		[377991] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[395241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Voltweaver",
			["npcID"] = 198868,
		},
		[221604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Stardancer",
			["npcID"] = 111164,
		},
		[395254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Tempestmaker",
			["npcID"] = 198878,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[391382] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 197671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[395899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Chillblaster",
			["npcID"] = 199124,
		},
		[395987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jumping Spiderling",
			["npcID"] = 199182,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75786,
		},
		[87179] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dalaran Summoner",
			["npcID"] = 2358,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[79858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dalaran Summoner",
			["npcID"] = 2358,
		},
	},
	["profileKeys"] = {
		["Dekae - Area 52"] = "Default",
		["Conforse - Area 52"] = "Default",
		["Rokiritan - Area 52"] = "Default",
		["Artefakt - Area 52"] = "Default",
		["Adenydd - Area 52"] = "Fragnance Plater",
		["Mullton - Area 52"] = "Default",
		["Kolefield - Area 52"] = "Jundies Plater",
	},
	["profiles"] = {
		["Jundies Plater"] = {
			["target_shady_combat_only"] = false,
			["aura_breakline_space"] = 1,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1670809382,
					["NpcNames"] = {
					},
					["url"] = "",
					["Icon"] = -13828,
					["Options"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 272,
					["semver"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
						350857, -- [4]
						352016, -- [5]
						235308, -- [6]
						235089, -- [7]
						367573, -- [8]
						362020, -- [9]
						232156, -- [10]
						374779, -- [11]
						113309, -- [12]
						117665, -- [13]
						379256, -- [14]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["Enabled"] = true,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        \n        --Shadowlands Open World - Korthia\n        [180013] = {20}, --Escaped Wilderling\n        [179931] = {80, 60}, --Relic Breaker krelva\n        \n        --Dragonflight Open World\n        \n        [193532] = {40}, --Bazual, The Dreaded Flame\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n        --                                                                                ***DUNGEONS***\n        \n        --DRAGONFLIGHT DUNGEONS\n        \n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein\n        [193435] = {50}, --Kyrakka\n        [188252] = {66,33}, --Melidrussa Chillworn\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul\n        \n        --Brackenhide Hollow\n        [186125] = {30}, --Tricktotem\n        [186122] = {30}, --Rira Hackclaw\n        [186124] = {30}, --Gashtooth\n        \n        --Halls of Infusion\n        [189719] = {15}, --Watcher Irideus\n        \n        --The Nokhud Offensive\n        [186151] = {60}, --Balakar Khan\n        \n        --Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon\n        \n        --Temple of the Jade Serpent\n        [56732] = {30}, --Liu Flameheart\n        \n        \n        \n        --LEGION DUNGEONS\n        \n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel\n        [99868] = {60}, --Fenryr\n        [95676] = {80}, --Odyn\n        [94960] = {10}, --Hymdall \n        \n        \n        --Karazhan\n        [114790] = {66, 33}, --Viz'aduum the Watcher\n        [114312] = {60}, -- Moroes\n        \n        \n        \n        --SHADOWLANDS DUNGEONS\n        \n        \n        --Theater of pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, -- Sathel the Accursed\n        [165946]= {50}, -- Mordretha\n        \n        --Mists of TIrna Scithe\n        [164804] = {22}, -- Droman Oulfarran\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, -- Drust Boughbreaker\n        \n        --Plaguefall\n        [164267] =  {66, 33}, --Magrave Stradama\n        [164967] =  {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        \n        --WOD DUNGEONS\n        \n        --Grimrail Depot\n        [79545] = {60}, --Nitrogg Thundertower\n        \n        \n        \n        --BFA DUNGEONS\n        \n        --Mechagon\n        [144298] = {30}, --Defense Bot Mk III (casts a shield)\n        \n        \n        --                                                                                  ***RAIDS***\n        \n        \n        \n        --VAULT OF THE INCARNATES\n        \n        --Kurog Grimtotem\n        [181378] = {66, 33},\n        \n        \n        \n        \n        --Sepulcher of the First Ones\n        \n        --Prototype Pantheon\n        [181548] = {40}, --Absolution\n        [181551] = {40}, --Duty\n        [181546] = {40}, --Renewal\n        [181549] = {40}, --War\n        \n        --Artificer Xymox\n        [183501] = {75, 50}, --Xymox\n        \n        --Halondrus the Reclaimer\n        [180906] = {78, 45}, --Halondrus\n        \n        --Anduin Wrynn\n        [183671] = {40}, --Monstrous Soul\n        \n        [185421] = {15}, --The Jailer\n        \n        \n        --[163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        \n        --Castle Nathria\n        \n        --Sanctum of domination\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo\n        [176523] = {70, 40}, --Painsmith\n        [175725] = {66, 33}, --Eye of the Jailer\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n        \n        \n        [166969] = {50}, --Council of Blood - Frieda\n        [166970] = {50}, --Council of Blood - Stavros\n        [166971] = {50}, --Council of Blood - Niklaus\n        --Sire Denathrius\n        [167406] = {70.5, 37.5}, --Sire Denathrius\n        [173162] = {66,33}, --Lord Evershade\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1670378988,
					["Icon"] = -13520,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        \n        --Shadowlands Open World - Korthia\n        [180013] = {20}, --Escaped Wilderling\n        [179931] = {80, 60}, --Relic Breaker krelva\n        \n        --Dragonflight Open World\n        \n        [193532] = {40}, --Bazual, The Dreaded Flame\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n        --                                                                                ***DUNGEONS***\n        \n        --DRAGONFLIGHT DUNGEONS\n        \n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein\n        [193435] = {50}, --Kyrakka\n        [188252] = {66,33}, --Melidrussa Chillworn\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul\n        \n        --Brackenhide Hollow\n        [186125] = {30}, --Tricktotem\n        [186122] = {30}, --Rira Hackclaw\n        [186124] = {30}, --Gashtooth\n        \n        --Halls of Infusion\n        [189719] = {15}, --Watcher Irideus\n        \n        --The Nokhud Offensive\n        [186151] = {60}, --Balakar Khan\n        \n        --Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon\n        \n        --Temple of the Jade Serpent\n        [56732] = {30}, --Liu Flameheart\n        \n        \n        \n        --LEGION DUNGEONS\n        \n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel\n        [99868] = {60}, --Fenryr\n        [95676] = {80}, --Odyn\n        [94960] = {10}, --Hymdall \n        \n        \n        --Karazhan\n        [114790] = {66, 33}, --Viz'aduum the Watcher\n        [114312] = {60}, -- Moroes\n        \n        \n        \n        --SHADOWLANDS DUNGEONS\n        \n        \n        --Theater of pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, -- Sathel the Accursed\n        [165946]= {50}, -- Mordretha\n        \n        --Mists of TIrna Scithe\n        [164804] = {22}, -- Droman Oulfarran\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, -- Drust Boughbreaker\n        \n        --Plaguefall\n        [164267] =  {66, 33}, --Magrave Stradama\n        [164967] =  {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        \n        --WOD DUNGEONS\n        \n        --Grimrail Depot\n        [79545] = {60}, --Nitrogg Thundertower\n        \n        \n        \n        --BFA DUNGEONS\n        \n        --Mechagon\n        [144298] = {30}, --Defense Bot Mk III (casts a shield)\n        \n        \n        --                                                                                  ***RAIDS***\n        \n        \n        \n        --VAULT OF THE INCARNATES\n        \n        --Kurog Grimtotem\n        [181378] = {66, 33},\n        \n        \n        \n        \n        --Sepulcher of the First Ones\n        \n        --Prototype Pantheon\n        [181548] = {40}, --Absolution\n        [181551] = {40}, --Duty\n        [181546] = {40}, --Renewal\n        [181549] = {40}, --War\n        \n        --Artificer Xymox\n        [183501] = {75, 50}, --Xymox\n        \n        --Halondrus the Reclaimer\n        [180906] = {78, 45}, --Halondrus\n        \n        --Anduin Wrynn\n        [183671] = {40}, --Monstrous Soul\n        \n        [185421] = {15}, --The Jailer\n        \n        \n        --[163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        \n        --Castle Nathria\n        \n        --Sanctum of domination\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo\n        [176523] = {70, 40}, --Painsmith\n        [175725] = {66, 33}, --Eye of the Jailer\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n        \n        \n        [166969] = {50}, --Council of Blood - Frieda\n        [166970] = {50}, --Council of Blood - Stavros\n        [166971] = {50}, --Council of Blood - Niklaus\n        --Sire Denathrius\n        [167406] = {70.5, 37.5}, --Sire Denathrius\n        [173162] = {66,33}, --Lord Evershade\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"166644", -- [1]
						"164267", -- [2]
						"166969", -- [3]
						"166970", -- [4]
						"162061", -- [5]
						"164804", -- [6]
						"164926", -- [7]
						"166971", -- [8]
						"164967", -- [9]
						"167406", -- [10]
						"173162", -- [11]
						"169861", -- [12]
						"175730", -- [13]
						"175725", -- [14]
						"176523", -- [15]
						"180013", -- [16]
						"179931", -- [17]
						"176929", -- [18]
						"116410", -- [19]
						"116409", -- [20]
						"180906", -- [21]
						"181548", -- [22]
						"181551", -- [23]
						"181546", -- [24]
						"181549", -- [25]
						"183501", -- [26]
						"183671", -- [27]
						"114790", -- [28]
						"144298", -- [29]
						"79545", -- [30]
						"114312", -- [31]
						"193435", -- [32]
						"190485", -- [33]
						"186738", -- [34]
						"96574", -- [35]
						"99868", -- [36]
						"95676", -- [37]
						"186125", -- [38]
						"186124", -- [39]
						"186122", -- [40]
						"189719", -- [41]
						"188252", -- [42]
						"186151", -- [43]
						"184422", -- [44]
						"181378", -- [45]
						"94960", -- [46]
						"56732", -- [47]
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 470,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Name"] = "Unit - Health Markers [P]",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["url"] = "",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
						["fontColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["fontSize"] = 12,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Time"] = 1670378989,
					["Icon"] = 136048,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["NpcNames"] = {
						"171557", -- [1]
						"162060", -- [2]
						"168318", -- [3]
						"184140", -- [4]
						"182169", -- [5]
						"196482", -- [6]
						"186120", -- [7]
						"186116", -- [8]
						"189729", -- [9]
						"189901", -- [10]
						"197025", -- [11]
						"190496", -- [12]
						"189813", -- [13]
						"190245", -- [14]
						"184972", -- [15]
						"184986", -- [16]
						"164558", -- [17]
						"186737", -- [18]
						"186616", -- [19]
						"186615", -- [20]
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 469,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Name"] = "Unit - Show Energy [Plater]",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["url"] = "",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -115, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--166251  ---- Potentially explosive orb? need to test",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["nameplateColor"] = {
							0.86666666666667, -- [1]
							0.43529411764706, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = true,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1670756261,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -115, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--166251  ---- Potentially explosive orb? need to test",
					["Icon"] = -14046,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["Revision"] = 774,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Outline Test",
						}, -- [8]
					},
					["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"174773", -- [1]
						"164702", -- [2]
						"166251", -- [3]
						"165913", -- [4]
						"167898", -- [5]
						"56792", -- [6]
						"194745", -- [7]
					},
					["Prio"] = 99,
					["Name"] = "Spiteful/Fixate Name&Glow",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Enabled"] = true,
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1670754008,
					["Icon"] = 413591,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "1.0.3",
					["Enabled"] = true,
					["Revision"] = 264,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["Name"] = "Pandemic Glow (Pixel)",
					["Author"] = "Viash-Thrall",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
					["version"] = 4,
					["Prio"] = 99,
					["SpellIds"] = {
						292711, -- [1]
						278946, -- [2]
						212463, -- [3]
						284402, -- [4]
						284401, -- [5]
						2818, -- [6]
						703, -- [7]
						1943, -- [8]
						295425, -- [9]
						283668, -- [10]
						316220, -- [11]
						258179, -- [12]
						207690, -- [13]
						315341, -- [14]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["url"] = "https://wago.io/JcByzfZtU/4",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
						["useCastbarColor"] = false,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670753986,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 824,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["Name"] = "Cast - Very Important [Plater]",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						268030, -- [18]
						257784, -- [19]
						337943, -- [20]
						320822, -- [21]
						333292, -- [22]
						341840, -- [23]
						324987, -- [24]
						333478, -- [25]
						178072, -- [26]
						330438, -- [27]
						329423, -- [28]
						350287, -- [29]
						334928, -- [30]
						348428, -- [31]
						330532, -- [32]
						358980, -- [33]
						351073, -- [34]
						358026, -- [35]
						357144, -- [36]
						351603, -- [37]
						356023, -- [38]
						330513, -- [39]
						334076, -- [40]
						237946, -- [41]
						237952, -- [42]
						312262, -- [43]
						242733, -- [44]
						362628, -- [45]
						316443, -- [46]
						356031, -- [47]
						356011, -- [48]
						356001, -- [49]
						355642, -- [50]
						355644, -- [51]
						355782, -- [52]
						355057, -- [53]
						356133, -- [54]
						357260, -- [55]
						357284, -- [56]
						347015, -- [57]
						355139, -- [58]
						336451, -- [59]
						364240, -- [60]
						364241, -- [61]
						361923, -- [62]
						368063, -- [63]
						356407, -- [64]
						363024, -- [65]
						355584, -- [66]
						334664, -- [67]
						340300, -- [68]
						366288, -- [69]
						232120, -- [70]
						228554, -- [71]
						228009, -- [72]
						228025, -- [73]
						228019, -- [74]
						227977, -- [75]
						228278, -- [76]
						228280, -- [77]
						228567, -- [78]
						29339, -- [79]
						169341, -- [80]
						162415, -- [81]
						340037, -- [82]
						373513, -- [83]
						373618, -- [84]
						167232, -- [85]
						227646, -- [86]
						375606, -- [87]
						386549, -- [88]
						385568, -- [89]
						385393, -- [90]
						388211, -- [91]
						211464, -- [92]
						215433, -- [93]
						371983, -- [94]
						373405, -- [95]
						391599, -- [96]
						387627, -- [97]
						375653, -- [98]
						388392, -- [99]
						387862, -- [100]
						392457, -- [101]
						396812, -- [102]
						383823, -- [103]
						371624, -- [104]
						393309, -- [105]
						393296, -- [106]
						391268, -- [107]
						393429, -- [108]
						374623, -- [109]
						390548, -- [110]
						391019, -- [111]
						387615, -- [112]
						152818, -- [113]
						225100, -- [114]
						210261, -- [115]
						212784, -- [116]
						392486, -- [117]
						397889, -- [118]
						395859, -- [119]
						385331, -- [120]
						388804, -- [121]
						156718, -- [122]
						398206, -- [123]
						198959, -- [124]
						106856, -- [125]
						106864, -- [126]
						397394, -- [127]
						367500, -- [128]
						377488, -- [129]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["url"] = "",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["Time"] = 1670753987,
					["Icon"] = 135801,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "1.0.0",
					["Enabled"] = true,
					["Revision"] = 155,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Name"] = "Change Color on Debuff",
					["Author"] = "Nephuhlim-Illidan",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["version"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
						228287, -- [1]
						295311, -- [2]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["url"] = "https://wago.io/QmFFPeSSS/1",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [11]
			},
			["npcs_renamed"] = {
				["162691"] = "Blightboner",
				["185680"] = "Haste Relic",
				["175663"] = "Hill Brad",
				["181549"] = "War",
				["178141"] = "Fish Dicker",
				["164967"] = "Dickus",
				["185683"] = "Speed Relic",
				["167731"] = "Separator",
				["185610"] = "Simp",
				["179733"] = "Fish Dick",
				["185685"] = "CDR Relic",
				["180015"] = "Dickhand",
				["190128"] = "Zul'gondeez",
				["175646"] = "S.U.C.C. Master",
				["180990"] = "Jailer",
				["164705"] = "Haste Slime",
				["178171"] = "Don't Pull Me",
				["181546"] = "Renewal",
				["163891"] = "Bad Slime",
				["168969"] = "Green Slime",
				["70245"] = "uh oh",
				["168153"] = "Plaguecock",
				["165010"] = "Purple Slime",
				["179334"] = "Not the boss",
				["184911"] = "CDR Boi",
				["32666"] = "Uh oh",
				["184908"] = "Haste Boi",
				["164707"] = "Purple Slime",
				["168310"] = "Plaguecock",
				["164501"] = "Mute Me",
				["181548"] = "Absolution",
				["176523"] = "Painsmith",
				["179842"] = "Assclapper",
				["165946"] = "Mordretha",
				["182169"] = "Lithium",
				["175806"] = "Sa'lami",
				["184910"] = "Speed Boi",
				["173044"] = "Stitcher",
				["164804"] = "Simp Tree",
				["180773"] = "Trash Can",
				["176394"] = "Worker",
				["181224"] = "Da Sausage",
				["181551"] = "Duty",
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:352: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:348>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:143: in function <Interface/SharedXML/CallbackRegistry.lua:142>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:146: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:301: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:300>\n",
				["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8338",
				["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:2098",
			},
			["url"] = "https://wago.io/ak3iS95aa/71",
			["aura_stack_anchor"] = {
				["y"] = 4.1399993896484,
				["x"] = 8.6299991607666,
				["side"] = 12,
			},
			["health_cutoff_upper"] = false,
			["cast_statusbar_spark_alpha"] = 0.5,
			["aura2_y_offset"] = 1.3000030517578,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["spellname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["percent_text_font"] = "Expressway",
					["power_percent_text_font"] = "Expressway",
				},
				["friendlyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["actorname_friend_color"] = {
						0.70980392156863, -- [1]
					},
					["actorname_text_size"] = 9,
					["actorname_use_class_color"] = true,
					["cast"] = {
						132, -- [1]
						2, -- [2]
					},
					["level_text_alpha"] = 0.29999998211861,
					["actorname_text_spacing"] = 8,
					["only_damaged"] = false,
					["actorname_guild_color"] = {
						0.49803921568627, -- [1]
					},
					["cast_incombat"] = {
						132, -- [1]
						2, -- [2]
					},
					["health_incombat"] = {
						132, -- [1]
						16, -- [2]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["only_thename"] = true,
					["percent_text_font"] = "Naowh",
					["level_text_font"] = "Naowh",
					["spellname_text_font"] = "Expressway",
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Naowh",
					["cast"] = {
						132, -- [1]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 9,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["enabled"] = false,
					["percent_text_show_decimals"] = false,
					["cast_incombat"] = {
						132, -- [1]
						10, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 11,
					["percent_text_enabled"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["big_actortitle_text_color"] = {
						nil, -- [1]
						0.7843137254902, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["percent_text_size"] = 10,
					["percent_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_show_percent"] = false,
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["actorname_text_anchor"] = {
						["y"] = -0.20000457763672,
						["x"] = 2.5,
						["side"] = 10,
					},
					["spellname_text_font"] = "Expressway",
					["health_incombat"] = {
						132, -- [1]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["level_text_alpha"] = 0.29999998211861,
					["percent_show_health"] = true,
					["big_actorname_text_font"] = "Naowh",
					["spellpercent_text_enabled"] = true,
				},
				["global_health_height"] = 16,
				["global_health_width"] = 132,
				["enemyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						0.69803921568627, -- [1]
						0.1921568627451, -- [2]
						0.11372549019608, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["percent_text_show_decimals"] = false,
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 10,
					["big_actorname_text_font"] = "Expressway",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.29999998211861,
					["actorname_text_spacing"] = 9,
					["percent_text_font"] = "Expressway",
					["quest_enabled"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_font"] = "Expressway",
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 9,
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["percent_show_health"] = false,
					["percent_show_percent"] = false,
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["actorname_text_size"] = 9,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["actorname_text_outline"] = "OUTLINE",
					["percent_show_health"] = false,
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["spellname_text_font"] = "Expressway",
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "Expressway",
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["level_text_alpha"] = 0.29999998211861,
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["big_actorname_text_font"] = "Expressway",
					["percent_show_percent"] = false,
					["spellname_text_size"] = 9,
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["percent_text_show_decimals"] = false,
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
			},
			["health_selection_overlay"] = "PlaterFocus",
			["aura_y_offset"] = 1.3000030517578,
			["expansion_triggerwipe"] = {
				[9] = true,
				[8] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
				1, -- [4]
			},
			["cast_statusbar_use_fade_effects"] = false,
			["indicator_spec"] = false,
			["color_override_colors"] = {
				[3] = {
					0.74509803921569, -- [1]
					0.18823529411765, -- [2]
					0.11372549019608, -- [3]
				},
				[4] = {
					1, -- [1]
					0.79607843137255, -- [2]
					0.2078431372549, -- [3]
				},
			},
			["aura_show_tooltip"] = true,
			["resources_settings"] = {
				["global_settings"] = {
					["anchor"] = {
						["y"] = 9.7099990844727,
					},
				},
				["chr"] = {
					["Player-4184-004EAE08"] = "ArcaneCharges",
					["Player-3674-0898468A"] = "SoulShards",
					["Player-3674-096625B1"] = "Chi",
					["Player-3678-0D4F17CA"] = "ComboPoints",
					["Player-3676-0DBAB9E1"] = "ComboPoints",
					["Player-3678-0D4C07B5"] = "ComboPoints",
					["Player-970-0065C1C7"] = "ComboPoints",
					["Player-3678-0D44FD01"] = "ComboPoints",
					["Player-2073-09AF21B0"] = "ComboPoints",
					["Player-4184-0021692E"] = "ComboPoints",
					["Player-970-006B99B8"] = "ComboPoints",
					["Player-3674-09CBAF8C"] = "ArcaneCharges",
				},
			},
			["health_animation_time_dilatation"] = 1.6699999570847,
			["npc_cache"] = {
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"The Underrot", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Court of Stars", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197831] = {
					"Quarry Stonebreaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[197835] = {
					"Kaurdyth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[194647] = {
					"Thunder Caller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"UNKNOWN", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[98285] = {
					"Smashum Grabb", -- [1]
					"Tanaan Jungle", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[198878] = {
					"Primalist Tempestmaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184693] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[196203] = {
					"Algeth'ar Nurse", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'dahh", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[192761] = {
					"Iskakx", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[199028] = {
					"Glacias", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180104] = {
					"Tangling Bloom", -- [1]
					"The Shadowlands", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[192764] = {
					"Flame Guardian", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199030] = {
					"Loamas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179852] = {
					"Soulless Vengeance", -- [1]
					"The Shadowlands", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[192769] = {
					"Thondrozus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[198142] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155432] = {
					"Enchanted Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[155433] = {
					"Void-Touched Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[200388] = {
					"Malformed Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[187154] = {
					"Arcane Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[198081] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[187160] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194147] = {
					"Volcanius", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[199182] = {
					"Jumping Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[197904] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[135246] = {
					"\"Stabby\" Lottie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[87252] = {
					"Unruly Ogron", -- [1]
					"Iron Docks", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196117] = {
					"Crystal Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[191313] = {
					"Bubbling Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[112664] = {
					"Arc Well", -- [1]
					"The Nighthold", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190496] = {
					"Terros", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[155434] = {
					"Emissary of the Tides", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197148] = {
					"Qalashi Lavabearer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[197793] = {
					"Awakened Juggernaut", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197801] = {
					"Awakened Terrasentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189233] = {
					"Caustic Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193709] = {
					"Primalist Earthwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198310] = {
					"Flame Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[87329] = {
					"Raider's Training Dummy", -- [1]
					"Draenor", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[191714] = {
					"Seeking Stormling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"The Underrot", -- [2]
				},
				[187967] = {
					"Sennarth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[200948] = {
					"Nokhud Apprentice", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"The Underrot", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Court of Stars", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200131] = {
					"Sha-Touched Guardian", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189555] = {
					"Arcane Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[199027] = {
					"Magmas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[187772] = {
					"Opalfang", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Court of Stars", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
			},
			["indicator_scale"] = 0.99999994039536,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.50242385268211, -- [4]
			},
			["indicator_anchor"] = {
				["side"] = 6,
				["x"] = 2,
			},
			["health_selection_overlay_alpha"] = 0,
			["minor_height_scale"] = 0.99999994039536,
			["extra_icon_show_enrage_border"] = {
				0.85098039215686, -- [1]
				0, -- [2]
				0.074509803921569, -- [3]
			},
			["aura_padding"] = 0.59999996423721,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1670756261,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 490,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LastHookEdited"] = "Initialization",
					["Options"] = {
					},
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 149,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Nameplate Created",
					["Options"] = {
					},
					["Author"] = "�r��ne-Kel'thuzad",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Adds double arrow as a target indicators option",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1670473318,
					["PlaterCore"] = 1,
					["Name"] = "Double Arrow Target",
					["Url"] = "https://wago.io/f5itAXjQq/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 158,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Rhkqt-Tarren Mill",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Sets Health Text to rTags formatting",
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    unitFrame.healthBar.lifePercent:SetText(envTable.healthFunc(unitId, envTable.forceMax))\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    unitFrame.healthBar.lifePercent:SetText(envTable.healthFunc(unitId, envTable.forceMax))\nend\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --[[\n    ###################\n    ##                          ##\n    ##       SETTINGS       ##\n    ##                          ## \n    ###################\n   \n   envTable.forceMax is for enabling maxHP on the bars\n--]]\n    envTable.forceMax = false\n    \n    \n    -- END OF SETTINGS\n    \n    \n    local shortenNumber = function(number, significant)\n        if type(number) ~= \"number\" then\n            number = tonumber(number)\n        end\n        if not number then\n            return\n        end\n        \n        if type(significant) ~= \"number\" then\n            significant = tonumber(significant)\n        end\n        significant = significant or 3\n        \n        local affixes = {\n            \"k\",\n            \"m\",\n            \"b\",\n            \"t\",\n        }\n        affixes[0] = \"\"\n        \n        local log, floor, max, abs = math.log, math.floor, math.max, math.abs\n        \n        local powerTen = floor(log(abs(number)) / log(10)) --get the log base 10\n        powerTen = powerTen < 0 and 0 or powerTen --catch negative powers for numbers with an absolute value below 1\n        local affix = floor(powerTen / 3) --every third power of ten (so thousands) results in a new affix\n        local divNum = number / 1000^affix --get the \"new\" number by division with the floored amounts\n        local before = powerTen%3 + 1 --determine how many digits before the .\n        local after = max(0, significant - before) --and how many digits after\n        \n        return string.format(string.format(\"%%.%df%s\", after, affixes[affix]), divNum)\n    end\n    \n    envTable.healthFunc = function(unit, forceMax)\n        local current, max = UnitHealth(unit), UnitHealthMax(unit)\n        local percent = (current/max)*100\n        \n        if forceMax then\n            return shortenNumber(current)..\"/\"..shortenNumber(max)..\" \"..Round(percent)\n        else\n            return shortenNumber(current)..\" \"..Round(percent)..\"%\"\n            \n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1669366802,
					["PlaterCore"] = 1,
					["Name"] = "HealthScript",
					["Url"] = "https://wago.io/aFclVsHxa/1",
					["Icon"] = 135987,
					["HooksTemp"] = {
					},
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 222,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -20, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1669117912,
					["PlaterCore"] = 1,
					["Name"] = "QuestProgress",
					["Url"] = "https://wago.io/uwe9CEwMm/2",
					["Icon"] = 132212,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        -- CUSTOM HERE --\n        if healthBar.currentAbsorb and healthBar.currentAbsorb > 0 then\n            if (showHealthAmount or showPercentAmount) then\n                healthBar.lifePercent:SetText(healthBar.lifePercent:GetText() .. \"  -  \" .. Plater.FormatNumber(healthBar.currentAbsorb))\n            elseif showAlways then\n                healthBar.lifePercent:SetText(Plater.FormatNumber(healthBar.currentAbsorb))\n            end\n        end\n        -- CUSTOM END --\n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1669362620,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/VtPjNl8Mg/7",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "1.0.6",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["version"] = 7,
					["PlaterCore"] = 1,
					["Name"] = "Absorb Shields in Healthbar",
					["LastHookEdited"] = "Nameplate Added",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options For @scriptname",
							["Name"] = "Options Intro",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = "",
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 803,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Rhk-Tarren Mill",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Training Dummy\"] = \"Dum Dum\", \n        --[\"\"] = \"\", --Template\n        \n        --Dragonflight\n        \n        --Vault of the Incarnates\n        [\"Frost Tomb\"] = \"Skull Emoji\",\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        \n        \n        \n        --Dragonflight Dungeons\n        \n        --Ruby Life Pools\n        [\"Thunderhead\"] = \"Thundercunt\",\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        [\"Defier Draghar\"] = \"Dragher\",\n        [\"Kyrakka\"] = \"Cracka\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Crawth\"] = \"Beak Bitch\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Hard Crystal\",\n        [\"Crystal Fury\"] = \"Furry\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Bad Totem\",\n        \n        --Halls of Infusion\n        \n        \n        --Neltharus\n        \n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        [\"Stormcaller Solongo\"] = \"Shlongo\",\n        [\"Stormcaller Zarii\"] = \"Sorry\",\n        [\"Soulharvester Tumen\"] = \"Twomen\",\n        [\"Soulharvester Mandakh\"] = \"Mandick\",\n        [\"Balara\"] = \"Ballerina\",\n        \n        \n        --Uldaman: Legacy of Tyr\n        \n        \n        \n        \n        --Shadowlands\n        \n        --Open World\n        [\"Fallen Knowledge-Seeker\"] = \"Seeker\",\n        \n        \n        \n        --Shadowlands Raids\n        \n        --Castle Nathria\n        [\"Stoneborn Maitre D'\"] = \"Maitre D'\",\n        [\"Rat of Unusual Size\"] = \"Big Rat\",\n        \n        --Sanctum of Domination\n        [\"Sylvanas Windrunner\"] = \"Sylvanas\",\n        \n        --Sepulcher of the First Ones\n        [\"Dausegne\"] = \"Da Sausage\",\n        [\"Anduin Wrynn\"] = \"Anduin\",\n        [\"The Jailer\"] = \"Jailer\",\n        [\"Unmade Steward\"] = \"Simp\",\n        [\"Lihuvim\"] = \"Lithium\",\n        [\"Prototype of War\"] = \"War\",\n        [\"Prototype of Duty\"] = \"Duty\",\n        [\"Prototype of Renewal\"] = \"Renewal\",\n        [\"Prototype of Absolution\"] = \"Absolution\",\n        \n        \n        \n        --Shadowlands Dungeons\n        \n        --De other Side\n        [\"Millhouse Manastorm\"] = \"Milfhouse\",\n        [\"Millificent Manastorm\"] = \"Millificent\",\n        \n        --Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Mute Me\",\n        \n        --Necrotic Wake\n        [\"Stitching Assistant\"] = \"Stitcher\",\n        [\"Separation Assistant\"] = \"Separator\",\n        [\"Blightbone\"] = \"Blightboner\",\n        \n        --Theater of pain\n        [\"Mordretha, the Endless Empress\"] = \"Mordretha\",   \n        \n        --Plaguefall\n        [\"Congealed Slime\"] = \"Purple Slime\",\n        [\"Pestilence Slime\"] = \"Haste Slime\",\n        [\"Gushing Slime\"] = \"Green Slime\",\n        [\"Rotmarrow Slime\"] = \"Bad Slime\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        [\"Plagueroc\"] = \"Plaguecock\",\n        \n        --Tazavesh: Streets of Wonder\n        [\"Commerce Enforcer\"] = \"Assclapper\",\n        [\"So'azmi\"] = \"Sa'lami\",\n        [\"P.O.S.T. Master\"] = \"S.U.C.C. Master\",\n        [\"Portalmancer Zo'dahh\"] = \"Not The Boss\",\n        \n        --Tazavesh: So'leah's Gambit\n        [\"Murkbrine Scalebinder\"] = \"Fish Dicker\",\n        [\"Invigorating Fish Stick\"] = \"Fish Dick\",\n        [\"Hylbrande\"] = \"Hill Brad\",\n        [\"Burly Deckhand\"] = \"Dickhand\",\n        [\"Stormforged Guardian\"] = \"Don't pull me\",\n        \n        \n        \n        --Legion Dungeons\n        \n        --Return To Karazhan\n        [\"Spectral Apprentice\"] = \"Apprentice\",\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Halls of Valor\n        [\"Solsten\"] = \"Soulstone\",\n        \n        --Court of Stars\n        \n        \n        \n        --Mists of Pandaria Dungeons\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n        [\"Peril\"] = \"Pearl\",\n        \n        \n        \n        --BFA Dungeons\n        \n        --Operation: Mechagon\n        [\"Rocket Tonk\"] = \"Rocket\",\n        [\"Strider Tonk\"] = \"Strider\",\n        [\"Bomb Tonk\"] = \"Bomb\",\n        [\"Defense Bot Mk I\"] = \"MK-I\",\n        [\"Defense Bot Mk III\"] = \"MK-III\",\n        [\"Mechagon Tinkerer\"] = \"Twinkerer\",\n        \n        \n        \n        --Seasonal Affixes\n        \n        --M+ Shrouded Affix\n        [\"Zul'gamux\"] = \"Zul'gondeez\",\n        \n        --M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR Boi\",\n        [\"Wo Drifter\"] = \"Speed Boi\",\n        [\"Vy Interceptor\"] = \"Haste Boi\",\n        \n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1670756669,
					["PlaterCore"] = 1,
					["Name"] = "M+ Renamer",
					["Url"] = "https://wago.io/cC74EIkxK/13",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
					},
					["Time"] = 1670375663,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["arena"] = true,
							["pvp"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/Zz1aEIOJR/1",
					["Icon"] = 132310,
					["Enabled"] = true,
					["Revision"] = 319,
					["semver"] = "1.0.0",
					["Author"] = "Irashi-Antonidas",
					["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Sappable (Custom Icon)",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [7]
				{
					["OptionsValues"] = {
						["BSborderth"] = 1,
						["BSstack_color"] = {
							1, -- [1]
							0.023529414087534, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge, spellName, isBuff, modRate)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = spellName or actualSpellName or \"unknown_aura\"\n            local modRate = modRate or 1\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        iconFrame.timeRemaining = (startTime + duration - now) / modRate\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and self.options.decimal_timer and iconFrame.parentIconRow.FormatCooldownTimeDecimal(iconFrame.timeRemaining) or iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining/duration < 0.225) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining/duration < 0.45) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetDrawSwipe (self.options.cooldown_swipe_enabled)\n                    iconFrame.Cooldown:SetEdgeTexture (self.options.cooldown_edge_texture)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (modTable.config.BSpadding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                iconFrame.identifierKey = nil -- only used for \"specific\" add/remove\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n        unitFrame.ExtraIconFrame:SetOption (\"icon_padding\", modTable.config.BSpadding)\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
					},
					["Time"] = 1670754786,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/-FONAlf09/15",
					["Icon"] = 134328,
					["Enabled"] = true,
					["Revision"] = 919,
					["semver"] = "1.0.14",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 15,
					["PlaterCore"] = 1,
					["Name"] = "Buff Special Options",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Basic Options",
							["Name"] = "Basic Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "BShidefriendly",
							["Value"] = true,
							["Name"] = "Hide Buff Special on Friendly UnitFrame",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "BScbt",
							["Value"] = true,
							["Name"] = "Text Color By time",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, cooldown text color changed by time left. Below 10 is orange and below 5 is red.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special icon padding",
							["Min"] = 0,
							["Key"] = "BSpadding",
							["Value"] = 1,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Key"] = "BSborderth",
							["Value"] = 1.2,
							["Name"] = "Border Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Text Options",
							["Name"] = "Buff Special Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "BStimer_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Timer Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "BSstack_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Stack Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set stack text color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Player Name Options",
							["Name"] = "Buff Special Player Name Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 9,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)) / 9(CENTER)",
							["Min"] = 1,
							["Key"] = "Descanchor",
							["Value"] = 4,
							["Name"] = "Player Name Text Anchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Key"] = "Descyoff",
							["Value"] = -2,
							["Name"] = "Player Name Text Y-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Key"] = "Descxoff",
							["Value"] = 0,
							["Name"] = "Player Name Text X-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
					},
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Time"] = 1669361153,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/lLK9gn7lc/5",
					["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
					["Enabled"] = true,
					["Revision"] = 66,
					["semver"] = "1.0.4",
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
					["Prio"] = 99,
					["version"] = 5,
					["PlaterCore"] = 1,
					["Name"] = "Arena - Buff-Tracking Mode",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1670473484,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/-ny0jWQDT/2",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = true,
					["Revision"] = 193,
					["semver"] = "1.0.1",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Target Border Color",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
					},
					["Time"] = 1669580521,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/mEN8Q6zUa/10",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Enabled"] = true,
					["Revision"] = 480,
					["semver"] = "1.0.9",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
					["Prio"] = 99,
					["version"] = 10,
					["PlaterCore"] = 1,
					["Name"] = "Cast Icon Anchor + Border",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1670281828,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/ZqU9hBu43/3",
					["Icon"] = 627607,
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "1.0.2",
					["Author"] = "Brewdux-Tarren Mill",
					["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["Name"] = "Pet Threat Highlighter",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [12]
				{
					["OptionsValues"] = {
						["SPglowfreq"] = 0.59999990463257,
						["SPglowxoff"] = 0.5,
						["SPpixelborder"] = false,
						["SPglowyoff"] = 0.5,
						["SPglowparticle"] = 5,
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1670754014,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/uEnDIKvvP/2",
					["Icon"] = 132096,
					["Enabled"] = true,
					["Revision"] = 958,
					["semver"] = "1.0.1",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Steal/Purge Aura Glow",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Common Options",
							["Name"] = "Common Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
							["Min"] = 1,
							["Key"] = "SPglownum",
							["Value"] = 2,
							["Name"] = "Glow Type",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Set to negative to inverse direction of rotation",
							["Min"] = -2,
							["Key"] = "SPglowfreq",
							["Value"] = 0.5,
							["Name"] = "Glow Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "SPglowcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0.45490196078431, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set glow color",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel & Ants Glow",
							["Name"] = "Options for Pixel & Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "Set number of lines",
							["Min"] = 1,
							["Key"] = "SPglowparticle",
							["Value"] = 6,
							["Name"] = "Number of Particles",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowxoff",
							["Value"] = 1.2,
							["Name"] = "X-Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowyoff",
							["Value"] = 1.2,
							["Name"] = "Y-Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel Glow",
							["Name"] = "Options for Pixel Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "SPpixelborder",
							["Value"] = false,
							["Name"] = "Pixel Add Border",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable to true to create border under lines",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set pixel line length",
							["Min"] = 0.01,
							["Key"] = "SPpixellength",
							["Value"] = 6,
							["Name"] = "Pixel Line Length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Set pixel line thickness",
							["Min"] = 0.01,
							["Key"] = "SPpixelth",
							["Value"] = 2,
							["Name"] = "Pixel Line Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Ants Glow",
							["Name"] = "Options for Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 2.5,
							["Desc"] = "Set ants glow scale",
							["Min"] = 0.01,
							["Key"] = "SPantsscale",
							["Value"] = 0.8,
							["Name"] = "Ants Glow Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [17]
					},
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 7\n    \n    --spell name length limit\n    local spellNameMaxLength = 14\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" \" .. targetNameByColor .. \"\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1670281866,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/jsGuJ8TUI/2",
					["Icon"] = 2126355,
					["Enabled"] = true,
					["Revision"] = 195,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the cast target name with the spell name",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Cast target on spell name [Fix]",
					["LastHookEdited"] = "Cast Start",
					["Options"] = {
					},
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 839,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Options"] = {
					},
					["Author"] = "Causese-Valdrakken",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["UID"] = "0x637cb5a32d0a93c",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        \n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            \n            if prio == 1 then\n                Plater.SetNameplateScale(unitFrame, 0.9)\n                --Plater.SetNameplateColor (unitFrame, \"blue\")\n            elseif prio == 2 then\n                Plater.SetNameplateScale(unitFrame, 0.8)\n                --Plater.SetNameplateColor (unitFrame, \"yellow\")\n            end    \n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        \n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            \n            if prio == 1 then\n                Plater.SetNameplateScale(unitFrame, 0.9)\n                --Plater.SetNameplateColor (unitFrame, \"blue\")\n            elseif prio == 2 then\n                Plater.SetNameplateScale(unitFrame, 0.8)\n                --Plater.SetNameplateColor (unitFrame, \"yellow\")\n            end    \n        end\n    end\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    -- [\"0\"] = 2, --Template\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 1, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        \n    }\nend",
					},
					["Prio"] = 99,
					["Time"] = 1669883272,
					["PlaterCore"] = 1,
					["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
					["Name"] = "Priority based scaling",
					["Icon"] = 1041231,
					["HooksTemp"] = {
					},
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1670473323,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/P35nCfDqx/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "1.0.0",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Force Threat Color NPC",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [16]
				{
					["OptionsValues"] = {
						["castBarColorSelf"] = {
							1, -- [1]
							0, -- [2]
							0.94117653369904, -- [3]
							1, -- [4]
						},
						["castBarColorInterrupt"] = {
							1, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["stratas"] = "MEDIUM",
					},
					["HooksTemp"] = {
					},
					["UID"] = "0x636726a724a7104",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.reflectableSpells = {\n        [167385] = true, -- Uber Strike for testing\n        --[] = true, --\n        -- -- -- Raids\n        \n        -- -- Vault of the Incarnates\n        [381315] = true, -- Awakened Earth - Terros\n        [391322] = true, -- Explosive reaction - Terros\n        [372315] = true, -- Frost Spike - The Primal Council\n        [372394] = true, -- Lightning Bolt - The Primal Council\n        [376851] = true, -- Aeriel Buffet - Dathea, Ascended\n        [385812] = true, -- Aeriel Slash - Dathea, Ascended\n        [375424] = true, -- Raging Tempest - Dathea, Ascended\n        [375653] = true, -- Static Jolt - Broodkeeper Diurna\n        \n        -- -- Sepulcher of the First Ones\n        \n        [360162] = true, -- Split Resolution - Vigilant Guardian\n        [361001] = true, -- Wave of Disintegration - Vigilant Guardian\n        [359778] = true, -- Ephemera Dust - Skolex, the Insatiable Ravener\n        [359976] = true, -- Riftmaw *normal only* - Skolex, the Insatiable Ravener\n        [364030] = true, -- Debilitating Ray - Artificer Xy'mox 2.0\n        [365801] = true, -- Relic Collapse - Artificer Xy'mox 2.0\n        [362885] = true, -- Stasis Trap *normal only* - Artificer Xy'mox 2.0\n        [363607] = true, -- Domination Bolt - Dausegne, the Fallen Oracle\n        [361513] = true, -- Obliteration Arc - Dausegne, the Fallen Oracle\n        [360959] = true, -- Staggering Barrage - Dausegne, the Fallen Oracle\n        [366234] = true, -- Animastorm  - Prototype Pantheon\n        [362383] = true, -- Anima Bolt - Prototype Pantheon\n        [360259] = true, -- Gloom Bolt - Prototype Pantheon\n        [360618] = true, -- Necrosis - Prototype Pantheon\n        [364865] = true, -- Sinful Projection  - Prototype Pantheon\n        [365041] = true, -- Windswept Wings - Prototype Pantheon\n        [361579] = true, -- Withering Nova - Prototype Pantheon\n        [364073] = true, -- Degenerate - Lihuvim, Principal Architect\n        [360006] = true, -- Cloud of Carrion - Lords of Dread\n        \n        -- -- Sanctum of Domination\n        \n        [350803] = true, -- Piercing Lens (add) - Eye of the Jailer\n        [348969] = true, -- Immediate Extermination - Eye of the Jailer\n        [350283] = true, -- Soulful Blast - The Nine\n        [354231] = true, -- Soul Manacles - Soulrender Domazain\n        [350801] = true, -- Unleashed Tyranny - Soulrender Domazain\n        [353603] = true, -- Diviner's Probe - Fatescribe Roh-Kalo\n        [353931] = true, -- Twist Fate - Fatescribe Roh-Kalo\n        [353398] = true, -- Anomalous Blast - Fatescribe Roh-Kalo\n        [352141] = true, -- Banshee's Cry - Kel'thuzad\n        [352650] = true, -- Ranger's Heartseeker - Sylvanas Windrunner\n        [358183] = true, -- Banshee's Blades - Sylvanas Windrunner\n        \n        -- -- Castle Nathria\n        \n        [334852] = true, -- Petrifying Howl - Huntsman Altimor\n        [335114] = true, -- Sinseeker - Huntsman Altimor\n        [328885] = true, -- Greater Castigation - Sun King's Salvation\n        [331573] = true, -- Unconscionable Guilt - Lady Inerva Darkvein\n        [342321] = true, -- Concentrated Anima - Lady Inerva Darkvein\n        [342320] = true, -- Lightly Concentrated Anima - Lady Inerva Darkvein\n        [330968] = true, -- Throw Food - The Council of Blood\n        [346800] = true, -- Waltz of Blood - The Council of Blood\n        [346654] = true, -- Drain Essence - The Council of Blood\n        [331634] = true, -- Dark Recital - The Council of Blood\n        [326005] = true, -- Indignation - Sire Denathrius\n        [326994] = true, -- Blood Price - Sire Denathrius\n        [326851] = true, -- Blood Price - Sire Denathrius\n        \n        -- -- -- New Mythic+\n        \n        -- -- Algeth'ar Academy\n        \n        [374352] = true, -- Energy Bomb - Echo of Doragosa\n        [387975] = true, -- Arcane Missles - Invoker\n        [388862] = true, -- Surge - Manafiend\n        \n        -- -- Court of Stars\n        \n        [211401] = true, -- Drifting Embers - Blazing Imp\n        [211412] = true, -- Drifting Embers - Blazing Imp\n        [211406] = true, -- Firebolt - Blazing Imp\n        [373364] = true, -- Vampiric Claws - Gerenth\n        [209413] = true, -- Suppress  - Construct\n        [212784] = true, -- Eye Storm - Inquisitor\n        \n        -- -- Halls of Valor\n        \n        [193668] = true, -- Savage Blade - Skovald\n        [192288] = true, -- Searing Light - Olmyr\n        [198959] = true, -- Etch - Runecarver\n        [198962] = true, -- Shattered Rune - Runecarver\n        [198595] = true, -- Thunderous Bolt - Thundercaller\n        \n        -- -- Ruby life pools\n        \n        [372683] = true, -- Cold Claws - Whelpling\n        [372808] = true, -- Frigid Shard - Chillworn\n        [384194] = true, -- Cinderbolt - Cinderweaver\n        [384197] = true, -- Cinderbolt - Cinderweaver\n        \n        -- -- Shadowmoon Burial Grounds\n        \n        [398206] = true, -- Death Blast - Exhumed Spirit\n        [156776] = true, -- Rending Voidlash - Enslaver\n        [153524] = true, -- Plague Spit - Bat\n        \n        -- -- Temple of the Jade Serpent\n        \n        [397801] = true, -- Hydrolance - Wise Mari\n        [114571] = true, -- Agony - Lorewalker Stonestep\n        [106823] = true, -- Serpent Strike - Flameheart\n        [397888] = true, -- Hydrolance - Waterspeaker\n        [397914] = true, -- Defiling Mist - Mistweaver\n        \n        -- -- Azure Vault\n        \n        [374789] = true, -- Infused Strike - Leymor\n        [384978] = true, -- Dragon Strike - Umbrelskul\n        [389804] = true, -- Heavy Tome - Curator\n        \n        -- -- Nokhud Offensive\n        \n        [384761] = true, -- Wind Burst - Raging tempest\n        [382670] = true, -- Gale Arrow - Teera & Maruuk\n        [376827] = true, -- Conductive Strike - Khan\n        [376829] = true, -- Thunder Strike - Khan\n        [386012] = true, -- Stormbolt - Stormspeaker\n        [387127] = true, -- Chain lightning - Thunderbeast\n        [387125] = true, -- Thunderstrike - Thunderbeast\n        [386026] = true, -- Surge - Squall\n        \n        \n        -- -- Tazavesh: Streets/Gambit\n        \n        [345770] = true, -- Impound Contraband  \n        [347632] = true, -- Energy Blade\n        [347635] = true, -- Energy Star\n        [358919] = true, -- Static Mace\n        [357196] = true, -- Hyperlight Bolt\n        [355888] = true, -- Hard Light Baton\n        [353836] = true, -- Hyperlight Bolt\n        [355915] = true, -- Glyph of Restraint\n        [355930] = true, -- Spark Burn\n        [356031] = true, -- Stasis Beam\n        [356324] = true, -- Empowered Glyph of Restraint\n        [354297] = true, -- Hyperlight Bolt\n        [356843] = true, -- Hyperlight Salvo/Brackish Bolt (?)\n        [355641] = true, -- Scintillate\n        [355225] = true, -- Waterbolt\n        \n        -- -- Return to Karazhan: Upper/Lower\n        \n        [228254] = true, -- Soul Leech\n        [228086] = true, -- Pyrotechnics\n        [29928]  = true, -- Immolate\n        [29492]  = true, -- Searing Pain\n        [241788] = true, -- Shadow Blast\n        [228277] = true, -- Shackles of Servitude\n        [241798] = true, -- KIss of Death\n        [230050] = true, -- Force Blade\n        [228700] = true, -- Arcane Barrage\n        [374743] = true, -- Fel Fireball\n        [227800] = true, -- Holy Shock - Maiden\n        [227809] = true, -- Holy Bolt - Maiden\n        [228852] = true, -- Shared Suffering - Attumen the Huntsman\n        [227615] = true, -- Inferno Bolt - Shade of Medivh\n        [227768] = true, -- Piercing Missiles - Shade of Medivh\n        [229083] = true, -- Burning Blast - Viz'aduum the Watcher\n        \n        -- -- Iron Docks\n        \n        [172771] = true, -- Incendiary Slug\n        [173514] = true, -- Lava Blast\n        [173480] = true, -- Lava Barrage\n        [165122] = true, -- Blood Bolt - Ahri'ok Dugru\n        [163740] = true, -- Tainted Blood - Ahri'ok Dugru\n        [163376] = true, -- Malfunctioning Jumper Cables 9000 XL - Neesa Nox\n        [168955] = true, -- Shattering Blade - Koramar\n        \n        -- -- Mechagon: Junkyard/Workshop\n        \n        [298669] = true, -- Taze - Trixie & Naeno / Blossom Blast - Machinist's Garden (?)\n        [302274] = true, -- Fulminating Zap - HK-8 Aerial Oppression Unit\n        [273185] = true, -- Shield Bash - Trash\n        [299438] = true, -- Sledgehammer - Trash\n        [300764] = true, -- Slimebolt - Trash\n        [300687] = true, -- Consuming Slime - Trash\n        [300211] = true, -- Zap - Trash\n        [301088] = true, -- Detonate / Arcing Zap - Defense Bot Mk III (?)\n        [294195] = true, -- Arcing Zap\n        [293827] = true, -- Giga-Wallop / Giga-Wallop - Mechagon Tinkerer (?)\n        [291878] = true, -- Pulse Blast - King Mechagon\n        [291928] = true, -- Giga-Zap - King Mechagon\n        \n        -- -- Grimrail Depot\n        \n        [164192] = true, -- 50,000 Volts\n        [176025] = true, -- Lava Wreath\n        [166341] = true, -- Thunder Zone\n        \n        -- -- -- Old Mythic+\n        \n        -- -- De Other Side\n        \n        [322736] = true, -- Piercing Barb - Hakkar the Soulflayer\n        [323166] = true, -- Corrupted Blood - Hakkar the Soulflayer\n        [320008] = true, -- Frostbolt - The Manastorms\n        [320230] = true, -- Explosive Contrivance - Dealer Xy'exa\n        [323687] = true, -- Arcane Lightning - Dealer Xy'exa\n        [325258] = true, -- Master of Death - Mueh'zala\n        [327646] = true, -- Soulcrusher - Mueh'zala\n        [332705] = true, -- Smite\n        [332707] = true, -- Shadow Word: Pain\n        [332605] = true, -- Hex\n        [334076] = true, -- Shadowcore\n        [332196] = true, -- Discharge\n        [328707] = true, -- Scribe\n        [333641] = true, -- Reaver\n        [332234] = true, -- Essential Oil\n        [333711] = true, -- Decript Bite\n        [323544] = true, -- Blood Nova\n        \n        -- -- Halls of Atonement\n        \n        [322977] = true, -- Sinlight Visions - Halkias\n        [328322] = true, -- Villainous Bolt - Ecehlon\n        [323538] = true, -- Bolt of Power - High Adjucator Aleez\n        [328791] = true, -- Ritual of Woe - Lord Chamberlain\n        [338003] = true, -- Wicked Bolt\n        [325700] = true, -- Collect Sins\n        [326829] = true, -- Wicked Bolt\n        \n        -- -- Mists of Tirna Scithe\n        \n        [323057] = true, -- Spirit Bolt - Ingra Maloch\n        [324923] = true, -- Bramble Burst\n        [326319] = true, -- Spirit Bolt\n        [322767] = true, -- Spirit Bolt\n        [322557] = true, -- Soul Split\n        [331718] = true, -- Spear Flurry\n        [325223] = true, -- Anima Injection\n        [325418] = true, -- Volatile Acid\n        [322486] = true, -- Overgrowth\n        \n        -- -- Plaguefall;\n        \n        [324527] = true, -- Plaguestomp - Globrog\n        [329110] = true, -- Slime Injection - Doctor Ickus\n        [328475] = true, -- Enveloping Webbing\n        [327995] = true, -- Doom Shroom\n        [327552] = true, -- Doom Shroom\n        [328002] = true, -- Hurl Spores\n        [328180] = true, -- Gripping Infection\n        [328094] = true, -- Pestilence Bolt\n        [334926] = true, -- Wretched Phlegm\n        [320512] = true, -- Corroded Claws\n        \n        -- -- Sanguine Depths\n        \n        [322554] = true, -- Castigate - Executor Tarvold\n        [326712] = true, -- Dark Bolt\n        [321249] = true, -- Shadow Claws\n        [326827] = true, -- Dread Bindings\n        [326837] = true, -- Gloom Burst\n        [326952] = true, -- Fiery Cantrip\n        [322169] = true, -- Growing Mistrust\n        [321038] = true, -- Wrack Soul\n        \n        -- -- Spires of Ascension\n        \n        [324368] = true, -- Attenuated Barrage - Kin-Tara\n        [324608] = true, -- Charged Stomp - Oryphrion\n        [334053] = true, -- Purifying Blast - Oryphrion\n        [317661] = true, -- Insidious Venom\n        [323804] = true, -- Dark Seeker\n        \n        -- -- Necrotic Wake\n        \n        [320637] = true, -- Fetid Gas - Blightbone\n        [328146] = true, -- Fetid Gas - Blightbone\n        [328667] = true, -- Frostbolt Volley - Amarth, the Harvester\n        [320788] = true, -- Frozen Binds - Nalthor the Rimebinder\n        [322274] = true, -- Enfeeble - Nalthor the Rimebinder\n        [334748] = true, -- Drain Fluids\n        [320462] = true, -- Necrotic Bolt\n        [320170] = true, -- Necrotic Bolt\n        [320171] = true, -- Necrotic Bolt\n        [333479] = true, -- Spew Disease\n        [323347] = true, -- Clinging Darkness\n        \n        -- -- Theater of Pain\n        \n        [320120] = true, -- Plague Bolt - An Affront of Challengers\n        [320300] = true, -- Necromantic Bolt - An Affront of Challengers\n        [319669] = true, -- Spectral Reach - Kul'tharok\n        [324079] = true, -- Reaping Scythe - Mordretha, the Endless Empress\n        [324589] = true, -- Death Bolt - Mordretha, the Endless Empress\n        [323608] = true, -- Dark Devastation - Mordretha, the Endless Empress\n        [330784] = true, -- Necrotic Bolt\n        [330703] = true, -- Decaying Filth\n        [333299] = true, -- Curse of Desolation\n        [330875] = true, -- Spirit Frost\n        [330810] = true, -- Bind Soul\n        [332550] = true  -- Soul Touch\n    };\n    \n    envTable.interruptSpells = {\n        6552 -- Pummel\n    };\n    \n    envTable.castingStrata = modTable.config.stratas;\n    envTable.isWarrior = select(3, UnitClass(\"player\")) == 1;\n    \n    -- Function to apply the reflectable cast bar effects. Returns true if the effects were applied,\n    -- false otherwise.\n    envTable.ApplyReflectable = function (unitFrame, casterId)\n        local spellId = unitFrame.castBar.SpellID;\n        \n        -- IF  You are a warrior\n        -- AND The spell being cast is reflectable\n        -- AND The target is you\n        if envTable.isWarrior and envTable.reflectableSpells[spellId] and UnitIsUnit(casterId .. \"target\", \"player\") then\n            local _, duration = GetSpellCooldown(23920);\n            \n            -- IF Spell reflect is off CD\n            if duration == 0 then\n                Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorSelf);\n                Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorSelf);\n                return true; -- Effect was applied\n            end\n        end\n        \n        return false; -- No effects\n    end\n    \n    -- Function to apply the interruptible cast bar effects. Returns true if the effects were\n    -- applied, false otherwise.\n    envTable.ApplyInterruptible = function (unitFrame, casterId)\n        -- IF  The spell being cast is interruptible\n        -- AND The caster is an interruptible target\n        if unitFrame.castBar.CanInterrupt and UnitCanAttack(\"player\", casterId) then\n            -- Iterate through all the interrupt spells available to your current class.\n            for _, interruptId in ipairs(envTable.interruptSpells) do\n                local _, duration = GetSpellCooldown(interruptId);\n                -- IF An interrupt is off CD\n                if duration == 0 then\n                    unitFrame:SetFrameStrata(envTable.castingStrata);\n                    Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    return true; -- Effect was applied\n                end\n            end\n        end\n        \n        return false; -- No effects\n    end\nend",
						["Cast Start"] = "function (self, casterId, unitFrame, envTable, modTable)\n    if envTable.ApplyReflectable(unitFrame, casterId) then\n    elseif envTable.ApplyInterruptible(unitFrame, casterId) then\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    Plater.SetCastBarColor(unitFrame);\n    Plater.SetCastBarBorderColor(unitFrame);\n    Plater.RefreshNameplateStrata(unitFrame);\nend\n\n\n",
					},
					["Time"] = 1670470098,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["71"] = true,
							["Enabled"] = true,
							["73"] = true,
							["72"] = true,
						},
					},
					["url"] = "https://wago.io/ACU9YCmh7/5",
					["Icon"] = 132361,
					["Enabled"] = true,
					["Revision"] = 279,
					["semver"] = "1.0.4",
					["Author"] = "Ragebucket-Sen'jin",
					["Desc"] = "A helpful collection of cast bar coloring conditions to make it obvious for when you can reflect or interrupt a spell.",
					["Prio"] = 99,
					["version"] = 5,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Cast Start",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "unused1",
							["Value"] = "Reflectable Cast Settings",
							["Name"] = "Section 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColorSelf",
							["Value"] = {
								0, -- [1]
								0.89803928136826, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Targeting you, Spell Reflection off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of cast bar for reflectable spells targeting you. Only applies if you can cast Spell Reflection.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "unused2",
							["Value"] = 0,
							["Name"] = "Blank 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "unused3",
							["Value"] = "Interruptible Cast Settings",
							["Name"] = "Section 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 3,
							["Key"] = "stratas",
							["Value"] = "MEDIUM",
							["Name"] = "Casting Strata",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "When an enemy is casting a spell we can interrupt, change the strata of the unit frame to this configuration option. The strata will revert to the default after the cast ends.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColorInterrupt",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.015686275437474, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Can interrupt, interrupt off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar for spells you can interrupt. This color is only applied if your interrupt is off cooldown.",
						}, -- [6]
					},
					["Name"] = "Spell Reflect cast bar",
				}, -- [17]
				{
					["OptionsValues"] = {
						["EXEbdrcolor"] = {
							1, -- [1]
							0.37647062540054, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["EXEhbcon"] = false,
						["EXEalert"] = 0,
						["EXEhicolor"] = {
							0.74509805440903, -- [1]
							0.18823531270027, -- [2]
							0.11372549831867, -- [3]
							0, -- [4]
						},
						["onlyNPC"] = true,
						["EXEbdron"] = true,
					},
					["HooksTemp"] = {
					},
					["UID"] = "0x6150129e178c7fc5",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
						["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
					},
					["Time"] = 1670809382,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/uCoprJFNs/3",
					["Icon"] = 135358,
					["Enabled"] = true,
					["Revision"] = 3471,
					["semver"] = "1.0.2",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Prio"] = 98,
					["version"] = 3,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Updated",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Color Options",
							["Name"] = "Execute Color Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "EXEhbcon",
							["Value"] = true,
							["Name"] = "Enable Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Healthbar Color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "EXEhbcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Healthbar Color",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "EXEbdron",
							["Value"] = false,
							["Name"] = "Enable Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Border Color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "EXEbdrcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Border Color",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "onlyNPC",
							["Value"] = true,
							["Name"] = "Only on NPC",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Apply these features only on NPC",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "TrackAggro",
							["Value"] = false,
							["Name"] = "Track Aggro Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Divisor Options",
							["Name"] = "Execute Divisor Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 4,
							["Key"] = "EXEhdoff",
							["Value"] = false,
							["Name"] = "Disable Execute Health Divisor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Disable Execute Health Divisor",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "EXEhdcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.8500000089407, -- [4]
							},
							["Name"] = "Execute Health Divisor Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Divisor Color",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "EXEhicolor",
							["Value"] = {
								0.27843137254902, -- [1]
								0, -- [2]
								1, -- [3]
								0.25, -- [4]
							},
							["Name"] = "Execute Health Indicator Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Indicator Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
							["Min"] = 0,
							["Key"] = "EXEalert",
							["Value"] = 13,
							["Name"] = "Preview Divisor %",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Force set health Divisor alpha value.",
							["Min"] = 0,
							["Key"] = "EXEhdalpha",
							["Value"] = 50,
							["Name"] = "Divisor Alpha %",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
					},
					["Name"] = "Advanced Execute Range [Fixed]",
				}, -- [18]
			},
			["last_news_time"] = 1660430782,
			["auras_per_row_auto"] = false,
			["cast_statusbar_fadeout_time"] = 0.49999997019768,
			["aura_stack_size"] = 8,
			["auras_per_row_amount2"] = 2,
			["range_check_power_bar_alpha"] = 0.89999997615814,
			["range_check_health_bar_alpha"] = 0.84999996423721,
			["aura_height2"] = 17,
			["ghost_auras"] = {
				["enabled"] = true,
				["auras"] = {
					["DEATHKNIGHT"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["WARRIOR"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["SHAMAN"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["MAGE"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["PRIEST"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
							["589"] = true,
							["34914"] = true,
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["HUNTER"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["MONK"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["WARLOCK"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
							[980] = true,
							[172] = true,
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["DEMONHUNTER"] = {
						["9"] = {
						},
						["15"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["11"] = {
						},
						["10"] = {
						},
					},
					["PALADIN"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["DRUID"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["13"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["8"] = {
						},
						["9"] = {
						},
						["28"] = {
						},
						["29"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["4"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["20"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["EVOKER"] = {
						["19"] = {
						},
						["18"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["11"] = {
						},
						["10"] = {
						},
					},
					["ROGUE"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
				},
			},
			["aura_show_crowdcontrol"] = true,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671067287,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 501,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1671384821,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [1]
			},
			["health_cutoff"] = false,
			["aura_border_colors"] = {
				["enrage"] = {
					0.70196078431373, -- [1]
					0, -- [2]
					0.054901960784314, -- [3]
				},
				["steal_or_purge"] = {
					nil, -- [1]
					0.92549019607843, -- [2]
					1, -- [3]
				},
				["offensive"] = {
					nil, -- [1]
					0.65098039215686, -- [2]
					0.10196078431373, -- [3]
					0, -- [4]
				},
				["is_show_all"] = {
					0.70196078431373, -- [1]
					0.10196078431373, -- [2]
					0.10196078431373, -- [3]
				},
				["crowdcontrol"] = {
					1, -- [1]
					1, -- [2]
					1, -- [3]
				},
				["is_buff"] = {
					0.65098039215686, -- [1]
					0.011764705882353, -- [2]
					0.090196078431373, -- [3]
					0, -- [4]
				},
			},
			["castbar_target_anchor"] = {
				["y"] = -1.5,
				["x"] = -13,
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit Power"] = 1,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Important Target [P]"] = 2,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Unit - Show Energy"] = 11,
				["Cast - Glowing [P]"] = 8,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Cast - Quick Flash"] = 2,
				["Aura - Buff Alert"] = 15,
				["Cast - Big Alert"] = 14,
				["Add - Explode on Die [P]"] = 1,
				["Unit - Important"] = 11,
				["Color Change"] = 1,
				["Countdown"] = 11,
				["Auto Set Skull"] = 11,
				["Unit - Health Markers"] = 12,
				["Add - Non Elite Trash [P]"] = 4,
				["Spiteful Affix"] = 3,
				["Aura Border Color"] = 1,
				["Cast - Stop Casting"] = 3,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Explosion Affix M+"] = 14,
				["Blink by Time Left"] = 1,
				["Cast - Very Important"] = 14,
				["Fixate On You"] = 11,
			},
			["target_highlight_color"] = {
				0.9921568627451, -- [1]
				1, -- [2]
				0.97254901960784, -- [3]
			},
			["cast_statusbar_color_channeling"] = {
				1, -- [1]
				nil, -- [2]
				0.035294117647059, -- [3]
				0.96000000089407, -- [4]
			},
			["extra_icon_anchor"] = {
				["x"] = -0.5,
			},
			["extra_icon_wide_icon"] = false,
			["extra_icon_stack_outline"] = "OUTLINE",
			["range_check_alpha"] = 0.89999997615814,
			["click_space"] = {
				nil, -- [1]
				21, -- [2]
			},
			["extra_icon_auras"] = {
				328501, -- [1]
				328986, -- [2]
				204490, -- [3]
			},
			["castbar_target_font"] = "Expressway",
			["semver"] = "3.5.1",
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["aura_frame2_anchor"] = {
				["y"] = 1.3000030517578,
				["x"] = -0.19999694824219,
				["side"] = 1,
			},
			["use_name_translit"] = true,
			["aura_alpha"] = 1,
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark6",
			["auto_toggle_friendly"] = {
				["arena"] = true,
			},
			["indicator_faction"] = false,
			["extra_icon_height"] = 19,
			["aura_x_offset"] = 0.80000305175781,
			["first_run3"] = true,
			["transparency_behavior"] = 2,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["aura_stack_color"] = {
				nil, -- [1]
				0, -- [2]
				0.062745098039216, -- [3]
			},
			["aura_consolidate"] = true,
			["health_statusbar_bgtexture"] = "Details Flat",
			["indicator_raidmark_anchor"] = {
				["y"] = 7.8199996948242,
				["x"] = 0,
				["side"] = 12,
			},
			["extra_icon_width"] = 19,
			["aura_show_enrage"] = true,
			["health_statusbar_texture"] = "Details Flat",
			["hook_auto_imported"] = {
				["Color Automation"] = 1,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Hide Neutral Units"] = 1,
				["Aura Reorder"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Bwonsamdi Reaping"] = 1,
				["Jaina Encounter"] = 6,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 2,
				["Extra Border"] = 2,
				["Targetting Alpha"] = 3,
				["Target Color"] = 3,
				["Combo Points"] = 6,
				["Monk Statue"] = 2,
			},
			["extra_icon_border_color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["update_throttle"] = 0.19873979687691,
			["minor_width_scale"] = 0.99999994039536,
			["castbar_target_text_size"] = 9,
			["aura_frame1_anchor"] = {
				["y"] = 1.3000030517578,
				["x"] = 0.80000305175781,
				["side"] = 7,
			},
			["indicator_extra_raidmark"] = false,
			["aura_timer_text_font"] = "Expressway",
			["cast_statusbar_bgcolor"] = {
				0.21176470588235, -- [1]
				0.21176470588235, -- [2]
				0.21176470588235, -- [3]
				0.90000000596046, -- [4]
			},
			["extra_icon_timer_font"] = "Expressway",
			["border_thickness"] = 1.1000000238419,
			["not_affecting_combat_alpha"] = 1,
			["npc_colors"] = {
				[134139] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196798] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134012] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136186] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196671] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180431] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115407] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184140] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173016] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180433] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161124] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131009] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197697] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132481] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176598] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164578] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135167] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197698] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164707] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196548] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135552] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135169] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83761] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178008] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[178392] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165222] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127879] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130437] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178139] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[83763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131849] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[128967] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75899] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131850] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[134024] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168934] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190034] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[160495] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[157810] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194895] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[83765] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128969] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177889] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[154744] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164463] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114584] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134158] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172265] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150143] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165872] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[65317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162038] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138254] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134418] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[156157] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138255] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[162040] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150276] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83578] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135699] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[118489] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98285] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168949] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168310] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133912] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136470] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[75652] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[155908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129232] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179821] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83389] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157571] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173044] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162047] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[118491] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115486] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157572] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114783] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[105704] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166396] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83390] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129553] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[180335] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162049] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180336] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[170490] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134174] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115488] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162691] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122969] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163459] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83392] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[178165] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131492] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81283] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135329] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81603] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166275] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166276] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168578] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150292] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162057] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150165] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135204] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[122972] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[170882] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138019] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164873] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122973] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186740] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196203] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180091] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150169] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174210] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134058] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163086] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173189] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173190] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[153882] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180864] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[153755] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[189816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165137] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139946] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165010] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132530] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[183425] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179334] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132532] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139949] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130012] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163862] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191739] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144298] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137521] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176523] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133685] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[190206] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180104] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114796] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[96574] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165911] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[130909] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135989] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164506] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165913] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155812] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177807] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166299] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177808] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164510] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171799] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167963] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[166301] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114544] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155432] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[167964] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122984] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[166302] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155433] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[167965] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167967] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[165410] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163620] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83025] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189707] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171805] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168992] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196102] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83026] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114803] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81236] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177817] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135235] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[82579] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114804] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136643] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130661] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163882] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195851] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173729] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135239] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150712] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[115765] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136391] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156212] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151353] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135241] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156213] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133835] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183707] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182045] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81432] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155831] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168747] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130025] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163121] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[76446] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192789] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168365] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115640] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130026] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[135246] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[87252] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176551] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135759] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144071] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130027] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59547] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196117] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163126] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165556] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134994] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131670] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168882] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171184] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168627] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135764] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[115388] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164921] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156226] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167607] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168886] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134232] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[133593] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[157634] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82590] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152009] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[131677] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172981] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[152905] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136665] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[128434] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164926] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134364] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[166589] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114624] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165529] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[141939] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[180348] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137591] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168153] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176565] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151657] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165824] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81212] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129601] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[185032] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135007] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135263] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[142587] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[169905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[178171] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163524] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114626] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81279] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131587] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195877] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[126918] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131812] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164929] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179842] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[152898] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129367] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[131685] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[198308] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200387] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[127111] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197406] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[170480] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127497] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115642] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115395] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[80805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134629] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167876] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[138465] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114317] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59552] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167493] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170690] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130485] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[127480] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165919] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[139800] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175550] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155090] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196045] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190128] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114629] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169924] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115020] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167111] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136549] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150168] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151127] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129527] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168007] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82597] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164737] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176575] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[191847] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168425] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169159] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[87329] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[96664] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[199368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127482] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164567] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131666] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[155434] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[155094] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[116549] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164557] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167113] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80936] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168658] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130488] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[141285] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136735] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[193373] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189878] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137830] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[114632] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168594] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168942] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180323] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168318] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168396] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129370] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[133870] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[179010] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127484] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[176521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131445] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172021] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179388] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114633] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[80938] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[88163] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171376] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[157017] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189555] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[170572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164562] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114334] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59553] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[179841] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164563] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114634] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[129529] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179269] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150253] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155824] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127486] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[151649] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165076] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115402] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129788] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[180432] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129548] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[168109] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171343] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161241] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115019] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168443] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135846] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[162039] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[75506] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156245] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104278] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198326] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141283] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169927] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[156244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133482] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[86526] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[161243] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[187969] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176573] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127488] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[132491] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134390] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[198311] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[161244] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134284] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167612] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134150] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134990] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[163128] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180015] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136139] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[174773] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114542] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134137] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[180429] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175517] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131586] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[141938] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150250] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131585] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[174197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129600] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[114319] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115406] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150251] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
			},
			["cast_statusbar_color_finished"] = {
				0.27843137254902, -- [1]
				0.75294117647059, -- [2]
				0.23529411764706, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["auras_per_row_amount"] = 4,
			["aura_height"] = 17,
			["non_targeted_alpha_enabled"] = true,
			["aura_width"] = 20,
			["cast_statusbar_bgtexture"] = "Details Flat",
			["aura2_x_offset"] = -0.19999694824219,
			["target_indicator"] = "Double Arrows",
			["pet_width_scale"] = 0.99999994039536,
			["extra_icon_timer_size"] = 11,
			["resources"] = {
				["scale"] = 0.79999995231628,
			},
			["extra_icon_timer_outline"] = "OUTLINE",
			["range_check_cast_bar_alpha"] = 0.89999997615814,
			["pet_height_scale"] = 0.99999994039536,
			["aura2_grow_direction"] = 3,
			["target_shady_alpha"] = 0,
			["aura_grow_direction"] = 1,
			["tap_denied_color"] = {
				0.46666666666667, -- [1]
				0.46666666666667, -- [2]
				0.46666666666667, -- [3]
			},
			["range_check_enabled"] = false,
			["indicator_raidmark_scale"] = 0.84999996423721,
			["aura_width2"] = 20,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "1.3999999761581",
				["nameplateLargeTopInset"] = "0.03999999910593",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "15",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.048449993133545",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "0.99656772613525",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateShowFriends"] = "1",
				["nameplateMotion"] = "1",
				["nameplateOverlapH"] = "0.75",
				["nameplateMinScale"] = "1",
				["nameplateLargerScale"] = "1",
				["nameplateOtherTopInset"] = "0.03999999910593",
				["nameplateOtherAtBase"] = "0",
				["nameplateSelfBottomInset"] = "0.19999998807907",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["nameplateOccludedAlphaMult"] = "0.5",
				["nameplateSelfTopInset"] = "0.5",
				["ShowClassColorInNameplate"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "0",
			},
			["hover_highlight_alpha"] = 0.5,
			["show_health_prediction"] = false,
			["login_counter"] = 43994,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["aura_tracker"] = {
				["debuff"] = {
					315341, -- [1]
					207756, -- [2]
					280322, -- [3]
					340075, -- [4]
					316220, -- [5]
					280321, -- [6]
					319504, -- [7]
					256495, -- [8]
					190533, -- [9]
					345569, -- [10]
					347037, -- [11]
				},
				["buff_tracked"] = {
					["227931"] = true,
					["365338"] = true,
					["389808"] = true,
					["343502"] = false,
					["209859"] = true,
					["297133"] = true,
					["343503"] = true,
					["163689"] = true,
					["233210"] = true,
					["338510"] = false,
				},
				["buff"] = {
					273607, -- [1]
					283928, -- [2]
					311975, -- [3]
					343208, -- [4]
					197862, -- [5]
					66235, -- [6]
					344548, -- [7]
					189949, -- [8]
					343196, -- [9]
					317929, -- [10]
					259895, -- [11]
					290494, -- [12]
					327993, -- [13]
					322540, -- [14]
					332672, -- [15]
					321708, -- [16]
					305395, -- [17]
					41450, -- [18]
					200327, -- [19]
					290583, -- [20]
					320407, -- [21]
					236801, -- [22]
					194223, -- [23]
					333920, -- [24]
					74001, -- [25]
					212753, -- [26]
					175395, -- [27]
					197874, -- [28]
					200816, -- [29]
					196718, -- [30]
					173898, -- [31]
					315948, -- [32]
					122783, -- [33]
					322108, -- [34]
					343150, -- [35]
					296497, -- [36]
					344363, -- [37]
					205202, -- [38]
					255016, -- [39]
					289626, -- [40]
					337851, -- [41]
					228048, -- [42]
					341857, -- [43]
					23333, -- [44]
					198144, -- [45]
					292152, -- [46]
					321702, -- [47]
					29166, -- [48]
					197061, -- [49]
					215776, -- [50]
					209194, -- [51]
					272682, -- [52]
					212640, -- [53]
					216451, -- [54]
					79542, -- [55]
					187827, -- [56]
					124974, -- [57]
					207812, -- [58]
					212295, -- [59]
					34976, -- [60]
					196555, -- [61]
					129035, -- [62]
					316849, -- [63]
					265314, -- [64]
					69369, -- [65]
					321745, -- [66]
					316828, -- [67]
					278454, -- [68]
					285272, -- [69]
					279043, -- [70]
					203048, -- [71]
					198817, -- [72]
					316834, -- [73]
					344878, -- [74]
					320379, -- [75]
					335255, -- [76]
					231627, -- [77]
					328767, -- [78]
					198111, -- [79]
					125174, -- [80]
					317138, -- [81]
					322110, -- [82]
					284508, -- [83]
					236439, -- [84]
					328682, -- [85]
					325208, -- [86]
					185422, -- [87]
					317138, -- [88]
					213602, -- [89]
					323048, -- [90]
				},
				["debuff_tracked"] = {
					["335372"] = false,
					["323059"] = false,
				},
				["debuff_banned"] = {
					["331653"] = true,
					["294934"] = true,
					["255909"] = true,
					["353354"] = true,
					["324260"] = true,
					["356372"] = false,
					["358379"] = true,
					["5760"] = true,
					["394021"] = true,
					["256148"] = true,
					["169623"] = true,
					["204242"] = true,
					["391568"] = true,
					["6343"] = true,
					["273836"] = true,
					["356329"] = true,
					["279416"] = true,
					["314113"] = true,
					["331016"] = false,
					["360277"] = true,
					["345466"] = true,
					["206760"] = true,
					["392388"] = true,
					["354052"] = true,
					["394328"] = true,
					["286581"] = true,
					["389788"] = false,
					["352534"] = true,
					["294909"] = true,
					["295367"] = true,
					["321330"] = true,
				},
				["buff_banned"] = {
					["333575"] = true,
					["318486"] = true,
					["343613"] = false,
					["333553"] = true,
					["216777"] = true,
					["327416"] = false,
					["317602"] = true,
					["302564"] = true,
					["292664"] = true,
					["61574"] = true,
					["303380"] = true,
					["284471"] = true,
					["286145"] = true,
					["333579"] = true,
					["268710"] = true,
					["236502"] = true,
					["61573"] = true,
					["206150"] = true,
					["311571"] = true,
					["209746"] = true,
					["5760"] = true,
					["284882"] = true,
					["343553"] = true,
					["266499"] = true,
					["323961"] = true,
				},
			},
			["extra_icon_caster_font"] = "Expressway",
			["aura_sort"] = true,
			["cast_statusbar_color"] = {
				nil, -- [1]
				1, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["extra_icon_auras_mine"] = {
				["Serrated Bone Spike"] = true,
				["209859"] = false,
				["Violent Detonation"] = false,
				["Plague Bomb"] = false,
			},
			["bossmod_aura_height"] = 32.105155944824,
			["cast_statusbar_color_interrupted"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
			},
			["aura_stack_font"] = "Expressway",
			["patch_version"] = 21,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["range_check_in_range_or_target_alpha"] = 1,
			["range_check_buffs_alpha"] = 0.89999997615814,
			["aura_timer_text_size"] = 9,
			["target_highlight"] = false,
			["number_region_first_run"] = true,
			["target_highlight_alpha"] = 0.34999999403954,
			["target_highlight_height"] = 15,
			["first_run2"] = true,
			["version"] = 71,
			["script_banned_user"] = {
				["Player-3674-08A5D7A3"] = true,
			},
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.299999952316284,
				},
			},
			["indicator_pet"] = false,
			["extra_icon_show_offensive_border"] = {
				nil, -- [1]
				0.65098039215686, -- [2]
				0.10196078431373, -- [3]
			},
			["extra_icon_use_blizzard_border_color"] = false,
			["dps"] = {
				["colors"] = {
					["notontank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["noaggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["aggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
					},
				},
			},
			["indicator_elite"] = false,
			["range_check_alpha_friendlies"] = 1,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.54117647058824, -- [1]
						0.43137254901961, -- [2]
					},
					["anothertank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["aggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["noaggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
					},
					["nocombat"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.91372549019608, -- [2]
						0.22745098039216, -- [3]
					},
				},
			},
			["focus_as_target_alpha"] = true,
			["health_statusbar_bgcolor"] = {
				0.21176472306252, -- [1]
				0.21176472306252, -- [2]
				0.21176472306252, -- [3]
				1, -- [4]
			},
			["indicator_rare"] = false,
			["extra_icon_show_purge_border"] = {
				nil, -- [1]
				0.92549019607843, -- [2]
			},
			["auto_toggle_friendly_enabled"] = true,
			["cast_statusbar_spark_width"] = 11,
			["target_shady_enabled"] = false,
		},
		["Fragnance Plater"] = {
			["target_shady_combat_only"] = false,
			["extra_icon_use_blizzard_border_color"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
						275826, -- [2]
						272888, -- [3]
						272659, -- [4]
						267901, -- [5]
						267830, -- [6]
						265393, -- [7]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						257785, -- [18]
						267237, -- [19]
						266951, -- [20]
						267273, -- [21]
						267433, -- [22]
						263066, -- [23]
						255577, -- [24]
						255371, -- [25]
						275671, -- [26]
						315932, -- [27]
						350687, -- [28]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						258153, -- [28]
						258313, -- [29]
						257069, -- [30]
						274569, -- [31]
						278020, -- [32]
						261635, -- [33]
						272700, -- [34]
						280404, -- [35]
						268030, -- [36]
						265368, -- [37]
						263891, -- [38]
						264520, -- [39]
						265407, -- [40]
						278567, -- [41]
						278602, -- [42]
						258128, -- [43]
						257791, -- [44]
						258938, -- [45]
						265089, -- [46]
						272183, -- [47]
						256060, -- [48]
						257397, -- [49]
						257899, -- [50]
						269972, -- [51]
						270901, -- [52]
						270492, -- [53]
						268129, -- [54]
						268709, -- [55]
						263215, -- [56]
						268797, -- [57]
						262540, -- [58]
						262554, -- [59]
						253517, -- [60]
						255041, -- [61]
						252781, -- [62]
						250368, -- [63]
						258777, -- [64]
						317165, -- [65]
						350421, -- [66]
						352158, -- [67]
						349985, -- [68]
						329239, -- [69]
						328400, -- [70]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						384194, -- [7]
						392576, -- [8]
						198750, -- [9]
						387843, -- [10]
						387411, -- [11]
						211299, -- [12]
						198595, -- [13]
						198934, -- [14]
						198962, -- [15]
						156722, -- [16]
						275192, -- [17]
						265912, -- [18]
						274438, -- [19]
						268317, -- [20]
						268375, -- [21]
						276767, -- [22]
						264105, -- [23]
						265876, -- [24]
						270464, -- [25]
						266106, -- [26]
						272180, -- [27]
						278961, -- [28]
						278755, -- [29]
						265468, -- [30]
						256405, -- [31]
						256897, -- [32]
						264101, -- [33]
						280604, -- [34]
						268702, -- [35]
						281621, -- [36]
						262515, -- [37]
						255824, -- [38]
						253583, -- [39]
						250096, -- [40]
						350554, -- [41]
						348513, -- [42]
						351779, -- [43]
						328180, -- [44]
						319898, -- [45]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1581355377,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 112,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"blue\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1586435143,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"blue\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 76,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
						"Iron-willed Enforcer", -- [1]
					},
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = false,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1571333938,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Revision"] = 46,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1586435149,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 133,
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Name"] = "UnitPower [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						372107, -- [6]
						381525, -- [7]
						386660, -- [8]
						385578, -- [9]
						384699, -- [10]
						153501, -- [11]
						153686, -- [12]
						154442, -- [13]
						192018, -- [14]
						219488, -- [15]
						372087, -- [16]
						391726, -- [17]
						391723, -- [18]
						377383, -- [19]
						388976, -- [20]
						370764, -- [21]
						387067, -- [22]
						391118, -- [23]
						391136, -- [24]
						382233, -- [25]
						209027, -- [26]
						212031, -- [27]
						207261, -- [28]
						207979, -- [29]
						198888, -- [30]
						199805, -- [31]
						199050, -- [32]
						191508, -- [33]
						152792, -- [34]
						153395, -- [35]
						255952, -- [36]
						257426, -- [37]
						274400, -- [38]
						272609, -- [39]
						269843, -- [40]
						269029, -- [41]
						272827, -- [42]
						269266, -- [43]
						263912, -- [44]
						264923, -- [45]
						258864, -- [46]
						256955, -- [47]
						265540, -- [48]
						260793, -- [49]
						270003, -- [50]
						270507, -- [51]
						257337, -- [52]
						268415, -- [53]
						275907, -- [54]
						268865, -- [55]
						260669, -- [56]
						260280, -- [57]
						253239, -- [58]
						265541, -- [59]
						250258, -- [60]
						352833, -- [61]
						330403, -- [62]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [12]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = false,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\nPlater.SetNameplateSize (unitFrame, width, height)Plater.SetNameplateColor (unitFrame, color)Plater.SetNameplateSize (unitFrame, width, height)Plater.SetNameplateColor (unitFrame, color)",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    PlaySoundFile(\"569593\",  \"Master\")\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, \"green\")\n    \n    \n    \nend\n\n\n",
					["Time"] = 1586435148,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\nPlater.SetNameplateSize (unitFrame, width, height)Plater.SetNameplateColor (unitFrame, color)Plater.SetNameplateSize (unitFrame, width, height)Plater.SetNameplateColor (unitFrame, color)",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 145,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    PlaySoundFile(\"569593\",  \"Master\")\n    \nend\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, \"green\")\n    \n    \n    \nend\n\n\n",
					["Name"] = "Algan Color",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["NpcNames"] = {
						"Wayward Algan", -- [1]
						"Lost Algan", -- [2]
					},
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    Plater.RefreshNameplateColor (unitFrame)\nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    local health = UnitHealth(unitId)\n    local healthMax = UnitHealthMax(unitId)\n    local pct = health/healthMax\n    local stacks = envTable._StackCount\n    local stackPct = stacks/30\n    \n    if  (stacks<20 and stackPct-0.2<pct) or stacks<10 then\n        Plater.SetNameplateColor (unitFrame, 0,0,1)\n    else        \n        Plater.RefreshNameplateColor (unitFrame)\n    end\n    \n    \n    \nend",
					["Time"] = 1586435148,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend",
					["Icon"] = 1129420,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    Plater.RefreshNameplateColor (unitFrame)\nend",
					["Revision"] = 83,
					["Author"] = "Nnogga-Tarren Mill",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    local health = UnitHealth(unitId)\n    local healthMax = UnitHealthMax(unitId)\n    local pct = health/healthMax\n    local stacks = envTable._StackCount\n    local stackPct = stacks/30\n    \n    if  (stacks<20 and stackPct-0.2<pct) or stacks<10 then\n        Plater.SetNameplateColor (unitFrame, 0,0,1)\n    else        \n        Plater.RefreshNameplateColor (unitFrame)\n    end\n    \n    \n    \nend",
					["Name"] = "Zaqun Stacks Low",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						300635, -- [1]
					},
					["Desc"] = "",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = false,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						273577, -- [6]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"yellow\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1586435146,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"yellow\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 84,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
						"Spellbound Ritualist", -- [1]
					},
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1583331173,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Revision"] = 2,
					["Author"] = "Fragdh-Mythic Dungeon Heroes - EU",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Name"] = "New Script",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["SpellIds"] = {
					},
					["Desc"] = "",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 2.5\n    envTable.GlowAlpha = 1\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1    \n    envTable.HealthBarColor = \"blue\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-26, 25, 10, -13)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    --Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \nend\n\n\n",
					["Time"] = 1586015742,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 2.5\n    envTable.GlowAlpha = 1\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1    \n    envTable.HealthBarColor = \"blue\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-26, 25, 10, -13)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
					["Icon"] = "INTERFACE\\ICONS\\INV_wildfireBomb",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\nend\n\n\n",
					["Revision"] = 840,
					["Author"] = "Bombad�o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    --Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \nend\n\n\n",
					["Name"] = "M+ Explosive [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n        end)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340966,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 21,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 687,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Name"] = "Health Bar Height Mod",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [15]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [20]
						{
							["Type"] = 7,
							["Name"] = "Color List by SpellId",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = true,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            texture:Hide()\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        textureStretched:Hide()  \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        print(\"no envTable.NextPercent\")\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670623964,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 498,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [36]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [37]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [38]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
					},
				}, -- [39]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [40]
			},
			["aura_timer_text_color"] = {
				nil, -- [1]
				0.96470588235294, -- [2]
				0.92549019607843, -- [3]
			},
			["saved_cvars_last_change"] = {
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8500",
				["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
			},
			["url"] = "https://wago.io/cfHuh8PGV/2",
			["hover_highlight_alpha"] = 0.59999996423721,
			["cast_statusbar_fadein_time"] = 0.0099999997764826,
			["indicator_raidmark_scale"] = 0.5,
			["cast_statusbar_spark_alpha"] = 1,
			["aura2_y_offset"] = 0.099990844726563,
			["castbar_framelevel"] = 0,
			["aura_timer"] = false,
			["plate_config"] = {
				["player"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "10089",
					["level_text_size"] = 11,
					["big_actortitle_text_font"] = "10089",
					["cast"] = {
						115, -- [1]
						8, -- [2]
					},
					["spellpercent_text_size"] = 11,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.86789692938328, -- [4]
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["healthbar_enabled"] = false,
					["cast_incombat"] = {
						115, -- [1]
						8, -- [2]
					},
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "10089",
					["percent_text_color"] = {
						0.93725490196078, -- [1]
						0.97647058823529, -- [2]
						1, -- [3]
					},
					["actorname_text_font"] = "10089",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["power_percent_text_size"] = 8,
					["percent_text_enabled"] = false,
					["all_names"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["level_text_alpha"] = 1,
					["big_actortitle_text_outline"] = "OUTLINE",
					["percent_text_size"] = 11,
					["actorname_text_spacing"] = 12,
					["percent_text_font"] = "10089",
					["spellname_text_font"] = "10089",
					["actorname_text_size"] = 13,
					["quest_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 1,
					},
					["mana_incombat"] = {
						100, -- [1]
						4, -- [2]
					},
					["health_incombat"] = {
						115, -- [1]
						15, -- [2]
					},
					["spellname_text_size"] = 12,
					["health"] = {
						115, -- [1]
						15, -- [2]
					},
					["spellpercent_text_enabled"] = false,
					["power_percent_text_font"] = "Accidental Presidency",
					["mana"] = {
						100, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "10089",
					["level_text_enabled"] = true,
				},
				["friendlyplayer"] = {
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellpercent_text_font"] = "Big Noodle Titling",
					["level_text_size"] = 9,
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "10089",
					["cast"] = {
						115, -- [1]
					},
					["spellpercent_text_size"] = 13,
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						[3] = 0.78039215686275,
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.86789692938328, -- [4]
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						115, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "10089",
					["percent_text_color"] = {
						0.93725490196078, -- [1]
						0.97647058823529, -- [2]
						1, -- [3]
					},
					["actorname_text_font"] = "Expressway",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 13,
					["all_names"] = true,
					["use_playerclass_color"] = true,
					["percent_text_ooc"] = true,
					["spellname_text_font"] = "Big Noodle Titling",
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["percent_show_health"] = true,
					["spellpercent_text_enabled"] = true,
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 12,
					["only_damaged"] = false,
					["buff_frame_y_offset"] = 0,
					["spellname_text_size"] = 13,
					["quest_enabled"] = true,
					["level_text_alpha"] = 1,
					["percent_text_size"] = 13,
					["percent_text_font"] = "Big Noodle Titling",
					["health_incombat"] = {
						115, -- [1]
						15, -- [2]
					},
					["health"] = {
						115, -- [1]
						13, -- [2]
					},
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 1,
					},
					["big_actorname_text_size"] = 10,
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_enabled"] = true,
					["big_actorname_text_font"] = "10089",
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Big Noodle Titling",
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 11,
					["actorname_use_class_color"] = false,
					["big_actortitle_text_font"] = "Big Noodle Titling",
					["cast"] = {
						115, -- [1]
						8, -- [2]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.86789692938328, -- [4]
					},
					["cast_incombat"] = {
						115, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = true,
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["level_text_font"] = "Big Noodle Titling",
					["percent_text_color"] = {
						0.93725490196078, -- [1]
						0.97647058823529, -- [2]
						1, -- [3]
					},
					["actorname_text_font"] = "Big Noodle Titling",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 13,
					["power_percent_text_font"] = "Accidental Presidency",
					["actorname_use_guild_color"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["only_thename"] = true,
					["spellname_text_font"] = "Big Noodle Titling",
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 1,
					["actorname_use_friends_color"] = true,
					["percent_text_size"] = 11,
					["actorname_text_spacing"] = 12,
					["only_damaged"] = false,
					["show_guild_name"] = false,
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["spellpercent_text_enabled"] = true,
					["spellname_text_size"] = 12,
					["percent_text_font"] = "Big Noodle Titling",
					["big_actorname_text_font"] = "Big Noodle Titling",
					["health_incombat"] = {
						115, -- [1]
						15, -- [2]
					},
					["health"] = {
						115, -- [1]
						15, -- [2]
					},
					["spellpercent_text_size"] = 11,
					["percent_text_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 1,
					},
					["percent_show_health"] = true,
					["level_text_enabled"] = true,
				},
				["global_health_height"] = 14,
				["global_health_width"] = 110,
				["enemyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 11,
					["big_actortitle_text_font"] = "Big Noodle Titling",
					["cast"] = {
						110, -- [1]
						4, -- [2]
					},
					["spellpercent_text_size"] = 7,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellpercent_text_anchor"] = {
						["side"] = 4,
						["x"] = -9,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.87000000476837, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = -0.099998474121094,
						["x"] = -1.8100051879883,
					},
					["cast_incombat"] = {
						110, -- [1]
						4, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
						["x"] = -19,
					},
					["percent_text_anchor"] = {
						["side"] = 11,
						["x"] = -1,
					},
					["level_text_font"] = "Big Noodle Titling",
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["actorname_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 8,
					["big_actorname_text_font"] = "Big Noodle Titling",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["side"] = 10,
						["x"] = 1,
					},
					["percent_text_size"] = 7,
					["actorname_text_spacing"] = 7,
					["percent_text_font"] = "Expressway",
					["quest_enabled"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellname_text_font"] = "Expressway",
					["power_percent_text_font"] = "Accidental Presidency",
					["health_incombat"] = {
						110, -- [1]
						14, -- [2]
					},
					["health"] = {
						110, -- [1]
						14, -- [2]
					},
					["big_actortitle_text_size"] = 10,
					["level_text_alpha"] = 1,
					["spellname_text_size"] = 7,
					["percent_show_percent"] = false,
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Expressway",
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["spellpercent_text_font"] = "Expressway",
					["spellname_text_font"] = "Expressway",
					["level_text_size"] = 11,
					["power_percent_text_font"] = "Accidental Presidency",
					["big_actortitle_text_font"] = "Big Noodle Titling",
					["cast"] = {
						110, -- [1]
						4, -- [2]
					},
					["spellpercent_text_size"] = 7,
					["actorname_text_size"] = 8,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = -0.099998474121094,
						["x"] = -1.8100051879883,
					},
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["side"] = 10,
						["x"] = 1,
					},
					["spellpercent_text_anchor"] = {
						["side"] = 4,
						["x"] = -9,
					},
					["percent_text_size"] = 7,
					["actorname_text_spacing"] = 7,
					["percent_text_font"] = "Expressway",
					["spellname_text_size"] = 7,
					["health_incombat"] = {
						110, -- [1]
						14, -- [2]
					},
					["cast_incombat"] = {
						110, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Big Noodle Titling",
					["actorname_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.87000000476837, -- [4]
					},
					["percent_show_percent"] = false,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["health"] = {
						110, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
						["x"] = -19,
					},
					["level_text_alpha"] = 1,
					["percent_text_anchor"] = {
						["side"] = 11,
						["x"] = -1,
					},
					["level_text_font"] = "Big Noodle Titling",
					["level_text_enabled"] = false,
				},
			},
			["health_selection_overlay"] = "Empty",
			["aura_y_offset"] = 0.099990844726563,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["focus_texture"] = "Kait1",
			["cast_statusbar_color_nointerrupt"] = {
				1, -- [1]
				0, -- [2]
				0.12156862745098, -- [3]
				0.96000000089407, -- [4]
			},
			["first_run2"] = true,
			["indicator_spec"] = false,
			["border_thickness"] = 0.49999997019768,
			["resources_settings"] = {
				["chr"] = {
					["Player-3676-0E035997"] = "Essence",
				},
			},
			["npc_cache"] = {
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[155634] = {
					"Bound Storm", -- [1]
					"The Eternal Palace", -- [2]
				},
				[156146] = {
					"Voidbound Shieldbearer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[127485] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				[49674] = {
					"Helix Gearbreaker", -- [1]
					"Deadmines", -- [2]
				},
				[50058] = {
					"Terrorpene", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[147957] = {
					"Azerchrysalis", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"The Eternal Palace", -- [2]
				},
				[130301] = {
					"Shadow Hunter Ju'loa", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[154612] = {
					"Unleashed Nightmare", -- [1]
					"The Eternal Palace", -- [2]
				},
				[159219] = {
					"Umbral Seer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[147958] = {
					"Geoactive Refraction", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[140792] = {
					"Breakbeak Bonepicker", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[145399] = {
					"Wild Starcaller", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[124159] = {
					"Lumbering Leo", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[124927] = {
					"Jun-Ti", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[84233] = {
					"Thrashtalon Vulture", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[133627] = {
					"Tally Zapnabber", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[61448] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140794] = {
					"Scartalon", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140795] = {
					"Dunecircler the Bleak", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145402] = {
					"Frenzied Wildheart", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[110340] = {
					"Zouziner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[47244] = {
					"Mírabelle", -- [1]
					"Isle of Conquest", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[43917] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[44045] = {
					"Darkened Creation", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[136190] = {
					"Shadowy Rift", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140797] = {
					"Corpseharvest", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146940] = {
					"Primordial Mindbender", -- [1]
					"Crucible of Storms", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[160249] = {
					"Spike Tentacle", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140798] = {
					"Cragcaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[154619] = {
					"Watcher Aum-ka", -- [1]
					"Halls of Origination", -- [2]
				},
				[147965] = {
					"Volatile Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140799] = {
					"Driftstalker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[76814] = {
					"Flamebender Ka'graz", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[54923] = {
					"Infinite Warden", -- [1]
					"End Time", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[127490] = {
					"Knight Captain Valyri", -- [1]
					"Tol Dagor", -- [2]
				},
				[140800] = {
					"Cloudwing the Killthief", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
				},
				[142336] = {
					"Pygmy Octopus", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155645] = {
					"Walkie Shockie X2", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[163836] = {
					"Psychophage", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[147968] = {
					"Agitated Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[78351] = {
					"Uktar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146945] = {
					"Swarming Voidspawn", -- [1]
					"Crucible of Storms", -- [2]
				},
				[100362] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[130307] = {
					"Unstable Typhoon", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[151041] = {
					"Etruvis the Vassal", -- [1]
					"Crucible of Storms", -- [2]
				},
				[111112] = {
					"Ebulliant", -- [1]
					"The Nighthold", -- [2]
				},
				[162303] = {
					"Aqir Swarmkeeper", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[156161] = {
					"Inquisitor Gnshal", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140293] = {
					"Snowfur Snarler", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[153090] = {
					"Lady Venomtongue", -- [1]
					"The Eternal Palace", -- [2]
				},
				[146436] = {
					"Tempting Siren", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140294] = {
					"Snowfur Wolf", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[153091] = {
					"Serena Scarscale", -- [1]
					"The Eternal Palace", -- [2]
				},
				[149508] = {
					"Ice Blocked Nathanos", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[162305] = {
					"Aqir Heartpiercer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138247] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146949] = {
					"Sputtering Fleshrender", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[76306] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[153092] = {
					"Venna Seastorm", -- [1]
					"The Eternal Palace", -- [2]
				},
				[162306] = {
					"Aqir Drone", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140296] = {
					"Dampfur the Musky", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136713] = {
					"Highlands Laborer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[157700] = {
					"Agustus Moulaine", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[145927] = {
					"Starcaller Ellana", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140297] = {
					"Nok-arak", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136714] = {
					"Hulking Laborer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[126215] = {
					"Zian-Ti Darkweaver", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[148488] = {
					"Unliving Augur", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[149000] = {
					"Baleful Guardian Spirit", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[62348] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140299] = {
					"Ghostfang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161286] = {
					"Dark Ritualist", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[126216] = {
					"Zian-Ti Destroyer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146442] = {
					"Grunt", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[155656] = {
					"Misha", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140300] = {
					"Ripshread", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[153097] = {
					"Voidbound Shaman", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[155657] = {
					"Huffer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140301] = {
					"Scarpaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56718] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[24396] = {
					"Forest Frog", -- [1]
					"Zul'Aman", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146956] = {
					"Ashen Deathguard", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[61453] = {
					"Mu'Shiba", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[123146] = {
					"Torn Spirit", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131089] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[76310] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[145934] = {
					"Ivan the Mad", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[136721] = {
					"Circle Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[157709] = {
					"Dreliana", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[162828] = {
					"Corrosive Digester", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146960] = {
					"Shambling Deadeye", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[161293] = {
					"Neglected Guild Bank", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[49681] = {
					"Foe Reaper 5000", -- [1]
					"Deadmines", -- [2]
				},
				[151056] = {
					"Varanq'ul the Mighty", -- [1]
					"Crucible of Storms", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[23501] = {
					"Hans", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[146963] = {
					"Shortufse Sapper", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[39956] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[883] = {
					"Deer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[44819] = {
					"Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[151059] = {
					"Eternal Guardian", -- [1]
					"Crucible of Storms", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[135192] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[80409] = {
					"Markog Aba'dir", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155156] = {
					"Jaina Proudmoore", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[159764] = {
					"Jesh'ra", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135706] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				[161812] = {
					"Faceless Ruiner", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[130318] = {
					"Slitherblade Prophet", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155158] = {
					"First Arcanist Thalyssra", -- [1]
					"The Eternal Palace", -- [2]
				},
				[118801] = {
					"Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[127503] = {
					"Overseer Korgus", -- [1]
					"Tol Dagor", -- [2]
				},
				[161813] = {
					"K'thir Assassin", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[133660] = {
					"BomBot 9000", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[80411] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[101398] = {
					"Psyfiend", -- [1]
					"Eye of the Storm", -- [2]
				},
				[130319] = {
					"Slitherblade Phalanx", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134173] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[159767] = {
					"Sanguimar", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139804] = {
					"Venture Inspector", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140828] = {
					"Morningdew", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161815] = {
					"K'thir Voidcaller", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[155161] = {
					"Shandris Feathermoon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[159768] = {
					"Deresh of the Nothingness", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139805] = {
					"Mechanical Guardhound", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140829] = {
					"Autumnbreeze", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139806] = {
					"Venture Demolitions Expert", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[151068] = {
					"Tentacled Voidpriest", -- [1]
					"Crucible of Storms", -- [2]
				},
				[131617] = {
					"Groundskeeper Lilith", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[118804] = {
					"Domatrax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[139808] = {
					"Venture Oaf", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[59794] = {
					"Krik'thik Disruptor", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[162331] = {
					"Corrupted Neuron", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139809] = {
					"Venture Acquisitions Specialist", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[68129] = {
					"Ashtongue Shaman", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[18128] = {
					"Sporebat", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[149535] = {
					"Icebound Image", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[49045] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[139810] = {
					"Venture Middle Manager", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140322] = {
					"Stonehusk Broodwatcher", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140834] = {
					"Laughing Blaze", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[139811] = {
					"Venture Sub-Lead", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140835] = {
					"Scheming Flame", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[155680] = {
					"Deephive Summoner", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[139812] = {
					"Venture Producer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140324] = {
					"Stonehusk Harvester", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140836] = {
					"Brightfire", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139813] = {
					"Senior Producer Gixi", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Eye of the Storm", -- [2]
				},
				[161312] = {
					"Crushing Tendril", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[36633] = {
					"Ice Sphere", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[131112] = {
					"Cutwater Striker", -- [1]
					"Tol Dagor", -- [2]
				},
				[139814] = {
					"Merger Specialist Huzzle", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140838] = {
					"Mischievous Flood", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[159266] = {
					"Portal Master", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[135720] = {
					"Moon-Touched Huntress", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140327] = {
					"Queen Stonehusk", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140839] = {
					"Water Spirit", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[130325] = {
					"Deepsea Viseclaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130581] = {
					"Sand-Eye", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155684] = {
					"Depthcaller Xith'el", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[160291] = {
					"Ashwalker Assassin", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[155685] = {
					"Deephive Soldier", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[135722] = {
					"Twilight Prowler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140329] = {
					"Vy'lix the Corpse-Mauler", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140841] = {
					"Snickering Ripple", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[155686] = {
					"Azsh'ari Venomwatcher", -- [1]
					"The Eternal Palace", -- [2]
				},
				[135723] = {
					"Moonclaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[115226] = {
					"Ravenian", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140842] = {
					"Ebb", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[49815] = {
					"Shale Spider", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[87841] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[147497] = {
					"Prelate Akk'al", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[135724] = {
					"Brushstalker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[140843] = {
					"Air Spirit", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[11658] = {
					"Molten Giant", -- [1]
					"Molten Core", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[78116] = {
					"Elementale dell'Acqua", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140332] = {
					"Chitterbore", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140844] = {
					"Zephis", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[39450] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[155689] = {
					"Zanj'ir Gladiator", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140333] = {
					"Steelshell", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140845] = {
					"Playful Gust", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[130584] = {
					"Gorespike", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[77605] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[140334] = {
					"Nightscale Coilfang", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144941] = {
					"Akunda's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[155691] = {
					"Zanj'ir Wrangler", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129305] = {
					"Rapacious Fathomjaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140335] = {
					"Nightscale Screecher", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144942] = {
					"Spark Bot", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[140336] = {
					"Nightscale Wind Serpent", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155693] = {
					"Subdued Brute", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140337] = {
					"Nightscale Hatchling", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144944] = {
					"Thirsting Bloodsucker", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140338] = {
					"Clutch Guardian Jinka'lo", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140850] = {
					"Frolicsome Soilkin", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[140339] = {
					"Vale Terror", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[157231] = {
					"Shad'har the Insatiable", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23889] = {
					"Amani'shi Savage", -- [1]
					"Zul'Aman", -- [2]
				},
				[56472] = {
					"Fragrant Lotus", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[136246] = {
					"Stromgarde Faithful", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144948] = {
					"Leatherwing Hunter", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[45467] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[149556] = {
					"Eternal Enforcer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146485] = {
					"Nevara Nightshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[135736] = {
					"Gore", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140343] = {
					"Razorwing", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[140855] = {
					"Trickle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130333] = {
					"Gritplate Basilisk", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[144951] = {
					"Palefur Devourer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[149558] = {
					"Jaina's Tide Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[145975] = {
					"Stonehide Buck", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56473] = {
					"Flying Snow", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[140345] = {
					"Stormscreech", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144952] = {
					"Hookfang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145976] = {
					"Stonehide Bull", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140858] = {
					"Pyrekin", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[145977] = {
					"Mammoth Stonehide", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158774] = {
					"Broken Citizen", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[151096] = {
					"Fellnase", -- [1]
					"Ashran", -- [2]
				},
				[161334] = {
					"Gnashing Terror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[11659] = {
					"Molten Destroyer", -- [1]
					"Molten Core", -- [2]
				},
				[130335] = {
					"Gritplate Crystaleye", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[161335] = {
					"Void Horror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146491] = {
					"Phantom of Retribution", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[151098] = {
					"Shadowy Appendage", -- [1]
					"Crucible of Storms", -- [2]
				},
				[151610] = {
					"Amathet Guardian", -- [1]
					"Halls of Origination", -- [2]
				},
				[48284] = {
					"Mining Powder", -- [1]
					"Deadmines", -- [2]
				},
				[136254] = {
					"Stromgarde Knight", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144956] = {
					"Razorbite", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[154682] = {
					"Echo of Fear", -- [1]
					"The Eternal Palace", -- [2]
				},
				[61337] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[135231] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				[144957] = {
					"Shali'i", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146493] = {
					"Phantom of Slaughter", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[151612] = {
					"Amathet Sun Priest", -- [1]
					"Halls of Origination", -- [2]
				},
				[140863] = {
					"Rubywind Prankster", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[81197] = {
					"Iron Raider", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155708] = {
					"Tentacle", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[140864] = {
					"Gigglefit", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[154685] = {
					"Echo of Delirium", -- [1]
					"The Eternal Palace", -- [2]
				},
				[43934] = {
					"Soul Fragment", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[135234] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140353] = {
					"Brightscale Coilfang", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[129826] = {
					"Brineshell Snapclaw", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[154174] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				[158781] = {
					"Shredded Psyche", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[61338] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[143425] = {
					"Echo of Garrosh Hellscream", -- [1]
					"Siege of Orgrimmar - Mag'har Orc Unlock Scenario", -- [2]
				},
				[140354] = {
					"Brightscale Wind Serpent", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[154175] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138307] = {
					"Smashface", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138819] = {
					"Bloodwake Marauder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[152128] = {
					"Orgozoa", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140355] = {
					"Brightscale Screecher", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[129827] = {
					"Brineshell Crusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[149569] = {
					"Dazari Worshipper", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138308] = {
					"Ook-Aak", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138820] = {
					"Bloodwake Vrykul", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[140356] = {
					"Brightscale Hatchling", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[19668] = {
					"Shadowfiend", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138309] = {
					"Nibnub", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138821] = {
					"Bloodwake Warmaiden", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140357] = {
					"Venomreaver", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[53021] = {
					"Amani'shi Peon", -- [1]
					"Zul'Aman", -- [2]
				},
				[138822] = {
					"Bloodwake Harpooner", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[140358] = {
					"Sorrowcall", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[41376] = {
					"Nefarian", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[134216] = {
					"Shadeweaver Zarra", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138823] = {
					"Bloodwake Wayfinder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140359] = {
					"Thunderhawk Devourer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138824] = {
					"Halfid Ironeye", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[132170] = {
					"Striped Pacu", -- [1]
					"The Eternal Palace", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[138825] = {
					"Ingathora Blood-Drinker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139337] = {
					"Icetusk Blood-Drinker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129318] = {
					"Sandskitter Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140361] = {
					"Darkshadow the Omen", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129830] = {
					"Clackclaw the Behemoth", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[44704] = {
					"Minion of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[61340] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[139338] = {
					"Icetusk Prophet", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[152135] = {
					"Void-Twisted Spellweaver", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[140362] = {
					"Shimmerwing", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157254] = {
					"Tek'ris", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[138827] = {
					"Bodalf the Strong", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139339] = {
					"Icetusk Defender", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144970] = {
					"Kaldorei Archer", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[130087] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				[158279] = {
					"Haywire Clockwork Rocket Bot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[138828] = {
					"Berhild the Fierce", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[135245] = {
					"Bilge Rat Demolisher", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144971] = {
					"Druid of the Branch", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138829] = {
					"Ingel the Cunning", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139341] = {
					"Icetusk Shadowcaster", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[12076] = {
					"Lava Elemental", -- [1]
					"Molten Core", -- [2]
				},
				[68151] = {
					"Essence of Order", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[129832] = {
					"Krack", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56862] = {
					"Drunken Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[61213] = {
					"Krik'thik Conscript", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[138830] = {
					"Thorvast, Guided by the Stars", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139342] = {
					"Icetusk Warrior", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[69943] = {
					"Sorelion", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[144973] = {
					"Kaldorei Sentinel", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138831] = {
					"Horvuld Oceanscythe", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155723] = {
					"Swarmguard Kzaz", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[135760] = {
					"7th Legion Marine", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[113197] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[144974] = {
					"Forsaken Alchemist", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[139344] = {
					"Drakani Death-Defiler", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144975] = {
					"Forsaken Lancer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[158284] = {
					"Craggle Wobbletop", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[159308] = {
					"Zealous Adherent", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151630] = {
					"Void Ichor", -- [1]
					"Crucible of Storms", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140369] = {
					"Cryptseeker", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[144976] = {
					"Forsaken Deathguard", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[56863] = {
					"Sleepy Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[158285] = {
					"Tinkered Shieldbot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[159309] = {
					"Leeching Parasite", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				[135763] = {
					"Voidling", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140370] = {
					"Corpsefeaster", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144977] = {
					"Forsaken Deadshot", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[158286] = {
					"Reprogrammed Warbot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[22997] = {
					"Flame of Azzinoth", -- [1]
					"Black Temple", -- [2]
				},
				[139347] = {
					"Berserker Gola", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[54432] = {
					"Murozond", -- [1]
					"End Time", -- [2]
				},
				[140371] = {
					"Egg-Tender Ny'xik", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[54688] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[138836] = {
					"Zara'thik Swarmguard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139348] = {
					"Baga the Frostshield", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59551] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140372] = {
					"Hive Guardian Ksh'ix", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[120366] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[138837] = {
					"Zara'thik Ambershaper", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139349] = {
					"Grave-Caller Muja", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[48418] = {
					"Defias Envoker", -- [1]
					"Deadmines", -- [2]
				},
				[40484] = {
					"Erudax", -- [1]
					"Grim Batol", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"Freehold", -- [2]
				},
				[138838] = {
					"Zara'thik Mantid", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139350] = {
					"Anaha Witherbreath", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139862] = {
					"Voru'kar Spitter", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140374] = {
					"Hive Guardian Yx'nil", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138839] = {
					"Zara'thik Deathsinger", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139351] = {
					"Shadowspeaker Angolo", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138840] = {
					"Zara'thik Impaler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139352] = {
					"Death-Caller Majuli", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[140376] = {
					"Duneshell Scarab", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[138841] = {
					"Zara'thik Battlesinger", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135258] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135770] = {
					"Veteran Sergeant Slayde", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[140377] = {
					"Duneshell Harvester", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[40357] = {
					"Invoked Flaming Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[56865] = {
					"Aqua Dancer", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[61216] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[147032] = {
					"Nathanos Blightcaller", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[151639] = {
					"Crazed Gyreworm", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[160341] = {
					"Sewer Beastling", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140378] = {
					"Duneshell Broodwatcher", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138843] = {
					"Wingleader Srak'ik", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139355] = {
					"Guran the Frostblade", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139867] = {
					"Voru'kar Venomancer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[148569] = {
					"Breakwater Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[11661] = {
					"Flamewaker", -- [1]
					"Molten Core", -- [2]
				},
				[85562] = {
					"Skittering Doomstinger", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[138844] = {
					"Ya'vik the Imperial Blade", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[118834] = {
					"Fel Portal Guardian", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[139868] = {
					"Voru'kar Nerubian", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[159320] = {
					"Amahtet", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139357] = {
					"Icetusk Shambler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[48420] = {
					"Defias Digger", -- [1]
					"Deadmines", -- [2]
				},
				[16236] = {
					"Eye Stalk", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[138846] = {
					"Amberwinged Mindsinger", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155738] = {
					"Rallying Banner", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139870] = {
					"Voru'kar Swarmguard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140382] = {
					"Jeweled Harvester", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[120371] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[76094] = {
					"Sun Trinket", -- [1]
					"Skyreach", -- [2]
				},
				[140383] = {
					"Jeweled Scarab", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157275] = {
					"Darkwhisper Disciple", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[85564] = {
					"Jungle Axebeak", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[138848] = {
					"Blade-Dancer Zorlak", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[59426] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[152669] = {
					"Void Globule", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
				},
				[138849] = {
					"Hivelord Vix'ick", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[48421] = {
					"Defias Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[56867] = {
					"Fiery Trickster", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[138338] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[152159] = {
					"Zoatroid", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140386] = {
					"Topaz Borer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[138851] = {
					"Soul Hunter", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139875] = {
					"Hollow Widow", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140387] = {
					"Jeweled Queen", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133733] = {
					"Moonscythe Pelani", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[142947] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[143971] = {
					"Kor'gall Agitator", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[133734] = {
					"Rune Scribe Lusaris", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[120374] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[142948] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[152162] = {
					"Void-Twisted Skystriker", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[140389] = {
					"Tunnel-Keeper Ky'nyx", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144996] = {
					"Visage from Beyond", -- [1]
					"Crucible of Storms", -- [2]
				},
				[76865] = {
					"Beastlord Darmac", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[142949] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140902] = {
					"Vog'rish, the Ascended", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[99644] = {
					"Felguard Annihilator", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[142950] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[132713] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[142951] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[151653] = {
					"Void Tentacle", -- [1]
					"Uldir Scenario", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[137321] = {
					"Knight of Arathor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[133738] = {
					"Astralite Visara", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139881] = {
					"Broodwatcher Taldim-Ra", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[145000] = {
					"Lancer-Captain Blaer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[142953] = {
					"Theramore Citizen", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[148584] = {
					"Archmage Mordent Evenshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137835] = {
					"Vicious Black Bear", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[154727] = {
					"Sun Prophet Tenhamen", -- [1]
					"Halls of Origination", -- [2]
				},
				[134764] = {
					"Clattershell", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[147561] = {
					"Forsaken Blightspreader", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[151145] = {
					"Ténor", -- [1]
					"Eye of the Storm", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139884] = {
					"Prophet Doom-Ra", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[160871] = {
					"Possessed Package", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[149098] = {
					"Maiev Shadowsong", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[161895] = {
					"Thing From Beyond", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11982] = {
					"Magmadar", -- [1]
					"Molten Core", -- [2]
				},
				[134766] = {
					"Wavespitter", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[151658] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[80708] = {
					"Iron Taskmaster", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[149611] = {
					"Apetagonizer 3000", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[137838] = {
					"Rampaging Owlbeast", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[151147] = {
					"Hati", -- [1]
					"The Eternal Palace", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[134768] = {
					"Sandskitter the Relentless", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[76102] = {
					"Air Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[153196] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[158315] = {
					"Eye of Chaos", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[134769] = {
					"Jagged Claw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163947] = {
					"Psychophage", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[143985] = {
					"Absorb-o-Tron", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[149617] = {
					"Death Specter", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[77128] = {
					"Pack Beast", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[34605] = {
					"Swarm Scarab", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[155760] = {
					"Tank Buster MK2", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139892] = {
					"Voru'kar Swarmling", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136821] = {
					"Gulan Sharphorn", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[147571] = {
					"Pa'kura Priestess", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[88902] = {
					"Mol'dana Two-Blade", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[81224] = {
					"Bladespire Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[130620] = {
					"Frostfencer Seraphi", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[65612] = {
					"Minka", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[119103] = {
					"Sable Enforcer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136823] = {
					"Gulan Brute", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[162417] = {
					"Anubisath Sentinel", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[155763] = {
					"Darkweaver Kar'dress", -- [1]
					"The Eternal Palace", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[136824] = {
					"Gulan Flamecaller", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[76874] = {
					"Dreadwing", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[130621] = {
					"Squallshaper Bryson", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139384] = {
					"Slitherblade Striker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[69964] = {
					"Kanrethad Ebonlocke", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[47403] = {
					"Defias Reaper", -- [1]
					"Deadmines", -- [2]
				},
				[136825] = {
					"Gulan Oathguard", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157812] = {
					"Billibub Cogspinner", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				[136826] = {
					"Gulan Firespeaker", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157813] = {
					"Sprite Jumpsprocket", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[130622] = {
					"Squallshaper Auran", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139386] = {
					"Forked-Tongue", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150136] = {
					"Faceless Render", -- [1]
					"Uldir Scenario", -- [2]
				},
				[146553] = {
					"Kul Tiran Strongarm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[155767] = {
					"Grul'taj", -- [1]
					"The Eternal Palace", -- [2]
				},
				[62632] = {
					"Sik'thik Engineer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				[136828] = {
					"Witherbranch Warrior", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[11663] = {
					"Flamewaker Healer", -- [1]
					"Molten Core", -- [2]
				},
				[158327] = {
					"Crackling Shard", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139388] = {
					"Zess'ez", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[47404] = {
					"Defias Watcher", -- [1]
					"Deadmines", -- [2]
				},
				[136829] = {
					"Witherbranch Axe Thrower", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158328] = {
					"Il'gynoth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[39854] = {
					"Azureborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[151674] = {
					"Stinkfur Hopling", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[68175] = {
					"Unbound Bonemender", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[136830] = {
					"Witherbranch Headhunter", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[76877] = {
					"Gruul", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[150139] = {
					"K'thxx the Void Hunter", -- [1]
					"Uldir Scenario", -- [2]
				},
				[139390] = {
					"Scaleguard Sarrisz", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[152699] = {
					"Voidbound Berserker", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[136831] = {
					"Witherbranch Witch Doctor", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[147069] = {
					"Spirit of Xuen", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[151676] = {
					"Stinkfur Hooligan", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[62633] = {
					"Sik'thik Builder", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[68176] = {
					"Unbound Centurion", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[150653] = {
					"Blackwater Behemoth", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139392] = {
					"Mirelurk Saurok", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138369] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[139393] = {
					"Mirelurk Clutchguard", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148607] = {
					"Kal'ia Pa'kuaya", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[136834] = {
					"Scalper Bazuulu", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[56875] = {
					"Krik'thik Demolisher", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138370] = {
					"Horko", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134787] = {
					"Spineclaw Crab", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139394] = {
					"Mirelurk Bog Priest", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152703] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[132740] = {
					"Venomscale Hydra", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[22875] = {
					"Coilskar Sea-Caller", -- [1]
					"Black Temple", -- [2]
				},
				[22939] = {
					"Temple Concubine", -- [1]
					"Black Temple", -- [2]
				},
				[116550] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[139395] = {
					"Mirelurk Bogtender", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[132741] = {
					"Flamescale Hydra", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[154240] = {
					"Azshara's Devoted", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134789] = {
					"Monstrous Spineclaw", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139396] = {
					"Mirelurk Guardian", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148610] = {
					"Druid of the Branch", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[136837] = {
					"Venomancer Ant'su", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[139397] = {
					"Mirelurk Lurker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148611] = {
					"Yoru'cha", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[132743] = {
					"Flamescale Wavebreaker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[56876] = {
					"Krik'thik Sapper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[162432] = {
					"Awakened Terror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138374] = {
					"Sand Fur", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134791] = {
					"Luminous Crawler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139398] = {
					"Mirelurk Assassin", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[86607] = {
					"Iron Flame Technician", -- [1]
					"Highmaul", -- [2]
				},
				[132744] = {
					"Frostscale Hydra", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138375] = {
					"Smoos", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138887] = {
					"Bloodwake Mystic", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139399] = {
					"Mirelurk Basher", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148613] = {
					"Commander Broadside", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[21212] = {
					"Lady Vashj", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[106059] = {
					"Warp Shade", -- [1]
					"The Arcway", -- [2]
				},
				[134793] = {
					"Glowspine", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151685] = {
					"Stinkfur Denmother", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135817] = {
					"Zephyr", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148614] = {
					"Kul Tiran Cannoneer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[59820] = {
					"Pandaren Cannoneer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[134794] = {
					"Darklurker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135818] = {
					"Gust Soldier", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148615] = {
					"Div'yane", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[56877] = {
					"Raigonn", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[134283] = {
					"Anchorite Lanna", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138890] = {
					"Dargulf the Spirit-Seeker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135819] = {
					"Living Tornado", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140426] = {
					"Moonbeard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[145033] = {
					"Arctic Hunter", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22876] = {
					"Coilskar Soothsayer", -- [1]
					"Black Temple", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[142986] = {
					"King Varian Wrynn", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[151688] = {
					"Melonsmasher", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[76116] = {
					"Diving Chakram Spinner", -- [1]
					"Skyreach", -- [2]
				},
				[140427] = {
					"Craghoof Herdfather", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136844] = {
					"Sandscalp Warrior", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[11664] = {
					"Flamewaker Elite", -- [1]
					"Molten Core", -- [2]
				},
				[158343] = {
					"Organ of Corruption", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[114251] = {
					"Galindre", -- [1]
					"Return to Karazhan", -- [2]
				},
				[134797] = {
					"Ocean Recluse", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151689] = {
					"Clawfoot the Leaper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Crucible of Storms", -- [2]
				},
				[140428] = {
					"Chasm-Jumper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136845] = {
					"Sandscalp Axe Thrower", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[78932] = {
					"Driving Gale-Caller", -- [1]
					"Skyreach", -- [2]
				},
				[150154] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[124489] = {
					"Highlands Lumberjack", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[155273] = {
					"Garval the Vanquisher", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139405] = {
					"Wavebringer Sezzes'an", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131727] = {
					"Fenrae the Cunning", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[161416] = {
					"Aqir Shadowcrafter", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[44977] = {
					"Neferset Torturer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[127049] = {
					"Drywhisker Surveyor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[123210] = {
					"Seabreeze Gull", -- [1]
					"Freehold", -- [2]
				},
				[86611] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[136847] = {
					"Sandscalp Shadow Hunter", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[78933] = {
					"Herald of Sunrise", -- [1]
					"Skyreach", -- [2]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[54191] = {
					"Risen Ghoul", -- [1]
					"End Time", -- [2]
				},
				[139407] = {
					"Fangterror", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[131729] = {
					"Lyco", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140431] = {
					"Craghoof Goat", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136848] = {
					"Sandscalp Soothsayer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134801] = {
					"Cracked-Shell", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[163978] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[86612] = {
					"Spore Shooter", -- [1]
					"Highmaul", -- [2]
				},
				[145039] = {
					"Snowstalker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134802] = {
					"Razorback", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[131731] = {
					"Sown Lasher", -- [1]
					"Waycrest Manor", -- [2]
				},
				[152718] = {
					"Alleria Windrunner", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[145040] = {
					"Llorin the Clever", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[155278] = {
					"Shimmerskin Pufferfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139410] = {
					"Visz the Silent Blade", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[86613] = {
					"Fungal Flesh-Eater", -- [1]
					"Highmaul", -- [2]
				},
				[145041] = {
					"Swifttail Stalker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138387] = {
					"Mangol", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134804] = {
					"Timeless Runeback", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[54320] = {
					"banthalos", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140435] = {
					"Greyfur", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138388] = {
					"Kung", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134805] = {
					"Wandering Behemoth", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139412] = {
					"Gashasz", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135829] = {
					"Dustwind", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140436] = {
					"Snorthoof", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138389] = {
					"Smasha", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[139413] = {
					"Mirelurk Oasis-Speaker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135830] = {
					"Galefury", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152722] = {
					"Fallen Voidspeaker", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140949] = {
					"Kor'gall, Greatson of Kor'gall", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[134807] = {
					"Ancient Spineshell", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139414] = {
					"Mire Priest Vassz", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[132760] = {
					"Plains Creeper", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[138391] = {
					"Norko the Thrower", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[139415] = {
					"Slitherscale", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140439] = {
					"Muskflank Herdleader", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[136856] = {
					"Cinderhorn", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[137880] = {
					"Northfold Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[138392] = {
					"Bono", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[10737] = {
					"Slack", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139416] = {
					"Volshas", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148118] = {
					"Caravan Brutosaur", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140440] = {
					"Bloodfur the Gorer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145047] = {
					"Forsaken Blight Thrower", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[137881] = {
					"Northfold Knight", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[60208] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[155797] = {
					"Animated Guardian", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[160404] = {
					"Angry Bear Rug Spirit", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[148631] = {
					"Unexploded Ordnance", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[157333] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[146072] = {
					"Shredder Technician", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[130638] = {
					"Vicejaw Crocolisk", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[44980] = {
					"Neferset Theurgist", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[160405] = {
					"Angry Treant Chair Spirit", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[136347] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136859] = {
					"Bloodscalp", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[139419] = {
					"High Oracle Asayza", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140443] = {
					"Muskflank Charger", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136860] = {
					"Tracker Vu'ka", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[11665] = {
					"Lava Annihilator", -- [1]
					"Molten Core", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[130639] = {
					"Vicejaw Chomper", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[147098] = {
					"Spirit of Xuen", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[23582] = {
					"Amani'shi Tribesman", -- [1]
					"Zul'Aman", -- [2]
				},
				[135837] = {
					"Cyclonic Lieutenant", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140444] = {
					"Muskflank Bull", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136861] = {
					"Duskstalker Kuli", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[139421] = {
					"Gekkaz Moss-Scaled", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135838] = {
					"Grimebreeze", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[130640] = {
					"Vicejaw Sawtooth", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135839] = {
					"Swampgas", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145053] = {
					"Eldritch Abomination", -- [1]
					"Crucible of Storms", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[140447] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[153244] = {
					"Oblivion Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136865] = {
					"Uzan the Sandreaver", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140449] = {
					"Thickflank", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[126291] = {
					"Alliance Footman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[44982] = {
					"Neferset Darkcaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140450] = {
					"Dunu the Blind", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161437] = {
					"Explosive Scarab", -- [1]
					"Atal'Dazar", -- [2]
				},
				[120405] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[147105] = {
					"Solid Ice", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[140451] = {
					"Doting Calfmother", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145058] = {
					"Shadefeather Raven", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[153760] = {
					"Enthralled Footman", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[158367] = {
					"Basher Tentacle", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[143011] = {
					"Sandy Perch", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140452] = {
					"Pikehorn the Sleeper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[23775] = {
					"Head of the Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[79200] = {
					"Blackrock Forge Specialist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[134822] = {
					"Gritplate Matriarch", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139429] = {
					"Stonebound Warrior", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[160416] = {
					"Angry Ale Barrel Spirit", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140453] = {
					"Bramblefur Herdleader", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145060] = {
					"Monstrous Shadefeather", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[130644] = {
					"Daggertooth", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134823] = {
					"Unbreakable Crystalspine", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139430] = {
					"Zaliz' Eternal Hound", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140454] = {
					"Many-Braids the Elder", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[136871] = {
					"Oomgut Shaman", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[161953] = {
					"Inimot, the Radiant Blade", -- [1]
					"Halls of Origination", -- [2]
				},
				[147621] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140455] = {
					"Bramblefur Calf", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[158371] = {
					"Zardeth of the Black Claw", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
				},
				[139432] = {
					"Lu'si", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140456] = {
					"Bramblefur Musken", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140968] = {
					"Garnetback Striker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[155813] = {
					"Court Attendant", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[156837] = {
					"Valeera Sanguinar", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[145064] = {
					"Blaze", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[158373] = {
					"Roberto Pupellyverbos", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140458] = {
					"Bramblefur Bull", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140970] = {
					"Cragburster", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134828] = {
					"Aqualing", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[76132] = {
					"Soaring Chakram Master", -- [1]
					"Skyreach", -- [2]
				},
				[97119] = {
					"Shroud Hound", -- [1]
					"Maw of Souls", -- [2]
				},
				[11666] = {
					"Firewalker", -- [1]
					"Molten Core", -- [2]
				},
				[158375] = {
					"Corruptor Tentacle", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[23584] = {
					"Amani Bear", -- [1]
					"Zul'Aman", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Isle of Conquest", -- [2]
				},
				[158376] = {
					"Psychus", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[12018] = {
					"Majordomo Executus", -- [1]
					"Molten Core", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[48440] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[136878] = {
					"Headbang", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139438] = {
					"Soul-Bringer Togan", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[160937] = {
					"Night Terror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[157354] = {
					"Vexiona", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Eye of the Storm", -- [2]
				},
				[139439] = {
					"Duskbinder Zuun", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152236] = {
					"Lady Ashvane", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140975] = {
					"Youngercraw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[136881] = {
					"Bristlemane Pathfinder", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[150190] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[79462] = {
					"Blinding Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[56631] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[136882] = {
					"Bristlemane Defender", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[114526] = {
					"Ghostly Understudy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140978] = {
					"Doomtunnel", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[22881] = {
					"Aqueous Surger", -- [1]
					"Black Temple", -- [2]
				},
				[79463] = {
					"Radiant Supernova", -- [1]
					"Skyreach", -- [2]
				},
				[139443] = {
					"Spinebender Kuntai", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[129371] = {
					"Riptide Shredder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[139444] = {
					"Necrolord Zian", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140980] = {
					"Jadescale Worm", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[79208] = {
					"Blackrock Enforcer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[139445] = {
					"Tumat", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129372] = {
					"Blacktar Bomber", -- [1]
					"Siege of Boralus", -- [2]
				},
				[48442] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[136886] = {
					"Banner-Bearer Koral", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[150195] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[61239] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140982] = {
					"Icecracker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[49850] = {
					"Defias Enforcer", -- [1]
					"Deadmines", -- [2]
				},
				[129373] = {
					"Dockhound Packmaster", -- [1]
					"Siege of Boralus", -- [2]
				},
				[68204] = {
					"Unbound Rogue", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[140983] = {
					"Frostbore Burster", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[146102] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[130653] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[1863] = {
					"Sythea", -- [1]
					"Isle of Conquest", -- [2]
				},
				[43324] = {
					"Cho'gall", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[136889] = {
					"Razorcaller Tuk", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146103] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[79466] = {
					"Initiate of the Rising Sun", -- [1]
					"Skyreach", -- [2]
				},
				[129374] = {
					"Scrimshaw Enforcer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[68205] = {
					"Unbound Succubus", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[84841] = {
					"Iron Dockworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146104] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[61240] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[157366] = {
					"Void Hunter", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146105] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[112739] = {
					"Shadowy Overfiend", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[68206] = {
					"Unbound Shivarra", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[132797] = {
					"Pinegraze Calf", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[11667] = {
					"Flameguard", -- [1]
					"Molten Core", -- [2]
				},
				[23394] = {
					"Promenade Sentinel", -- [1]
					"Black Temple", -- [2]
				},
				[130655] = {
					"Bobby Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[102246] = {
					"Anub'esset", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[98919] = {
					"Seacursed Swiftblade", -- [1]
					"Maw of Souls", -- [2]
				},
				[140988] = {
					"Steelshred", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137405] = {
					"Gripping Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146107] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138429] = {
					"Spitefin Tidebinder", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[39870] = {
					"Twilight Firecatcher", -- [1]
					"Grim Batol", -- [2]
				},
				[76141] = {
					"Araknath", -- [1]
					"Skyreach", -- [2]
				},
				[148667] = {
					"Rastari Punisher", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56890] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[130400] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[159417] = {
					"Demented Knife-Twister", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151739] = {
					"Ma'haat the Indomitable", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[140990] = {
					"Bonescale Spitter", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[49852] = {
					"Defias Shadowguard", -- [1]
					"Deadmines", -- [2]
				},
				[79469] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[112741] = {
					"Wrathguard Decimator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[140991] = {
					"Marrowbore", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146110] = {
					"Waxing Moon", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138432] = {
					"Tidemistress Nessa", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132802] = {
					"Craghorn Yeti", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146111] = {
					"Twenty Points", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138433] = {
					"Tidemistress Vessana", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139457] = {
					"Stonebound Quilen", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[76143] = {
					"Rukhran", -- [1]
					"Skyreach", -- [2]
				},
				[48445] = {
					"Oaf Lackey", -- [1]
					"Deadmines", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[146112] = {
					"Inkfur Behemoth", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61242] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[111463] = {
					"HadP", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146113] = {
					"Thunderhoof", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[22947] = {
					"Mother Shahraz", -- [1]
					"Black Temple", -- [2]
				},
				[139459] = {
					"Stonebound Soldier", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[148673] = {
					"Vessel of Bwonsamdi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140995] = {
					"Ruinstalker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146114] = {
					"Surging Winds", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138436] = {
					"Lord Coilfin", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[139460] = {
					"Stonebound Earthweaver", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140996] = {
					"Deepbore", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145603] = {
					"Goblin Harvester", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[138437] = {
					"Szerris the Invader", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139461] = {
					"Stonebound Rockmaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[76145] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[56636] = {
					"Commander Ri'mok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[132807] = {
					"Zian-Ti Quilen", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[101995] = {
					"Festerface", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[159425] = {
					"Occult Shadowmender", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139462] = {
					"Stonebound Shale-Speaker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148164] = {
					"Boomshot Specialist", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[156866] = {
					"Ra-den", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[49854] = {
					"Defias Blood Wizard", -- [1]
					"Deadmines", -- [2]
				},
				[138439] = {
					"Slitherqueen Valla", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139463] = {
					"Stonebound Annihilator", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[76146] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[44577] = {
					"General Husam", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[146118] = {
					"Territorial Needleback", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138440] = {
					"Lady Assana", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152089] = {
					"Thrall", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[139464] = {
					"Zian-Ti Howler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[78352] = {
					"Battle Medic Rogg", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[153285] = {
					"Training Dummy", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140295] = {
					"Snowfur Pup", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[146119] = {
					"Needleback Brute", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138441] = {
					"Songstress of the Deep", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[155845] = {
					"Crushing Depths", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[56637] = {
					"Ook-Ook", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[145932] = {
					"Celestra Brightmoon", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[138442] = {
					"Wavebreaker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[130918] = {
					"Archelion Great Turtle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[48266] = {
					"Defias Cannon", -- [1]
					"Deadmines", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[127048] = {
					"Drywhisker Digger", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[146552] = {
					"Kul Tiran Tideweaver", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[22884] = {
					"Leviathan", -- [1]
					"Black Temple", -- [2]
				},
				[138443] = {
					"Scaleguard Buleth", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[45097] = {
					"Oathsworn Tamer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[139467] = {
					"Qinsu the Granite Fist", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[131728] = {
					"Raul the Tenacious", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[148483] = {
					"Ancestral Avenger", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[135718] = {
					"Nightsaber Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[11668] = {
					"Firelord", -- [1]
					"Molten Core", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[138444] = {
					"General Vesparak", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[77067] = {
					"Gorgrond Python", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[139468] = {
					"Spineripper Ku-Kon", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[47296] = {
					"Helix Gearbreaker", -- [1]
					"Deadmines", -- [2]
				},
				[147033] = {
					"Brynja", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[134788] = {
					"Spineclaw Rockshell", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135247] = {
					"Varigg", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[54920] = {
					"Infinite Suppressor", -- [1]
					"End Time", -- [2]
				},
				[138445] = {
					"Duke Szzull", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[139469] = {
					"Zu-Xan of Thunder", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[48419] = {
					"Defias Miner", -- [1]
					"Deadmines", -- [2]
				},
				[129640] = {
					"Snarling Dockhound", -- [1]
					"Siege of Boralus", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[145001] = {
					"Lanara Moonshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[145035] = {
					"Swifttail Courser", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[114284] = {
					"Elfyra", -- [1]
					"Return to Karazhan", -- [2]
				},
				[139420] = {
					"Bog Defender Vaszash", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139470] = {
					"Serpent Master Xisho", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139818] = {
					"Security Officer Durk", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[45377] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[142413] = {
					"Wisp", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134800] = {
					"Hardened Snapjaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[87411] = {
					"Workshop Guardian", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138447] = {
					"Battle-Maiden Salaria", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[130582] = {
					"Despondent Scallywag", -- [1]
					"Tol Dagor", -- [2]
				},
				[139471] = {
					"Bugan the Flesh-Crusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[143001] = {
					"Kirin Tor Invoker", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[132742] = {
					"Flamescale Strider", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146116] = {
					"Needleback Forager", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[148998] = {
					"Furious Guardian Spirit", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[158411] = {
					"Unstable Servant", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[138888] = {
					"Bloodwake Soothsayer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[114541] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[139472] = {
					"Stone-Lord Qinsho", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[47297] = {
					"Lumbering Oaf", -- [1]
					"Deadmines", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[82698] = {
					"Night-Twisted Devout", -- [1]
					"Highmaul", -- [2]
				},
				[136869] = {
					"Oomgut Ambusher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[150222] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129786] = {
					"Brineshell Makrura", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140273] = {
					"Runehoof Denkeeper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139473] = {
					"Stone Machinist Nu-Xin", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[132819] = {
					"Rustpelt Pup", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145616] = {
					"King Rastakhan", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[81270] = {
					"Gorian Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[147439] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[45122] = {
					"Oathsworn Captain", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[138818] = {
					"Bloodwake Warbringer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[45378] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[132820] = {
					"Mudsnout Piglet", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[138438] = {
					"Tidereaver Steelfang", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[22885] = {
					"Dragon Turtle", -- [1]
					"Black Temple", -- [2]
				},
				[22949] = {
					"Gathios the Shatterer", -- [1]
					"Black Temple", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[139475] = {
					"Jade-Formed Bonesnapper", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135892] = {
					"Unleashed Inferno", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[134739] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[139431] = {
					"Guardian of Tombs", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
				},
				[140437] = {
					"Slow Olo", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155628] = {
					"Azsh'ari Oracle", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139476] = {
					"Stonebound Monstrosity", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135893] = {
					"Burning Emberguard", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[19622] = {
					"Kael'thas Sunstrider", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[157904] = {
					"Aqir Scarab", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[146131] = {
					"Bartok the Burrower", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140385] = {
					"Gemshell Broodkeeper", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[23581] = {
					"Amani'shi Medicine Man", -- [1]
					"Zul'Aman", -- [2]
				},
				[135717] = {
					"Wild Nightsaber", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135894] = {
					"Fire Elemental", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[48450] = {
					"Sunwing Squawker", -- [1]
					"Deadmines", -- [2]
				},
				[136883] = {
					"Bristlemane Thorncaller", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[61247] = {
					"Glintrok Greenhorn", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[48278] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[135895] = {
					"Blazing Spark", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[45379] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[139400] = {
					"Mirelurk Rivercaller", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133848] = {
					"Encyclopedia Antagonistica", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[155859] = {
					"Vizja'ra", -- [1]
					"The Eternal Palace", -- [2]
				},
				[76154] = {
					"Skyreach Raven Whisperer", -- [1]
					"Skyreach", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[121711] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[136855] = {
					"Molten Vordo", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146134] = {
					"Speedy", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[138968] = {
					"Zian-Ti Ironmaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[114801] = {
					"Spectral Apprentice", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[156884] = {
					"Essence of Vita", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[78714] = {
					"Kargath Bladefist", -- [1]
					"Highmaul", -- [2]
				},
				[136832] = {
					"Witherbranch Berserker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130338] = {
					"Dustfang", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140270] = {
					"Wilderbuck", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138969] = {
					"Zian-Ti Spirit", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[86275] = {
					"Gorian Enforcer", -- [1]
					"Highmaul", -- [2]
				},
				[61445] = {
					"Haiyan the Unstoppable", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[48451] = {
					"Ol' Beaky", -- [1]
					"Deadmines", -- [2]
				},
				[12264] = {
					"Shazzrah", -- [1]
					"Molten Core", -- [2]
				},
				[155688] = {
					"Azsh'ari Frostbinder", -- [1]
					"The Eternal Palace", -- [2]
				},
				[39962] = {
					"Twilight Stormbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[140989] = {
					"Bonescale Worm", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138970] = {
					"Vengeful Spirit", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[114802] = {
					"Spectral Journeyman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[147614] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[150159] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[139757] = {
					"Sureshot Johnson", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[22950] = {
					"High Nethermancer Zerevor", -- [1]
					"Black Temple", -- [2]
				},
				[138971] = {
					"Zian-Ti Serpent", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140846] = {
					"Impish Breeze", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148120] = {
					"Kul Tiran Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[56895] = {
					"Weak Spot", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[148119] = {
					"Furious Merchant", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[11669] = {
					"Flame Imp", -- [1]
					"Molten Core", -- [2]
				},
				[22869] = {
					"Illidari Boneslicer", -- [1]
					"Black Temple", -- [2]
				},
				[146650] = {
					"Champion Sentinel", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[118642] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[145059] = {
					"Cunning Nightwing", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140268] = {
					"Ano Forest-Keeper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[149591] = {
					"Rastari Marksman", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146139] = {
					"Goldspine", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140429] = {
					"Drifthopper the Swift", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136905] = {
					"Forward Lookout", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[155764] = {
					"Rak'sha the Swift", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140438] = {
					"Old Longtooth", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[84859] = {
					"Iron Cleaver", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[80423] = {
					"Thunderlord Beast-Tender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146140] = {
					"Quilldozer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146652] = {
					"Bolstered Deathguard", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[155354] = {
					"Azshara's Indomitable", -- [1]
					"The Eternal Palace", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[135903] = {
					"Manifestation of the Deep", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140267] = {
					"Greathorn Uwanu", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[119923] = {
					"Helblaze Soulmender", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[146653] = {
					"Champion Huntress", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[132299] = {
					"Angry Treant", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138219] = {
					"Blighted Haunter", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[84860] = {
					"Iron Earthbinder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[77182] = {
					"Oregorger", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138464] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[153194] = {
					"Briny Bubble", -- [1]
					"The Eternal Palace", -- [2]
				},
				[98425] = {
					"Unstable Amalgamation", -- [1]
					"The Arcway", -- [2]
				},
				[161273] = {
					"Abyssal Spawn", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[150137] = {
					"Faceless Subduer", -- [1]
					"Uldir Scenario", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[140266] = {
					"Broken-Horn the Ancient", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146143] = {
					"Razorspike", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[159224] = {
					"Gryth'ax the Executioner", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[155869] = {
					"Shirakess Shadowcaster", -- [1]
					"The Eternal Palace", -- [2]
				},
				[61444] = {
					"Ming the Cunning", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[139817] = {
					"Chief Engineer Zazzy", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132835] = {
					"Dreadfang Snake", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137442] = {
					"High Sorceress Marala", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138466] = {
					"Obsidian Whelp", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[138978] = {
					"Gargantuan Muckfin", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[98426] = {
					"Unstable Ooze", -- [1]
					"The Arcway", -- [2]
				},
				[119157] = {
					"Felguard", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[140373] = {
					"Queen Duneshell", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[137443] = {
					"Friar Farshire", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[22887] = {
					"High Warlord Naj'entus", -- [1]
					"Black Temple", -- [2]
				},
				[138467] = {
					"Obsidian Dragonkin", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138979] = {
					"Muckfin Tidecaller", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[155871] = {
					"Voidbound Terror", -- [1]
					"The Eternal Palace", -- [2]
				},
				[136822] = {
					"Gulan Spear Thrower", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[160990] = {
					"Image of Absolution", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[132837] = {
					"Beach Strider", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[122986] = {
					"Wild Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
				},
				[138468] = {
					"Obsidian Flamecaller", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138980] = {
					"Muckfin Raider", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[59459] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[148194] = {
					"Icy Barrier", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144611] = {
					"Coralback Scuttler", -- [1]
					"The Eternal Palace", -- [2]
				},
				[145123] = {
					"Myara Nightsong", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[144955] = {
					"Zal'zi the Bloodgorged", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[48279] = {
					"Goblin Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[138469] = {
					"Obsidian Scalebane", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[138981] = {
					"Muckfin Oracle", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[155873] = {
					"Darkcast Annihilator", -- [1]
					"The Eternal Palace", -- [2]
				},
				[148195] = {
					"Hateful Shade", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[157238] = {
					"Prophet Skitra", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[144954] = {
					"Bloodgorger", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138470] = {
					"Obsidian Drake", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[53189] = {
					"Molten Elemental", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[80676] = {
					"Iron Flametwister", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[136887] = {
					"Needlemane", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[155860] = {
					"Shirakess Voidreaper", -- [1]
					"The Eternal Palace", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[147967] = {
					"7th Legion Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138471] = {
					"Obsidian Wyrmguard", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138983] = {
					"Muckfin Tidehunter", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[61243] = {
					"Gekkan", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[146492] = {
					"Phantom of Rage", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[11662] = {
					"Flamewaker Priest", -- [1]
					"Molten Core", -- [2]
				},
				[130421] = {
					"Serpent Ward", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138472] = {
					"Obsidian Captain", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59460] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[137449] = {
					"Dust Devil", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[39625] = {
					"General Umbriss", -- [1]
					"Grim Batol", -- [2]
				},
				[138473] = {
					"Stygia", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138985] = {
					"Old Grmgl", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[22056] = {
					"Coilfang Strider", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[148199] = {
					"Screeching Phantasm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[135248] = {
					"Briona the Bloodthirsty", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[157368] = {
					"Velinaria", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[140976] = {
					"Bore Worm", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[158437] = {
					"Fallen Taskmaster", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[134214] = {
					"Riftblade Kelain", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[102269] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[157256] = {
					"Aqir Darter", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[61339] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[145129] = {
					"Deathguard Champion", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[145928] = {
					"Skavis Nightstalker", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[138475] = {
					"Tyrantion", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138987] = {
					"Muckfin High Oracle", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[140262] = {
					"Runehoof Doe", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[127477] = {
					"Saltwater Snapper", -- [1]
					"Tol Dagor", -- [2]
				},
				[161510] = {
					"Mindrend Tentacle", -- [1]
					"Atal'Dazar", -- [2]
				},
				[138434] = {
					"Spitefin Tempest Witch", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[23400] = {
					"Illidari Archon", -- [1]
					"Black Temple", -- [2]
				},
				[155618] = {
					"Zanj'ir Huntress", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138988] = {
					"Mrgl-Eye", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[123001] = {
					"Dark Water", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[136203] = {
					"Danath Trollbane", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[152809] = {
					"Alx'kov the Infested", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[119930] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[138477] = {
					"Talonguard Vrykiss", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134894] = {
					"Ironweb Spinner", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135406] = {
					"Animated Gold", -- [1]
					"Kings' Rest", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[12118] = {
					"Lucifron", -- [1]
					"Molten Core", -- [2]
				},
				[145132] = {
					"Veteran Deathguard", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[145644] = {
					"Bwonsamdi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[45001] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[134895] = {
					"Ironweb Weaver", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[148716] = {
					"Risen Soul", -- [1]
					"The Underrot", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[78981] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[154347] = {
					"Void-Twisted Corruptor", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[138479] = {
					"Obsidian Overlord", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138991] = {
					"Grrl", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144963] = {
					"Kimbul's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[132849] = {
					"Grizzlefur Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[156794] = {
					"SI:7 Light-Hunter", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[136207] = {
					"Stromgarde Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[59458] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[45096] = {
					"Tamed Tol'vir Prowler", -- [1]
					"Grim Batol", -- [2]
				},
				[134795] = {
					"Veiled Hermit", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[137969] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[26024] = {
					"Dragonhawk", -- [1]
					"Kings' Rest", -- [2]
				},
				[134898] = {
					"Venomfang Recluse", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145026] = {
					"Swifttail Scavenger", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[44234] = {
					"Vicious Leech", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[138349] = {
					"Vengeful Ghost", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[147938] = {
					"Azergem Crystalback", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[137458] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
				},
				[136264] = {
					"Half-Finished Mummy", -- [1]
					"Kings' Rest", -- [2]
				},
				[138482] = {
					"Kaluriak the Alchemist", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134899] = {
					"Venomfang Lurker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[417] = {
					"Sloozhem", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[135923] = {
					"Hound of Gazzran", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157268] = {
					"Crawling Corruption", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138984] = {
					"Scarscale", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[133605] = {
					"Escaped Convict", -- [1]
					"Tol Dagor", -- [2]
				},
				[138826] = {
					"Leikneir the Brave", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134388] = {
					"A Knot of Snakes", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[134900] = {
					"Venomfang Spider", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[135924] = {
					"Molten Fury", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[152816] = {
					"Stormling", -- [1]
					"The Eternal Palace", -- [2]
				},
				[68098] = {
					"Ashtongue Worker", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[23337] = {
					"Illidari Centurion", -- [1]
					"Black Temple", -- [2]
				},
				[22952] = {
					"Veras Darkshadow", -- [1]
					"Black Temple", -- [2]
				},
				[138484] = {
					"Obsidian Prophet", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136839] = {
					"Mrogan", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[135925] = {
					"Pyroblaze", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[126969] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Isle of Conquest", -- [2]
				},
				[159321] = {
					"Khateph", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138485] = {
					"Nuzoriak the Experimenter", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157150] = {
					"Thomas Westmill", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[151581] = {
					"Horrific Vision", -- [1]
					"The Eternal Palace", -- [2]
				},
				[135926] = {
					"Smolderheart", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[40268] = {
					"Twilight War-Mage", -- [1]
					"Grim Batol", -- [2]
				},
				[113536] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[41095] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[61442] = {
					"Kuai the Brute", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[138486] = {
					"Aluriak", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[126845] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				[135246] = {
					"\"Stabby\" Lottie", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[45259] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[76087] = {
					"Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[140769] = {
					"Goldenvein", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[138487] = {
					"Obsidian Wing-Spreader", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134904] = {
					"Nightlurker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144972] = {
					"Kaldorei Huntress", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
				},
				[76376] = {
					"Skyreach Arcanologist", -- [1]
					"Skyreach", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[150773] = {
					"Shimmerskin Pufferfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				[135929] = {
					"Baron Blazehollow", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146678] = {
					"Ancient Protector", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[134905] = {
					"Shadeweb Huntress", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59464] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[59778] = {
					"Krik'thik Striker", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[158452] = {
					"Mindtwist Tendril", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139001] = {
					"Wildlands Ursa", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[151798] = {
					"Vexiona", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[135930] = {
					"Lavarok", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[40269] = {
					"Enslaved Thunder Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[135931] = {
					"Ashstone", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"Atal'Dazar", -- [2]
				},
				[119169] = {
					"Fulminating Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59522] = {
					"Sudsy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				[43014] = {
					"Imp", -- [1]
					"The Stonecore", -- [2]
				},
				[156406] = {
					"Voidbound Honor Guard", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[153335] = {
					"Potent Spark", -- [1]
					"The Eternal Palace", -- [2]
				},
				[151755] = {
					"Shadehound", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[22954] = {
					"Illidari Fearbringer", -- [1]
					"Black Temple", -- [2]
				},
				[139003] = {
					"Wildlands Warrior", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[48417] = {
					"Defias Blood Wizard", -- [1]
					"Deadmines", -- [2]
				},
				[135932] = {
					"Volcanar", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[68173] = {
					"Freed Imp", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[136160] = {
					"King Dazar", -- [1]
					"Kings' Rest", -- [2]
				},
				[11671] = {
					"Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				[23402] = {
					"Illidari Battle-mage", -- [1]
					"Black Temple", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134909] = {
					"Chittering Spindleweb", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[151801] = {
					"Amathet Zealot", -- [1]
					"Halls of Origination", -- [2]
				},
				[152313] = {
					"Dreadcoil Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140540] = {
					"Kindleweb Clutchkeeper", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[147933] = {
					"Geoactive Azershard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[148665] = {
					"Rastari Royal Guard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
				},
				[138493] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[139005] = {
					"Wildlands Tracker", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[135719] = {
					"Duskrunner", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138489] = {
					"Shadow of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[40270] = {
					"Twilight Thundercaller", -- [1]
					"Grim Batol", -- [2]
				},
				[135721] = {
					"Asha'ne", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56906] = {
					"Saboteur Kip'tilak", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[140984] = {
					"Frostbore Worm", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[157825] = {
					"Crazed Tormenter", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[134911] = {
					"Darkhollow Widow", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[147932] = {
					"Agitated Azershard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[140542] = {
					"Kindleweb Spider", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[132864] = {
					"Juvenile Knucklebump", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[141566] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138495] = {
					"Twilight Commander", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[134912] = {
					"Violet Creeper", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[155899] = {
					"Sak'ja", -- [1]
					"The Eternal Palace", -- [2]
				},
				[148221] = {
					"Risen Hulk", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144638] = {
					"Grong the Revenant", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[151638] = {
					"Crazed Earth Rager", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138496] = {
					"Twilight Drakonaar", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[155900] = {
					"Zsal'iss", -- [1]
					"The Eternal Palace", -- [2]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
				},
				[140544] = {
					"Kindleweb Skitterer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[80526] = {
					"Stubborn Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137473] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				[56706] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[134914] = {
					"Trapdoor Spider", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[12101] = {
					"Lava Surger", -- [1]
					"Molten Core", -- [2]
				},
				[140545] = {
					"Broodqueen Flareanae", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[137474] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				[157811] = {
					"Lilliam Sparkspindle", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[138498] = {
					"Twilight Drake", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134915] = {
					"Trapdoor Ambusher", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[139006] = {
					"Wildlands Furbolg", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[132868] = {
					"Congealed Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[145067] = {
					"Shadefeather Hatchling", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[22955] = {
					"Charming Courtesan", -- [1]
					"Black Temple", -- [2]
				},
				[138499] = {
					"Twilight Dragonkin", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134916] = {
					"Trapdoor Hunter", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157439] = {
					"Fury of N'Zoth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146178] = {
					"Azurespine", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140547] = {
					"Broodqueen Cindrix", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[125828] = {
					"Kattè", -- [1]
					"Atal'Dazar", -- [2]
				},
				[23339] = {
					"Illidari Heartseeker", -- [1]
					"Black Temple", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138500] = {
					"Twilight Scalesister", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[102282] = {
					"Lord Malgath", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[135645] = {
					"Elder Pridemother", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[123269] = {
					"Kook", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[152833] = {
					"Azerite Giant", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[126832] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				[40272] = {
					"Ascended Rockbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[137989] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				[138501] = {
					"Twilight Whelp", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[141061] = {
					"Servant of Thros", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[79505] = {
					"Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[152834] = {
					"Azerite Skitterer", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[157441] = {
					"Void Wraith", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[76945] = {
					"Ironcrusher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138502] = {
					"Naroviak Wyrm-Bender", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[45007] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[41040] = {
					"Twisted Visage", -- [1]
					"Grim Batol", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[152835] = {
					"Crystalized Azerite", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[157442] = {
					"Gaze of Madness", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Dalaran Sewers", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[62795] = {
					"Sik'thik Warden", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[69947] = {
					"Tyktarmen", -- [1]
					"The Eternal Palace", -- [2]
				},
				[76946] = {
					"Faultline", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[138504] = {
					"General Drakkarion", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[96759] = {
					"Helya", -- [1]
					"Maw of Souls", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[152325] = {
					"Rebecca Laughlin", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[152324] = {
					"Aldwin Laughlin", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139411] = {
					"Many-Fangs", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26027] = {
					"Ray", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138505] = {
					"Evolved Clutch-Warden", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148522] = {
					"Ice Block", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[139529] = {
					"Muklai", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152326] = {
					"Kyra Boucher", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140553] = {
					"Broodqueen Shuzasz", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[80677] = {
					"Iron Journeyman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[138506] = {
					"Crimsonscale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[147928] = {
					"Geoscatter", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139530] = {
					"Earth-Wrought Siegebreaker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[123272] = {
					"Saltfur Fish-Sticker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[153130] = {
					"Greater Void Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[44932] = {
					"Oathsworn Pathfinder", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[146185] = {
					"Firesting Drone", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[31146] = {
					"Raider's Training Dummy", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144637] = {
					"Grong", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[85241] = {
					"Night-Twisted Brute", -- [1]
					"Highmaul", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				[140849] = {
					"Pernicious Stonekin", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132877] = {
					"Dankscale", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[11672] = {
					"Core Rager", -- [1]
					"Molten Core", -- [2]
				},
				[146186] = {
					"Firesting Warrior", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138508] = {
					"Unbreakable Vortax", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22877] = {
					"Coilskar Wrangler", -- [1]
					"Black Temple", -- [2]
				},
				[56731] = {
					"Habanero Brew", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[135130] = {
					"Siege Tower", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139360] = {
					"Risen Icetusk Brute", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[137485] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				[146187] = {
					"Firesting Dominator", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138509] = {
					"Spellbinder Ulura", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[39890] = {
					"Twilight Earthshaper", -- [1]
					"Grim Batol", -- [2]
				},
				[12056] = {
					"Baron Geddon", -- [1]
					"Molten Core", -- [2]
				},
				[129928] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138511] = {
					"Azurescale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132879] = {
					"Crystalline Giant", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[146188] = {
					"Firesting Dominator", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138510] = {
					"Twilight Doomcaller", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61389] = {
					"Kargesh Highguard", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[123274] = {
					"Saltfur Brawler", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140558] = {
					"Inferno Terror", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157450] = {
					"Spellbound Ritualist", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[137487] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[128649] = {
					"Sergeant Bainbridge", -- [1]
					"Siege of Boralus", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[152332] = {
					"Lara Moore", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140559] = {
					"Volcanor", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157451] = {
					"Iron-Willed Enforcer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[126190] = {
					"Zian-Ti Brutalizer", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[138512] = {
					"Thorisiona", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139536] = {
					"Zara'thik Drone", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[157452] = {
					"Nightmare Antigen", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[8889] = {
					"Anvilrage Overseer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[26028] = {
					"Bird of Prey", -- [1]
					"Kings' Rest", -- [2]
				},
				[76794] = {
					"Overheated Cinder Wolf", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155917] = {
					"Azsh'ari Stormcaller", -- [1]
					"The Eternal Palace", -- [2]
				},
				[152312] = {
					"Azsh'ari Witch", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140561] = {
					"Brimstone Pup", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[138002] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138514] = {
					"Athiona", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138515] = {
					"Endalion", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139538] = {
					"Wall-Breaker Ha'vik", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[123276] = {
					"Saltfur Sandrunner", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140562] = {
					"Brimstone Hound", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[141074] = {
					"Kor'gall Defector", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[22957] = {
					"Priestess of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[158478] = {
					"Corruption Tumor", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[134932] = {
					"Vileweb Broodqueen", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139539] = {
					"Tavok, Hammer of the Empress", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146901] = {
					"Maniacal Apothecary", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[140563] = {
					"Brimstone Tracker", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[80791] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[126092] = {
					"Slitherblade Gladiator", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146657] = {
					"Veteran Sentinel", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138516] = {
					"Twilight Evolutionist", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[147218] = {
					"Spirit of Gold", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[23597] = {
					"Amani'shi Guardian", -- [1]
					"Zul'Aman", -- [2]
				},
				[140564] = {
					"Brimstone Lavamaw", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[148243] = {
					"Fallen Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[132887] = {
					"Deathsting Hatchling", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[56912] = {
					"Krik'thik Engulfer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[128652] = {
					"Viq'Goth", -- [1]
					"Siege of Boralus", -- [2]
				},
				[39892] = {
					"Enslaved Burning Ember", -- [1]
					"Grim Batol", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[126093] = {
					"Slitherblade Saurok", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[61567] = {
					"Vizier Jin'bak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[134423] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134935] = {
					"Mother Vishis", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148244] = {
					"Fallen Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[78233] = {
					"Darkshard Crystalback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146900] = {
					"Shambling Deadeye", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[139002] = {
					"Wildlands Totemic", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[147948] = {
					"Coagulated Azerite", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[133079] = {
					"Newstead Farmhand", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[134936] = {
					"Kil'tilac", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[155919] = {
					"Stormling", -- [1]
					"The Eternal Palace", -- [2]
				},
				[148621] = {
					"Jek'kwa", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[152852] = {
					"Pashmar the Fanatical", -- [1]
					"The Eternal Palace", -- [2]
				},
				[136984] = {
					"Reban", -- [1]
					"Kings' Rest", -- [2]
				},
				[126094] = {
					"Slitherblade Wavecaller", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150293] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136854] = {
					"Baruun Flinthoof", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139032] = {
					"Razorfin Waveguard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135961] = {
					"Deepstone Crusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152853] = {
					"Silivaz the Zealous", -- [1]
					"The Eternal Palace", -- [2]
				},
				[39381] = {
					"Crimsonborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[131785] = {
					"Buzzing Drone", -- [1]
					"Tol Dagor", -- [2]
				},
				[87448] = {
					"Ironworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[135765] = {
					"Torrent Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[139033] = {
					"Razorfin Watershaper", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[135962] = {
					"Crag Rager", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156949] = {
					"Armsmaster Terenson", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[157461] = {
					"Mycelial Cyst", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[126095] = {
					"Vyliss", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[105876] = {
					"Enchanted Broodling", -- [1]
					"The Arcway", -- [2]
				},
				[61392] = {
					"Harthak Flameseeker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[134939] = {
					"Bristlethorn Maneater", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[140058] = {
					"Grizzlefur Patriarch", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[78491] = {
					"Brackenspore", -- [1]
					"Highmaul", -- [2]
				},
				[132892] = {
					"Giddyleaf", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146106] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[136863] = {
					"Great Mota", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[147225] = {
					"Azerite Extractor", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[159510] = {
					"Eye of the Depths", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135964] = {
					"Rumbling Earth", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140059] = {
					"Grizzlefur Mauler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[122605] = {
					"Recently Petrified Foe", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[132893] = {
					"Fire Spirit", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[11673] = {
					"Ancient Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139034] = {
					"Razorfin Impaler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139036] = {
					"Razorfin Javelineer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151833] = {
					"Wandering Soul", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140060] = {
					"Grizzlefur Bear", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[131726] = {
					"Gunnolf the Ferocious", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[136989] = {
					"Newstead Militia", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[153881] = {
					"Conversion Totem", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[16056] = {
					"Diseased Maggot", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[151785] = {
					"Void-Twisted Wyrmkiller", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[139037] = {
					"Razorfin Jinyu", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[12057] = {
					"Garr", -- [1]
					"Molten Core", -- [2]
				},
				[140061] = {
					"Grizzlefur Den-Mother", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[136990] = {
					"Cursed Ankali", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[69791] = {
					"Longwoman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139038] = {
					"Kaihu", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155930] = {
					"Deephive Chosen", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[45269] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[133588] = {
					"Automatic Explosive Ejector", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136991] = {
					"Blood-Hunter Dazal'ai", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139039] = {
					"Eso the Fathom-Hunter", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[22917] = {
					"Illidan Stormrage", -- [1]
					"Black Temple", -- [2]
				},
				[22853] = {
					"Illidari Defiler", -- [1]
					"Black Temple", -- [2]
				},
				[159514] = {
					"Blood of Ny'alotha", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151836] = {
					"Void Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[140063] = {
					"Smashmaw the Man-Eater", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[78583] = {
					"Dominator Turret", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[161562] = {
					"General Shar'az", -- [1]
					"Halls of Origination", -- [2]
				},
				[144849] = {
					"Darkscale Scout", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138016] = {
					"Darokk", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[39626] = {
					"Crimsonborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[34776] = {
					"Siege Engine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[69792] = {
					"Longwoman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[148254] = {
					"Frost Shard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[157467] = {
					"Void Ascendant", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144949] = {
					"Canopy Stalker", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139041] = {
					"Aquamancer Lushu", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134946] = {
					"Great Huntsman", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[17968] = {
					"Archimonde", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[140065] = {
					"Muskhide", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[96754] = {
					"Harbaron", -- [1]
					"Maw of Souls", -- [2]
				},
				[139043] = {
					"Tidestriker Ocho", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139042] = {
					"Spearmaster Kashai", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151839] = {
					"Restless Soul", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[136483] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[147745] = {
					"The Indomitable", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[22959] = {
					"Spellbound Attendant", -- [1]
					"Black Temple", -- [2]
				},
				[134948] = {
					"Thicket Stalker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151840] = {
					"Vile Soul", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140067] = {
					"Rustpelt Alpha", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146895] = {
					"Fleshrot Vandal", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132901] = {
					"Gulan Yaungol", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[126100] = {
					"Duskcoat Prowler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[123285] = {
					"Southsea Swabbie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134437] = {
					"Medic Bot", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139044] = {
					"Wavemender Asha", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151841] = {
					"Burgthok the Herald", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140068] = {
					"Rustpelt Snarler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22878] = {
					"Aqueous Lord", -- [1]
					"Black Temple", -- [2]
				},
				[153377] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[140979] = {
					"Greatfangs", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140344] = {
					"Sky Viper", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150818] = {
					"Disturbed Blood Globule", -- [1]
					"Uldir Scenario", -- [2]
				},
				[139045] = {
					"Speaker Juchi", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[24175] = {
					"Amani'shi Lookout", -- [1]
					"Zul'Aman", -- [2]
				},
				[140069] = {
					"Rustpelt Wolf", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152866] = {
					"Hardened Azerite", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[126101] = {
					"Duskcoat Huntress", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135959] = {
					"Quakestomp the Rumbler", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[146894] = {
					"Fleshrot Cabalist", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127381] = {
					"Silt Crab", -- [1]
					"Tol Dagor", -- [2]
				},
				[76309] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[132904] = {
					"Sandscalp Villager", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126099] = {
					"Duskcoat Den-Mother", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134786] = {
					"Spineclaw Sandsnapper", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157419] = {
					"Void-Twisted Whelp", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[139466] = {
					"Cobalt Stoneguard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140071] = {
					"Old One-Fang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139433] = {
					"Sister of Anguish", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[157475] = {
					"Synthesis Growth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[58964] = {
					"Shirmek", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[122263] = {
					"Spineshell Snapjaw", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[123287] = {
					"Southsea Swashbuckler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[98205] = {
					"Corstilax", -- [1]
					"The Arcway", -- [2]
				},
				[151845] = {
					"Lieutenant N'ot", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140072] = {
					"Direprowl the Ravager", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[23576] = {
					"Nalorakk", -- [1]
					"Zul'Aman", -- [2]
				},
				[161571] = {
					"Anubisath Sentinel", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[40273] = {
					"Ascended Waterlasher", -- [1]
					"Grim Batol", -- [2]
				},
				[77893] = {
					"Grasping Earth", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162534] = {
					"Anubisath Sentinel", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144168] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140073] = {
					"Rabidmaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144680] = {
					"Frida Ironbellows", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[122264] = {
					"Elder Spineshell", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155791] = {
					"Horrific Shrieker", -- [1]
					"The Eternal Palace", -- [2]
				},
				[98206] = {
					"General Xakal", -- [1]
					"The Arcway", -- [2]
				},
				[146892] = {
					"Fleshrot Marauder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140074] = {
					"Sharptooth", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[49495] = {
					"Chattering Horror", -- [1]
					"Deadmines", -- [2]
				},
				[161573] = {
					"Disciple of the Prophet", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[126185] = {
					"Zian-Ti Shadowcaster", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22960] = {
					"Dragonmaw Wyrmcaller", -- [1]
					"Black Temple", -- [2]
				},
				[130024] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				[140064] = {
					"Bloodsoaked Grizzlefur", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140075] = {
					"Canus", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155432] = {
					"Enchanted Emissary", -- [1]
					"Freehold", -- [2]
				},
				[123289] = {
					"Sparkleshell Deathclaw", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[122265] = {
					"Saltfur Smasher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[77476] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[102302] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[132910] = {
					"Bristlemane Squealer", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[144683] = {
					"Ra'wani Kanae", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[145195] = {
					"Dredge Fleet Destroyer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[16057] = {
					"Rotting Maggot", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[146731] = {
					"Zombie Dust Totem", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[155433] = {
					"Void-Touched Emissary", -- [1]
					"Freehold", -- [2]
				},
				[151850] = {
					"Commander Dilik", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140077] = {
					"Knucklebump Stomper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152874] = {
					"Vez'okk the Lightless", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[129828] = {
					"Brineshell Clacker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133935] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				[77477] = {
					"Marak the Blooded", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155434] = {
					"Emissary of the Tides", -- [1]
					"Freehold", -- [2]
				},
				[123290] = {
					"Sparkleshell Clacker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140078] = {
					"Knucklebump Gorilla", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[143009] = {
					"Daelin Proudmoore", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[146596] = {
					"Darkscale Myrmidon", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[58960] = {
					"Метаросе", -- [1]
					"Isle of Conquest", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[128921] = {
					"Duskcoat Tiger", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135472] = {
					"Zanazal the Wise", -- [1]
					"Kings' Rest", -- [2]
				},
				[152364] = {
					"Radiance of Azshara", -- [1]
					"The Eternal Palace", -- [2]
				},
				[163612] = {
					"Voidspawn Annihilator", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[97185] = {
					"The Grimewalker", -- [1]
					"Maw of Souls", -- [2]
				},
				[130791] = {
					"Khut'een", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
				},
				[122089] = {
					"Slitherblade Oracle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155272] = {
					"Blackwater Oracle", -- [1]
					"The Eternal Palace", -- [2]
				},
				[123270] = {
					"Chef Gru", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[123291] = {
					"Sparkleshell Crab", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[97163] = {
					"Cursed Falke", -- [1]
					"Maw of Souls", -- [2]
				},
				[137940] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144169] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138989] = {
					"Saltfin", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[151854] = {
					"Deathseeker Loshok", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[135975] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[22873] = {
					"Coilskar General", -- [1]
					"Black Temple", -- [2]
				},
				[80719] = {
					"Iron Smith", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[49493] = {
					"Nightmare Skitterling", -- [1]
					"Deadmines", -- [2]
				},
				[81318] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[81315] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[61398] = {
					"Xin the Weaponmaster", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[135475] = {
					"Kula the Butcher", -- [1]
					"Kings' Rest", -- [2]
				},
				[123292] = {
					"Sparkleshell Pincher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[157486] = {
					"Horrific Hemorrhage", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[155872] = {
					"Trapped Saurok", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[161502] = {
					"Ravenous Fleshfiend", -- [1]
					"Atal'Dazar", -- [2]
				},
				[128923] = {
					"Sha'khee", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[155951] = {
					"Ruffer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140083] = {
					"Kula the Thunderer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144690] = {
					"Mestrah", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[137012] = {
					"Newstead Huntsman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[147955] = {
					"Georb", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134940] = {
					"Bristlethorn Piercer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[98208] = {
					"Advisor Vandros", -- [1]
					"The Arcway", -- [2]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[59479] = {
					"Yan-Zhu the Uncasked", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140084] = {
					"Crushknuckle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144691] = {
					"Ma'ra Grimfang", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[132918] = {
					"Spitefin Raider", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[118175] = {
					"Storm Elemental", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146887] = {
					"Ghern the Rancid", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[39900] = {
					"Enslaved Rock Elemental", -- [1]
					"Grim Batol", -- [2]
				},
				[155953] = {
					"C'Thuffer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140085] = {
					"Pinegraze Greatstag", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144692] = {
					"Anathos Firecaller", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[93349] = {
					"Viina", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[133943] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[146740] = {
					"Mag'har Beastlord", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[132913] = {
					"Island Ettin", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[151859] = {
					"Tomb Scarab", -- [1]
					"Halls of Origination", -- [2]
				},
				[140086] = {
					"Pinegraze Courser", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144693] = {
					"Manceroy Flamefist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[132920] = {
					"Shadow Serpent", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[33502] = {
					"Core Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[87719] = {
					"Ogron Hauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[41948] = {
					"Chromatic Prototype", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[58456] = {
					"Wolf", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140087] = {
					"Pinegraze Doe", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[76307] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[132921] = {
					"Tidemistress Sser'ah", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59605] = {
					"Sodden Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[21362] = {
					"Phoenix", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[138986] = {
					"Borgl the Seeker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[157253] = {
					"Ka'zir", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[1860] = {
					"Thokjuk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[140088] = {
					"Stonehorn the Charger", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156980] = {
					"Essence of Void", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[132922] = {
					"Enslaved Murloc", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[43612] = {
					"High Prophet Barim", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[136833] = {
					"Witherbranch Venom Priest", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140360] = {
					"Sunback", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151679] = {
					"Stinkfur Thumper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[151862] = {
					"Spiritwalker Fe'sal", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140089] = {
					"Gloamhoof the Elder", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145030] = {
					"Arctic Poacher", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[132923] = {
					"Coldlight Murloc", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[144170] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146744] = {
					"Ashen Enforcer", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[105451] = {
					"Counterstrike Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[123293] = {
					"Royal Sand Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140090] = {
					"Ana'tashe", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157255] = {
					"Aqir Drone", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[148272] = {
					"Crankshot Flame Turret", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[22898] = {
					"Supremus", -- [1]
					"Black Temple", -- [2]
				},
				[22962] = {
					"Priestess of Delight", -- [1]
					"Black Temple", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140091] = {
					"Snowhoof", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
				},
				[139417] = {
					"Rotwood the Cursed", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[42717] = {
					"Wolf", -- [1]
					"Kings' Rest", -- [2]
				},
				[138556] = {
					"Tainted Ooze", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[118690] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[140092] = {
					"Longstrider", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145211] = {
					"Thunderscale Whelpling", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[39390] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[144837] = {
					"Darkshore Stag", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[22883] = {
					"Aqueous Spawn", -- [1]
					"Black Temple", -- [2]
				},
				[138557] = {
					"Living Corruption", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[128928] = {
					"Crab Egg", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140987] = {
					"Fleshmelter the Insatiable", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140093] = {
					"Pinegraze Fawnmother", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140993] = {
					"Darktunnel Ambusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[76973] = {
					"Hans'gar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[122086] = {
					"Slitherblade Ironscale", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138558] = {
					"Faceless One", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[105706] = {
					"Priestess of Misery", -- [1]
					"The Arcway", -- [2]
				},
				[140094] = {
					"Mudsnout Thornback", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[135999] = {
					"Heliodor", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[144836] = {
					"Spikey", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[22951] = {
					"Lady Malande", -- [1]
					"Black Temple", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[138559] = {
					"Forgotten One", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[139340] = {
					"Icetusk Necromancer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140095] = {
					"Mudsnout Gorer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136000] = {
					"Beryllus", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[148797] = {
					"Magus of the Dead", -- [1]
					"Eye of the Storm", -- [2]
				},
				[159305] = {
					"Maddened Conscript", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[76974] = {
					"Franzok", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146238] = {
					"Blacksting", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138560] = {
					"Faceless Horror", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[99307] = {
					"Skjal", -- [1]
					"Maw of Souls", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[140096] = {
					"Mudsnout Boar", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[149311] = {
					"Shandris Feathermoon", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[43614] = {
					"Lockmaw", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[77231] = {
					"Enforcer Sorka", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138561] = {
					"Faceless Mindlasher", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[77487] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[136003] = {
					"Gravellus", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140097] = {
					"Great Dirtbelly", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140609] = {
					"Ravenous Mako", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[137026] = {
					"Newstead Hound", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[61146] = {
					"Black Ox Statue", -- [1]
					"Crucible of Storms", -- [2]
				},
				[138562] = {
					"Void Maggot", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[160061] = {
					"Crawling Corruption", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140098] = {
					"Vicious Scarhide", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148625] = {
					"Echo of Krag'wa", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[149312] = {
					"Ferocious Swiftclaw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[114288] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[124580] = {
					"Grotto Terrapin", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138563] = {
					"Vudax", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139346] = {
					"Soul-Speaker Galani", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[151872] = {
					"Grip of Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[140099] = {
					"Thundersnort the Loud", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				[159405] = {
					"Aqir Scarab", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[136270] = {
					"Captain Nials", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[12119] = {
					"Flamewaker Protector", -- [1]
					"Molten Core", -- [2]
				},
				[138564] = {
					"Kshuun", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[161746] = {
					"Ossirat", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144833] = {
					"Whiptongue", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[148290] = {
					"Crazed Crankshot Engineer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[124581] = {
					"Spineshell Snapper", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[39392] = {
					"Faceless Corruptor", -- [1]
					"Grim Batol", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[139202] = {
					"Verdant Tender", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[146755] = {
					"Slavering Skullcleaver", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[146880] = {
					"Gholvran the Cryptic", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[80048] = {
					"Vul'gor", -- [1]
					"Highmaul", -- [2]
				},
				[140101] = {
					"Swampwallow", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[60447] = {
					"Krik'thik Saboteur", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[44895] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[56924] = {
					"Inflamed Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[146244] = {
					"Stinging Fiend", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138566] = {
					"Nyl'sozz", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140854] = {
					"Flow", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Crucible of Storms", -- [2]
				},
				[140102] = {
					"Razorhog", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[153022] = {
					"Snang", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[118176] = {
					"Thundershock", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[22874] = {
					"Coilskar Harpooner", -- [1]
					"Black Temple", -- [2]
				},
				[146245] = {
					"Skitterwing", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[124582] = {
					"Chasm-Hunter", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[77687] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151876] = {
					"Wandering Spirit", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135470] = {
					"Aka'ali the Conqueror", -- [1]
					"Kings' Rest", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[159312] = {
					"Living Blood", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151754] = {
					"Void Haunt", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[21364] = {
					"Phoenix Egg", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[138568] = {
					"Shuk'shuguun the Subjugator", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[66413] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[98733] = {
					"Withered Fiend", -- [1]
					"The Arcway", -- [2]
				},
				[146759] = {
					"Treasury Protector", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[145223] = {
					"Thunderscale Adolescent", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138569] = {
					"Harbinger Vor'zzyx", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146247] = {
					"White Death", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[124583] = {
					"Garnetback Worm", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22963] = {
					"Bonechewer Worker", -- [1]
					"Black Temple", -- [2]
				},
				[131311] = {
					"Unleashed Azerite", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[48351] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[132885] = {
					"Air Elemental", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145224] = {
					"Thunderscale Drake", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[133963] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[44896] = {
					"Pygmy Brute", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[118244] = {
					"LightningPaw", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[69946] = {
					"Narco", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140106] = {
					"Deathsting Broodwatcher", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[121571] = {
					"BringBackWoD", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[119977] = {
					"Stranglevine Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[135254] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				[22964] = {
					"Sister of Pleasure", -- [1]
					"Black Temple", -- [2]
				},
				[23028] = {
					"Bonechewer Taskmaster", -- [1]
					"Black Temple", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[140107] = {
					"Deathsting Lasher", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140619] = {
					"Coastal Fathomjaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129879] = {
					"Irontide Cleaver", -- [1]
					"Siege of Boralus", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[42721] = {
					"Raptor", -- [1]
					"Waycrest Manor", -- [2]
				},
				[146251] = {
					"Sister Katherine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[154555] = {
					"Amathet Artificer", -- [1]
					"Halls of Origination", -- [2]
				},
				[151881] = {
					"Abyssal Commander Sivara", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140108] = {
					"Deathsting Scorpid", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140620] = {
					"South Sea Stinger", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[131407] = {
					"Venture Goon", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[119978] = {
					"Fulminating Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[147787] = {
					"7th Legion Battlemage", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[24180] = {
					"Amani'shi Protector", -- [1]
					"Zul'Aman", -- [2]
				},
				[40290] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[49532] = {
					"Enraged Worgen", -- [1]
					"Deadmines", -- [2]
				},
				[150859] = {
					"Za'qul", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[131408] = {
					"Venture Muscle", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[61701] = {
					"Sik'thik Warrior", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[138063] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[123818] = {
					"Surf Darter", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[146253] = {
					"Brother Joseph", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138575] = {
					"General Shuul'aqar", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[12259] = {
					"Gehennas", -- [1]
					"Molten Core", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[152396] = {
					"Guardian of Azeroth", -- [1]
					"Isle of Conquest", -- [2]
				},
				[148622] = {
					"Echo of Kimbul", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[139353] = {
					"Unliving Champion", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134796] = {
					"King Spineclaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138064] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146766] = {
					"Greater Serpent Totem", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[134993] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				[131410] = {
					"Gargantuan Venomscale", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140112] = {
					"Stonelash", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[119724] = {
					"Tidal Surger", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[151886] = {
					"Detached Thought", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138577] = {
					"Crushing Tentacle", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[131411] = {
					"Venomscale Monitor", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140113] = {
					"Venomlash", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[152910] = {
					"Queen Azshara", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138066] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[56927] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[122284] = {
					"Greater Jungle Stalker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[44898] = {
					"Pygmy Firebreather", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[139354] = {
					"Butun the Boneripper", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145851] = {
					"Kaldorei Hippogryph Rider", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[140114] = {
					"Clatterclaw", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[160904] = {
					"Image of Absolution", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[155952] = {
					"Suffer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138579] = {
					"Giant Claw Tentacle", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[133972] = {
					"Heavy Cannon", -- [1]
					"Tol Dagor", -- [2]
				},
				[146769] = {
					"Druid of the Claw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[143020] = {
					"Gorak Tul", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[152704] = {
					"Crawling Corruption", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[151752] = {
					"Voidswarm", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[162933] = {
					"Thought Harvester", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138068] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146770] = {
					"Druid of the Claw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[144826] = {
					"Man-Eater", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59487] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140100] = {
					"Warsnort", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134947] = {
					"Bristlethorn Broodqueen", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[45063] = {
					"Bonesnapper Scorpid", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[146873] = {
					"Murderous Tempest", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138497] = {
					"Twilight Scalesworn", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[98732] = {
					"Plagued Rat", -- [1]
					"The Arcway", -- [2]
				},
				[153527] = {
					"Aqir Swarmleader", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[84151] = {
					"Chimère", -- [1]
					"Isle of Conquest", -- [2]
				},
				[136224] = {
					"Stromgarde Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[138845] = {
					"Commander Jo'vak", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149331] = {
					"Luminous Azerite", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[133463] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150249] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[118703] = {
					"Felborne Botanist", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[146872] = {
					"Kachota the Exiled", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156818] = {
					"Wrathion", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140630] = {
					"Ornate Puffer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138565] = {
					"My'lyth", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[33510] = {
					"Spirit Beast", -- [1]
					"Kings' Rest", -- [2]
				},
				[144824] = {
					"Slimeskin Toad", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[104676] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[140631] = {
					"South Sea Ray", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[98363] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[158035] = {
					"Magister Umbric", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[59104] = {
					"Hirsch", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[83689] = {
					"Sharpclaw Hunter", -- [1]
					"Ashran", -- [2]
				},
				[118704] = {
					"Dul'zak", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[130788] = {
					"Taghira", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[79082] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[140632] = {
					"Scaleback Snapper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[149334] = {
					"Tectonic Azerite", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135496] = {
					"Cami Cogwizzle", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[136010] = {
					"Faceted Earthbreaker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138982] = {
					"Muckfin Murloc", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[160420] = {
					"Angry Book Spirit", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[44260] = {
					"Venomfang Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[153942] = {
					"Annihilator Lak'hal", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[149335] = {
					"Tumultuous Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56929] = {
					"Krik'thik Protectorate", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"The Eternal Palace", -- [2]
				},
				[144993] = {
					"Crazed Thistlebear", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[118705] = {
					"Nal'asha", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144822] = {
					"Golden Flametongue", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137051] = {
					"Ancient Mindbender", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[153943] = {
					"Decimator Shiq'voth", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138570] = {
					"Herald Razzaqi", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136011] = {
					"Bloodstone", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[23030] = {
					"Dragonmaw Sky Stalker", -- [1]
					"Black Temple", -- [2]
				},
				[75964] = {
					"Ranjit", -- [1]
					"Skyreach", -- [2]
				},
				[140123] = {
					"Weaponmaster Halu", -- [1]
					"Kings' Rest", -- [2]
				},
				[149337] = {
					"Coalesced Azerite", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145242] = {
					"Scalefiend", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[137882] = {
					"Northfold Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139537] = {
					"Zara'thik Kunchong", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[23542] = {
					"Amani'shi Axe Thrower", -- [1]
					"Zul'Aman", -- [2]
				},
				[34919] = {
					"7th Legion Infantry", -- [1]
					"Isle of Conquest", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[136541] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
				},
				[149338] = {
					"Volatile Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140434] = {
					"Craghoof Rockhorn", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[162647] = {
					"Willing Sacrifice", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138576] = {
					"Faceless Tendril", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[39909] = {
					"Azureborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[151898] = {
					"Stinkfur Hopling", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[44261] = {
					"Sharptalon Eagle", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[158041] = {
					"N'Zoth the Corruptor", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[149339] = {
					"Permeated Azerite", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[144998] = {
					"Death Specter", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[126429] = {
					"Encrusted Coralback", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[144733] = {
					"Deathguard Captain Vandel", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[136835] = {
					"Kin'toga Beastbane", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[40166] = {
					"Enslaved Gronn Brute", -- [1]
					"Grim Batol", -- [2]
				},
				[136858] = {
					"Jan'li", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[77692] = {
					"Kromog", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[159578] = {
					"Exposed Synapse", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151900] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[162030] = {
					"Darkwhisper Ritualist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[149341] = {
					"Vitrified Azerite", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[72895] = {
					"Burning Berserker", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[126642] = {
					"Sandyback Crab", -- [1]
					"Siege of Boralus", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[138427] = {
					"Spitefin Harpooner", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137057] = {
					"Gurthani the Elder", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[43622] = {
					"Corrupting Adherent", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[141565] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[98728] = {
					"Acidic Bile", -- [1]
					"The Arcway", -- [2]
				},
				[151902] = {
					"Vile Spirit", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[40167] = {
					"Twilight Beguiler", -- [1]
					"Grim Batol", -- [2]
				},
				[137058] = {
					"Hexxer Magoda", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[149343] = {
					"Frenzy Imbued Azerite", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[61634] = {
					"Commander Vo'jak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[98693] = {
					"Shackled Servitor", -- [1]
					"Maw of Souls", -- [2]
				},
				[11502] = {
					"Ragnaros", -- [1]
					"Molten Core", -- [2]
				},
				[164188] = {
					"Horrific Figment", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[105651] = {
					"Dreadborne Seer", -- [1]
					"The Arcway", -- [2]
				},
				[137059] = {
					"Headshrinker Gaha", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149344] = {
					"Fury Imbued Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[87229] = {
					"Iron Blood Mage", -- [1]
					"Highmaul", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[138428] = {
					"Spitefin Myrmidon", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[44981] = {
					"Oathsworn Skinner", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[164189] = {
					"Horrific Figment", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[148618] = {
					"Archdruid Andrenius", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[140643] = {
					"Ferocious Craghorn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137060] = {
					"Dunecaster Mu'na", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[76884] = {
					"Cruelfang", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[58959] = {
					"Zeppik", -- [1]
					"The Eternal Palace", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163678] = {
					"Clotted Corruption", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"The Eternal Palace", -- [2]
				},
				[149346] = {
					"Suffused Azerite", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[137061] = {
					"Suluz Wind-Tamer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138567] = {
					"Shathhoth the Punisher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133990] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131431] = {
					"Safety Inspection Bot", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[48230] = {
					"Ogre Henchman", -- [1]
					"Deadmines", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[146864] = {
					"Mistscorn Earthbinder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[105952] = {
					"Withered Manawraith", -- [1]
					"The Arcway", -- [2]
				},
				[137062] = {
					"Blood-Hunter Akal", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[98207] = {
					"Nal'tira", -- [1]
					"The Arcway", -- [2]
				},
				[136891] = {
					"Tuskbreaker the Scarred", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135958] = {
					"Malachite", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[23397] = {
					"Illidari Blood Lord", -- [1]
					"Black Temple", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[138426] = {
					"Fogsail Pirate", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146863] = {
					"Mistscorn Ravager", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136868] = {
					"Oomgut Scrapper", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146760] = {
					"Mighty Guardian Spirit", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[155768] = {
					"Squallbinder Mal'ur", -- [1]
					"The Eternal Palace", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[157349] = {
					"Void Boar", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[149349] = {
					"Calcified Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137064] = {
					"Valorcall Marksman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[147374] = {
					"Barrier", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[105915] = {
					"Nightborne Reclaimer", -- [1]
					"The Arcway", -- [2]
				},
				[126682] = {
					"Saltfin Swimmer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[118712] = {
					"Felstrider Enforcer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[157365] = {
					"Crackling Stalker", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144231] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[118700] = {
					"Felblight Stalker", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[102272] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[154469] = {
					"First Arcanist Thalyssra", -- [1]
					"The Eternal Palace", -- [2]
				},
				[102273] = {
					"Doomguard Infiltrator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[148619] = {
					"Echo of Akunda", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[144232] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"Atal'Dazar", -- [2]
				},
				[149351] = {
					"Rhodochrosite", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[158565] = {
					"Naros", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[154470] = {
					"Shandris Feathermoon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139626] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[118713] = {
					"Felstrider Orbcaster", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[136043] = {
					"Brackish", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[137067] = {
					"Valorcall Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[137579] = {
					"Unbound Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[141495] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[68174] = {
					"Unbound Nightlord", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[140981] = {
					"Gnashing Horror", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[162508] = {
					"Anubisath Sentinel", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[136044] = {
					"Venomswell", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139389] = {
					"Steelscale Volshasis", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137068] = {
					"Valorcall Cavalry", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[77252] = {
					"Ore Crate", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[23694] = {
					"Pulsing Pumpkin", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[118714] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[47720] = {
					"Camel", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[136045] = {
					"Crushtide", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144747] = {
					"Pa'ku's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[149354] = {
					"Monstrous Azergem Crystalback", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[158056] = {
					"Rat", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140974] = {
					"Eldercraw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[52409] = {
					"Ragnaros", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129208] = {
					"Dread Captain Lockwood", -- [1]
					"Siege of Boralus", -- [2]
				},
				[12098] = {
					"Sulfuron Harbinger", -- [1]
					"Molten Core", -- [2]
				},
				[56678] = {
					"Jade Staff", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[149355] = {
					"Aberrant Azergem Crystalback", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61029] = {
					"Primal Fire Elemental", -- [1]
					"The Eternal Palace", -- [2]
				},
				[162664] = {
					"Aqir Swarmer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[102335] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[149356] = {
					"Enraged Azergem Crystalback", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136047] = {
					"Iceheart", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152939] = {
					"Boundless Corruption", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[145261] = {
					"Opulence", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146757] = {
					"Dark Executor", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				[136841] = {
					"Thu'zun the Vile", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[118716] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[151916] = {
					"Zaegra Sharpaxe", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[34028] = {
					"dpsnobrain", -- [1]
					"Kings' Rest", -- [2]
				},
				[59494] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[141167] = {
					"Lightbound Dragoon", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[163690] = {
					"Shath'Yar Scribe", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[130489] = {
					"Dazarian Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[34924] = {
					"High Commander Halford Wyrmbane", -- [1]
					"Isle of Conquest", -- [2]
				},
				[143215] = {
					"Orca", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151917] = {
					"Tar'al Bonespitter", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136049] = {
					"Algenon", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[156795] = {
					"SI:7 Informant", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[149358] = {
					"Colossal Azergem Crystalback", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137585] = {
					"Earthgrab Totem", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135963] = {
					"Earth Elemental", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[75975] = {
					"Skyreach Overlord", -- [1]
					"Skyreach", -- [2]
				},
				[151918] = {
					"Raz'kah of the North", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136050] = {
					"Gorestream", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140657] = {
					"Craghorn Behemoth", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149359] = {
					"Azerite Behemoth", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[80071] = {
					"Bladespire Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[138100] = {
					"Stromgarde Footman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[118717] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140658] = {
					"Bristlefur", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[141170] = {
					"Lightbound Sharpshooter", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[79303] = {
					"Adorned Bladetalon", -- [1]
					"Skyreach", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[144755] = {
					"Zaxasj the Speaker", -- [1]
					"Crucible of Storms", -- [2]
				},
				[147825] = {
					"7th Legion Medic", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140147] = {
					"Great Ursu", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140659] = {
					"Ragestomp", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[141171] = {
					"Lightbound Bulwark", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[145267] = {
					"AzerMEK Mk. II", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[134005] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[42859] = {
					"Stosszahn", -- [1]
					"Ashran", -- [2]
				},
				[118718] = {
					"Book of Eternal Winter", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[146857] = {
					"Honorbound Conqueror", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[140148] = {
					"Rampaging Grizzlefur", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[141172] = {
					"Lightbound Battlemage", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[124349] = {
					"Kunzen Leafeater", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[40291] = {
					"Azureborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
				},
				[147827] = {
					"7th Legion Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144244] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[140661] = {
					"Valethunder", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[141173] = {
					"Lightbound Blademaster", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[134941] = {
					"Bristlethorn Spider", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138102] = {
					"Stromgarde Priest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[124350] = {
					"Kunzen Crusher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[147828] = {
					"7th Legion Cavalier", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[98756] = {
					"Arcane Anomaly", -- [1]
					"The Arcway", -- [2]
				},
				[144757] = {
					"Edgard Shadeclaw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[141174] = {
					"Exarch Orelis", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[138103] = {
					"Stromgarde Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139004] = {
					"Wildlands Shaman", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144246] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[147829] = {
					"Rastari Beastmaster", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[129469] = {
					"Deepsea Crawler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140663] = {
					"Mountain Lord Grum", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[136892] = {
					"Brutalsnout", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[149336] = {
					"Basaltic Azerite", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[114625] = {
					"Phantom Guest", -- [1]
					"Return to Karazhan", -- [2]
				},
				[147830] = {
					"Rastari Flamespeaker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140152] = {
					"Rotclaw Mauler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144759] = {
					"Keeper Dagda", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[39405] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[124351] = {
					"Kunzen Boneripper", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138105] = {
					"Veteran of Stromgarde", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144248] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129470] = {
					"Deepsea Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[129214] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[140153] = {
					"Rotclaw Bear", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161140] = {
					"Bwemba", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[69712] = {
					"Ji-Kun", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[140154] = {
					"Rotclaw Patriarch", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[83681] = {
					"Buzzing Venomfly", -- [1]
					"Ashran", -- [2]
				},
				[85705] = {
					"Overgrown Jungleweed", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[87520] = {
					"Animated Slag", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[144249] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136880] = {
					"Bristlemane Quilboar", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61928] = {
					"Sik'thik Guardian", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[124352] = {
					"Kunzen Stalker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"The Eternal Palace", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[140977] = {
					"Jadescale Gnasher", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140155] = {
					"Rabid Rotclaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134908] = {
					"Bloodfang", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145274] = {
					"Yalat's Bulwark", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[147588] = {
					"Treasury Defender", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[146884] = {
					"Warlord Hjelskard", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[140151] = {
					"Rotclaw Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140156] = {
					"Vilemaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136838] = {
					"Zgordo the Brutalizer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[32485] = {
					"King Krush", -- [1]
					"Ashran", -- [2]
				},
				[140251] = {
					"Pinegraze Buck", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[124353] = {
					"Kunzen Hozen", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140292] = {
					"Snowfur Alpha", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[120770] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[147835] = {
					"Rastari Alpha", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144765] = {
					"Asithra Diresong", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[140669] = {
					"Rockmane Howler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[118724] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[14465] = {
					"Alliance Battle Standard", -- [1]
					"Isle of Conquest", -- [2]
				},
				[146813] = {
					"Gunther the Gray", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140159] = {
					"Dreadgrowl the Pustulent", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[118723] = {
					"Gazerax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[140671] = {
					"Feralclaw the Rager", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140158] = {
					"Bilesoaked Rotclaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140670] = {
					"Hulking Rockmane", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138623] = {
					"Amathet Archer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[33776] = {
					"Geist", -- [1]
					"Isle of Conquest", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[54507] = {
					"Time-Twisted Scourge Beast", -- [1]
					"End Time", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[98761] = {
					"Shredlock", -- [1]
					"Maw of Souls", -- [2]
				},
				[130241] = {
					"Zandalari Archon", -- [1]
					"Zul'Aman", -- [2]
				},
				[150397] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138624] = {
					"Amathet Champion", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140672] = {
					"Dusthide the Mangy", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140160] = {
					"Boilhide the Raging", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[119748] = {
					"JOChEn", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[158588] = {
					"Gamon", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138625] = {
					"Amathet Enforcer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132746] = {
					"Frostscale Broodmother", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[148200] = {
					"Restless Bones", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140161] = {
					"Duneburrower", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140673] = {
					"Ragesnarl", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[44976] = {
					"Neferset Plaguebringer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[140424] = {
					"Scythehorn", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158567] = {
					"Tormented Kor'kron Annihilator", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[146816] = {
					"Sir Barton Brigham", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135043] = {
					"Vicious Vicejaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139345] = {
					"Deathwhisperer Kulu", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129471] = {
					"Deepsea Sandcrawler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140674] = {
					"Deephowl", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149352] = {
					"Jeweled Azergem Crystalback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136870] = {
					"Oomgut Champion", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[138627] = {
					"Amathet Hierophant", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135044] = {
					"Shredmaw the Voracious", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139651] = {
					"Coldlight Deepseer", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[123271] = {
					"Saltfur Stick-Thrower", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140675] = {
					"Den Mother Mugo", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137092] = {
					"Valorcall Faithful", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[130243] = {
					"Zandalari Hierophant", -- [1]
					"Zul'Aman", -- [2]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
				},
				[138628] = {
					"Amathet Priest", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135045] = {
					"Spinesnapper", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139652] = {
					"Coldlight Coastrunner", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[131974] = {
					"Lieutenant Valen", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[140676] = {
					"Gigantic Stoneback", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149353] = {
					"Incandescent Azergem Crystalback", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138660] = {
					"Mist Hound", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146256] = {
					"Laminaria", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138629] = {
					"Vicar Djosa", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135046] = {
					"Crawmog", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[148617] = {
					"Akunda the Devout", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144772] = {
					"Lady Tamakeen", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140677] = {
					"Hulking Frostbeard", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[132999] = {
					"Nexus-Lord Ashaal", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[129989] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[156575] = {
					"Dark Inquisitor Xanesh", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138630] = {
					"Cleric Izzad", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[163712] = {
					"Dying Voidspawn", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139654] = {
					"Dampscale Mudskipper", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140678] = {
					"Frostbeard Howler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[78801] = {
					"Darkshard Acidback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[74962] = {
					"Stoneshamble Basilisk", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138631] = {
					"Pathfinder Qadim", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139655] = {
					"Coldlight Seer", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140679] = {
					"Frostbeard Wendigo", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[105419] = {
					"Dire Basilisk", -- [1]
					"Eye of the Storm", -- [2]
				},
				[130245] = {
					"Zandalari Juggernaut", -- [1]
					"Zul'Aman", -- [2]
				},
				[146849] = {
					"Spirit Master Rowena", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138632] = {
					"Guardian Asuda", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[139656] = {
					"Coldlight Oracle", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140168] = {
					"Elder Chest-Thump", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140680] = {
					"Frozenhorn Rampager", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137097] = {
					"Valorcall Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144776] = {
					"Airyn Swiftfeet", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[40177] = {
					"Forgemaster Throngus", -- [1]
					"Grim Batol", -- [2]
				},
				[87760] = {
					"Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[139658] = {
					"Coldlight Murkdweller", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139657] = {
					"Coldlight Shorestriker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[117193] = {
					"Agronox", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[140681] = {
					"Gurudu The Gorge", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[41073] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[140171] = {
					"Mistfur", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138634] = {
					"Prophet Lapisa", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[143753] = {
					"Vazun Starspeaker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138635] = {
					"Commander Husan", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140682] = {
					"Glacierfist", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139659] = {
					"Dampscale Oracle", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[117194] = {
					"Thrashbite the Scornful", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[140683] = {
					"Darkfur the Smasher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155276] = {
					"Bursting Cragfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134798] = {
					"Abyss Crawler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138636] = {
					"Prince Abari", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[157337] = {
					"Spawn of Shad'har", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[139660] = {
					"Dampscale Murloc", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[141169] = {
					"Lightbound Warpriest", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[140684] = {
					"Crushstomp", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[136890] = {
					"Iron Orkas", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140685] = {
					"Elderhorn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146827] = {
					"Feral Dog", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[162715] = {
					"Fanatical Cultist", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139661] = {
					"Dampscale Forager", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[102351] = {
					"Mana Wyrm", -- [1]
					"The Arcway", -- [2]
				},
				[40306] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[137614] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[146828] = {
					"Feral Pup", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[53231] = {
					"Lava Scion", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[139662] = {
					"Dampscale Raincaller", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[120779] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[148894] = {
					"Lost Soul", -- [1]
					"The Underrot", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[143758] = {
					"Brewer Ahna", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[146829] = {
					"Undying Guardian", -- [1]
					"Crucible of Storms", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139663] = {
					"Dampscale Reedweaver", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[54511] = {
					"Time-Twisted Geist", -- [1]
					"End Time", -- [2]
				},
				[136592] = {
					"Flynn Fairwind", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140442] = {
					"Muskflank Yak", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135834] = {
					"Vile Cloud", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[38453] = {
					"Arcturis", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144754] = {
					"Fa'thuul the Feared", -- [1]
					"Crucible of Storms", -- [2]
				},
				[149360] = {
					"Hulking Azerite", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139664] = {
					"Dampscale Terrorfin", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[148893] = {
					"Tormented Soul", -- [1]
					"The Underrot", -- [2]
				},
				[140660] = {
					"Big-Horn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[158092] = {
					"Fallen Heartpiercer", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[122266] = {
					"Spineshell Turtle", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146831] = {
					"Kul Tiran Stormbringer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146845] = {
					"Jared the Jagged", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144784] = {
					"Charg \"The Boisterous\"", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140689] = {
					"Dreadfang Slitherer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144785] = {
					"Nagtar Wolfsbane", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138643] = {
					"Kvaldir Berserker", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[146320] = {
					"Prelate Za'lan", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146832] = {
					"Necromancer Disciple", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[147344] = {
					"Opulence", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[139666] = {
					"Orgl the Totemic", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[98770] = {
					"Wrathguard Felblade", -- [1]
					"The Arcway", -- [2]
				},
				[140690] = {
					"Dreadfang Viper", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139667] = {
					"Seer Grglok", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139678] = {
					"Shoal-Walker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140691] = {
					"Giant Dreadfang", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146833] = {
					"Necromancer Conjurer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138654] = {
					"Vestar of the Tattered Sail", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129227] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[54512] = {
					"Time-Twisted Sentinel", -- [1]
					"End Time", -- [2]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[145298] = {
					"Feral Hungerer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[36701] = {
					"Raging Spirit", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[146322] = {
					"Siegebreaker Roka", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146834] = {
					"Necromancer Master", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146835] = {
					"Ghoul", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[143763] = {
					"Lieutenant Elda", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140180] = {
					"Brutalgore", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140692] = {
					"Bloodbore", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[120527] = {
					"Syaith", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76253] = {
					"Dread Raven Hatchling", -- [1]
					"Skyreach", -- [2]
				},
				[138645] = {
					"Kvaldir Soulflayer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[159632] = {
					"Cultist Shadowblade", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[139669] = {
					"Shaman Garmr", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140181] = {
					"Cragtusk", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140693] = {
					"Hisskarath", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129996] = {
					"Irontide Cleaver", -- [1]
					"Siege of Boralus", -- [2]
				},
				[105682] = {
					"Felguard Destroyer", -- [1]
					"The Arcway", -- [2]
				},
				[36597] = {
					"The Lich King", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[138646] = {
					"Kvaldir Mistcaller", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[159633] = {
					"Cultist Executioner", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[139670] = {
					"Morgok", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140182] = {
					"Trampleleaf the Jungle Quake", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144789] = {
					"Ranah Saberclaw", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[140183] = {
					"Old Muckhide", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138653] = {
					"Hosvir of the Rotting Hull", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138647] = {
					"Hjana Fogbringer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146838] = {
					"Brittle Skeleton", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139671] = {
					"Sharkslayer Mugluk", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140695] = {
					"Albino Dreadfang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146326] = {
					"Headhunter Gal'wana", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138648] = {
					"Sigrid the Shroud-Weaver", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130765] = {
					"Jungle Stalker Cub", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137625] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139672] = {
					"Gibberfin", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[15936] = {
					"Heigan the Unclean", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[140696] = {
					"Da'zu the Feared", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145303] = {
					"Kaldorei Glaive Thrower", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[120016] = {
					"Necrotic Spiderling", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[134806] = {
					"Bloodsnapper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138649] = {
					"Vulf Stormshore", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140992] = {
					"Corpseburster", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139673] = {
					"Many-Teeth", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[137626] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140697] = {
					"Vile Asp", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145304] = {
					"Feral Strangler", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[81114] = {
					"Gronnling Laborer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146840] = {
					"Skeleton Guardian", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138650] = {
					"Tide-Lost Champion", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139674] = {
					"Deepscale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[49267] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[149400] = {
					"Royal Dreadguard", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[161173] = {
					"Abyssal Watcher", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[145305] = {
					"Feral Hulk", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137627] = {
					"Constricting Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140546] = {
					"Broodqueen Vyl'tilac", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138651] = {
					"Sylveria Reefcaller", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[118719] = {
					"Wyrmtongue Scavenger", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[139675] = {
					"Fathom-Seeker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[129231] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[151960] = {
					"Suntouched Acolyte", -- [1]
					"Halls of Origination", -- [2]
				},
				[22846] = {
					"Ashtongue Stormcaller", -- [1]
					"Black Temple", -- [2]
				},
				[103381] = {
					"Jailer Cage", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[140662] = {
					"Elder Greatfur", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138652] = {
					"Tide-Cursed Mistress", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[139676] = {
					"Wave-Speaker Ormrg", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[160663] = {
					"Essence of Nightmare", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Eye of the Storm", -- [2]
				},
				[145307] = {
					"Forsaken Laborer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[79068] = {
					"Iron Grunt", -- [1]
					"Highmaul", -- [2]
				},
				[130635] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146843] = {
					"Spiked Ghoul", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146837] = {
					"Treasury Sentinel", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[139677] = {
					"Depth-Caller", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[144796] = {
					"High Tinker Mekkatorque", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140694] = {
					"Gorgejaw the Glutton", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[48756] = {
					"Hooked Net", -- [1]
					"Grim Batol", -- [2]
				},
				[35189] = {
					"Gozzie", -- [1]
					"Crucible of Storms", -- [2]
				},
				[146844] = {
					"Olfkrig the Indentured", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139668] = {
					"Wavebinder Gorgl", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[147868] = {
					"Frenzied Saurid", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138644] = {
					"Kvaldir Cursewalker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152987] = {
					"Faceless Willbreaker", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[157594] = {
					"Lesser Void Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138642] = {
					"Kvaldir Reaver", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[87515] = {
					"Iron Flame Binder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[87771] = {
					"Slagshop Worker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138641] = {
					"Kvaldir Dreadbringer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139679] = {
					"Argl", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[144286] = {
					"Asset Manager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[152988] = {
					"Faceless Shadowcaller", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[135322] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				[81117] = {
					"Karnor the Cruel", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[154524] = {
					"K'thir Mindcarver", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[152331] = {
					"Captain Lancy Revshon", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[139680] = {
					"Lightless Hunter", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[144782] = {
					"Brother Bruen", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[149406] = {
					"Kaldorei Dark Ranger", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[99801] = {
					"Destructor Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[146847] = {
					"Summoner Laniella", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[75976] = {
					"Low-Born Arakkoa", -- [1]
					"Skyreach", -- [2]
				},
				[139681] = {
					"Bleakfin", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[155275] = {
					"Tideshaper Korvess", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138393] = {
					"Biter", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[44897] = {
					"Pygmy Scout", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[143002] = {
					"Kirin Tor Invoker", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[162716] = {
					"Spellbound Ritualist", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146848] = {
					"Eerie Conglomeration", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[152479] = {
					"Void-Twisted Whelp", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[22847] = {
					"Ashtongue Primalist", -- [1]
					"Black Temple", -- [2]
				},
				[162717] = {
					"Sinister Soulcarver", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138659] = {
					"Risen Hound", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138633] = {
					"Brother Maat", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[136100] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[85711] = {
					"Aquatic Technician", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[162718] = {
					"Iron-Willed Enforcer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146850] = {
					"Grand Master Ulrich", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[59819] = {
					"Artillery", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[103130] = {
					"Timeless Wraith", -- [1]
					"The Arcway", -- [2]
				},
				[163708] = {
					"Umbral Gatekeeper", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139403] = {
					"Arassaz the Invader", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[162719] = {
					"Void Ascendant", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[48441] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[138626] = {
					"Amathet Zealot", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[86609] = {
					"Iron Warmaster", -- [1]
					"Highmaul", -- [2]
				},
				[156577] = {
					"Therum Deepforge", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[48502] = {
					"Defias Enforcer", -- [1]
					"Deadmines", -- [2]
				},
				[132745] = {
					"Frostscale Wanderer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146109] = {
					"Midnight Charger", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144767] = {
					"Gonk's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146852] = {
					"Konrad the Enslaver", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[65522] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[51052] = {
					"Gib the Banana-Hoarder", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[54123] = {
					"Echo of Sylvanas", -- [1]
					"End Time", -- [2]
				},
				[157602] = {
					"Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[124354] = {
					"Kunzen Hunter", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134056] = {
					"Aqu'sirr", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[146853] = {
					"Kefolkis the Unburied", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[140298] = {
					"Gol'kun the Vicious", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[98759] = {
					"Vicious Manafang", -- [1]
					"The Arcway", -- [2]
				},
				[157603] = {
					"Void Globule", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[140973] = {
					"Bore Tunneler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[126422] = {
					"Coralback Scuttler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146854] = {
					"Stella Darkpaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[119000] = {
					"Dreadbeard", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[144807] = {
					"Ravenous Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[157604] = {
					"Crawling Corruption", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[145273] = {
					"The Hand of In'zashi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[146855] = {
					"Akina", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157356] = {
					"Extractor Thelsara", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[124259] = {
					"Jungle Tiger", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157605] = {
					"Burrowing Appendage", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[54699] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[126423] = {
					"Coralback Crab", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[146856] = {
					"Ashen Raider", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[40953] = {
					"Khaaphom", -- [1]
					"Grim Batol", -- [2]
				},
				[139690] = {
					"Brineshell Seacaller", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144245] = {
					"South Sea Glider", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138507] = {
					"Warlord Ultriss", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[136836] = {
					"Shadowbreaker Urzula", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[22848] = {
					"Storm Fury", -- [1]
					"Black Temple", -- [2]
				},
				[87521] = {
					"Iron Slag-Shaper", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[79587] = {
					"BIGklaus", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[138101] = {
					"Stromgarde Sorceress", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139691] = {
					"Brineshell Squallshaper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[105921] = {
					"Nightborne Spellsword", -- [1]
					"The Arcway", -- [2]
				},
				[157607] = {
					"Faceless Shadowcaller", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[136051] = {
					"Fathomus", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[126424] = {
					"Coralback Surfcrawler", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[128547] = {
					"Летучая мышь", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[147370] = {
					"Bladeguard Kaja", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[139692] = {
					"Brineshell Elder", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144299] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[102336] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[157608] = {
					"Faceless Willbreaker", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[156523] = {
					"Maut", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[146859] = {
					"Enslaved Rock Elemental", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[141166] = {
					"Lightbound Vigilant", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[151978] = {
					"Waterstrider", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144300] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[148907] = {
					"Prismatic Image", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[157609] = {
					"K'thir Mindcarver", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[126169] = {
					"Jungle King Runtu", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134063] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[146860] = {
					"Mistscorn Marauder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[104818] = {
					"Ancestral Protection Totem", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[139694] = {
					"Mordshell", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[47162] = {
					"Glubtok", -- [1]
					"Deadmines", -- [2]
				},
				[157610] = {
					"K'thir Dominator", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[140066] = {
					"Axeclaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146861] = {
					"Slavering Skullcleaver", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[139695] = {
					"Swipeclaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155277] = {
					"Gorjesh the Smasher", -- [1]
					"The Eternal Palace", -- [2]
				},
				[118706] = {
					"Necrotic Spiderling", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[144160] = {
					"Chopper Redhook", -- [1]
					"Siege of Boralus", -- [2]
				},
				[137029] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[146862] = {
					"Mistscorn Subjugator", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[102368] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[139860] = {
					"Voru'kar Skitterer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[144303] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[157612] = {
					"Eye of Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[81518] = {
					"Boneyard Tunneler", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[147202] = {
					"Animated Azershard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[87780] = {
					"Slagshop Brute", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[145065] = {
					"Fledgling Nightwing", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[39873] = {
					"Twilight Wyrmcaller", -- [1]
					"Grim Batol", -- [2]
				},
				[48505] = {
					"Defias Shadowguard", -- [1]
					"Deadmines", -- [2]
				},
				[157613] = {
					"Maw of Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[122076] = {
					"Snow Orb", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				[44922] = {
					"Oathsworn Axemaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[147376] = {
					"Barrier", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[139698] = {
					"Clattercraw the Oracle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[157614] = {
					"Tentacle of Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[133556] = {
					"Razak Ironsides", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136976] = {
					"T'zala", -- [1]
					"Kings' Rest", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130912] = {
					"Shadowblade Razi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[140290] = {
					"S.H.E.E.P.", -- [1]
					"Isle of Conquest", -- [2]
				},
				[134821] = {
					"Vilegaze Petrifier", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[161198] = {
					"Warpweaver Dushar", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[133557] = {
					"Razak Ironsides", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[146866] = {
					"Enslaved Frost Elemental", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[147378] = {
					"Treasury Protector", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[139700] = {
					"Brineshell Sea Shaman", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[48229] = {
					"Kobold Digger", -- [1]
					"Deadmines", -- [2]
				},
				[61485] = {
					"General Pa'valak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[134767] = {
					"Deathclaw Egg-Mother", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151742] = {
					"Void-Twisted Invader", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[151901] = {
					"Restless Spirit", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146867] = {
					"Mistscorn Sharphorn", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139701] = {
					"Brineshell Minor Oracle", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[99645] = {
					"Shadowmoon Technician", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[105617] = {
					"Eredar Chaosbringer", -- [1]
					"The Arcway", -- [2]
				},
				[122846] = {
					"Leftovers", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[132755] = {
					"Breakbeak Scavenger", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138889] = {
					"Uvuld the Forseer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139040] = {
					"Deep Oracle Unani", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[142999] = {
					"Rhonin", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[136884] = {
					"Bristlethorn Battleguard", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135366] = {
					"Blacktooth Arsonist", -- [1]
					"Tol Dagor", -- [2]
				},
				[146869] = {
					"Gyrum the Virulent", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59835] = {
					"Krik'thik Swarmer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[76266] = {
					"High Sage Viryx", -- [1]
					"Skyreach", -- [2]
				},
				[121567] = {
					"Pucki", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76778] = {
					"Life-Pact Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[146870] = {
					"Spellbinder Ohnazae", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[102372] = {
					"Felhound Mage Slayer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[146746] = {
					"Honorbound Conqueror", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[140384] = {
					"Jeweled Broodwatcher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157620] = {
					"Prophet Skitra", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[47739] = {
					"\"Captain\" Cookie", -- [1]
					"Deadmines", -- [2]
				},
				[48447] = {
					"Monstrous Parrot", -- [1]
					"Deadmines", -- [2]
				},
				[146871] = {
					"Matriarch Nas'naya", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146246] = {
					"Ovix the Toxic", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[147895] = {
					"Rezani Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[76267] = {
					"Solar Zealot", -- [1]
					"Skyreach", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				[153526] = {
					"Aqir Swarmer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[85225] = {
					"Gorian Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[154550] = {
					"Amathet Sun Priest", -- [1]
					"Halls of Origination", -- [2]
				},
				[44924] = {
					"Oathsworn Myrmidon", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[140541] = {
					"Kindleweb Creeper", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[147896] = {
					"Zandalari Crusader", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[144825] = {
					"Toxinbelly Croaker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145337] = {
					"Sandclaw Crab", -- [1]
					"The Eternal Palace", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[146756] = {
					"Energized Storm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[83690] = {
					"Panthran Witchdoctor", -- [1]
					"Ashran", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[160182] = {
					"Void Initiate", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[148624] = {
					"Echo of Pa'ku", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[148921] = {
					"Kaldorei Glaive Thrower", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[157447] = {
					"Fanatical Cultist", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[145850] = {
					"Gilnean Defuser", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[154552] = {
					"Amathet Zealot", -- [1]
					"Halls of Origination", -- [2]
				},
				[146874] = {
					"Windcaller Mariah", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[132803] = {
					"Rockmane Wendigo", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[160183] = {
					"Void Fanatic", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[23682] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[144827] = {
					"Bogbelcher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138842] = {
					"Ta'kil the Resonator", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[158136] = {
					"Inquisitor Darkspeak", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[136893] = {
					"Groundshaker Aggan", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146875] = {
					"Valimok the Vicious", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139197] = {
					"Verdant Lasher", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[156089] = {
					"Aqir Venomweaver", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[12099] = {
					"Firesworn", -- [1]
					"Molten Core", -- [2]
				},
				[140441] = {
					"Muskflank Calf", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140062] = {
					"Diremaul", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[154554] = {
					"Amathet Guardian", -- [1]
					"Halls of Origination", -- [2]
				},
				[146876] = {
					"Machitu the Brutal", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[59684] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[144829] = {
					"Thundercroak", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[153531] = {
					"Aqir Bonecrusher", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[146365] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[83692] = {
					"Panthran Pride", -- [1]
					"Ashran", -- [2]
				},
				[139199] = {
					"Verdant Spitter", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[136012] = {
					"Mountanus the Immovable", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144830] = {
					"Yaz'za the Devourer", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[153532] = {
					"Aqir Mindhunter", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[146366] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[150295] = {
					"Tank Buster MK1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[34944] = {
					"Keep Cannon", -- [1]
					"Isle of Conquest", -- [2]
				},
				[160699] = {
					"Angry Mailemental", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[144831] = {
					"Colossal Spadefoot", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[158140] = {
					"Frenzied Rat", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[146367] = {
					"Char'golm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138513] = {
					"Vyrantion", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[128651] = {
					"Hadal Darkfathom", -- [1]
					"Siege of Boralus", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[153401] = {
					"K'thir Dominator", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[40319] = {
					"Drahga Shadowburner", -- [1]
					"Grim Batol", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[44926] = {
					"Oathsworn Wanderer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[61434] = {
					"Sik'thik Vanguard", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[24179] = {
					"Amani'shi Wind Walker", -- [1]
					"Zul'Aman", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[139474] = {
					"Qor-Xin the Earth-Caller", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136840] = {
					"Zoga", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146881] = {
					"Soothsayer Brinvulf", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139203] = {
					"Verdant Treant", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[146753] = {
					"Kul Tiran Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[152512] = {
					"Stormwraith", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139442] = {
					"Backbreaker Zukan", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149441] = {
					"Frozen Ballista", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[162238] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[146370] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146882] = {
					"Gargantuan Blighthound", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146240] = {
					"AzerMEK Beam Target", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
				},
				[78832] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[146371] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[146883] = {
					"Houndmaster Angvold", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[80400] = {
					"Iron Assembly Warden", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[40320] = {
					"Valiona", -- [1]
					"Grim Batol", -- [2]
				},
				[40448] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[126181] = {
					"Ramut the Black", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[36609] = {
					"Val'kyr Shadowguard", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[65402] = {
					"Gurthan Swiftblade", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[155586] = {
					"Arathor Ancestor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[76205] = {
					"Blooded Bladefeather", -- [1]
					"Skyreach", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[161217] = {
					"Aqir Skitterer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[158146] = {
					"Fallen Riftwalker", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[58108] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[146885] = {
					"Foulshriek", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[123275] = {
					"Saltfur Hozen", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134799] = {
					"Fathomclaw", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[161218] = {
					"Aqir Crusher", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[137160] = {
					"Valorcall Engineer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[140560] = {
					"Blazeseeker", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139387] = {
					"Nassa the Cold-Blooded", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146886] = {
					"Hrolskald the Fetid", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138503] = {
					"Overseer of Twilight", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139486] = {
					"Skycrack", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139391] = {
					"Darkwave Assassin", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144839] = {
					"Whitetail Doe", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[153541] = {
					"Slavemaster Ul'rok", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[138481] = {
					"Chromitus", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[154565] = {
					"Loyal Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[132919] = {
					"Spitefin Behemoth", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138847] = {
					"Battle-Mender Ka'vaz", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157483] = {
					"Ysedra the Darkener", -- [1]
					"Halls of Origination", -- [2]
				},
				[144840] = {
					"Mottled Fawn", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[122088] = {
					"Slitherblade Skulker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[148623] = {
					"Echo of Gonk", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[61436] = {
					"Sik'thik Bladedancer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[140082] = {
					"Gibb", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[140070] = {
					"Bloodscent the Tracker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[68139] = {
					"Suffering Soul Fragment", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[145865] = {
					"Worgen Musketeer", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[146889] = {
					"Fleshrot Deathwalker", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[143306] = {
					"Majestic Penguin", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[144842] = {
					"Tide Crawler", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[80534] = {
					"Ornery Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[50815] = {
					"Rogi", -- [1]
					"The Eternal Palace", -- [2]
				},
				[54952] = {
					"Brittle Ghoul", -- [1]
					"End Time", -- [2]
				},
				[146890] = {
					"Fleshrot Runeweaver", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[78978] = {
					"Darkshard Gnasher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[134389] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140861] = {
					"Duster", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56717] = {
					"Hoptallus", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[79092] = {
					"Fungal Flesh-Eater", -- [1]
					"Highmaul", -- [2]
				},
				[140457] = {
					"Bramblefur Grazer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[129000] = {
					"Southsea Brawler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140076] = {
					"Knucklebump Silverback", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[12100] = {
					"Lava Reaver", -- [1]
					"Molten Core", -- [2]
				},
				[58965] = {
					"Azatik", -- [1]
					"Waycrest Manor", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[122090] = {
					"Sarashas the Pillager", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[105629] = {
					"Wyrmtongue Scavenger", -- [1]
					"The Arcway", -- [2]
				},
				[77557] = {
					"Admiral Gar'an", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[123288] = {
					"Southsea Cannoneer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135715] = {
					"Ferocious Nightsaber", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[155706] = {
					"Yox'ith", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[148940] = {
					"Kaldorei Chimaera", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[159416] = {
					"Spiked Tentacle", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[79093] = {
					"Skyreach Sun Talon", -- [1]
					"Skyreach", -- [2]
				},
				[62205] = {
					"Wing Leader Ner'onok", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[146893] = {
					"Fleshrot Mystic", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148262] = {
					"Tidewater Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[136888] = {
					"Dirt-Speaker Barrul", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138990] = {
					"Urgl the Blind", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[128631] = {
					"Tidal Clickshell", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[133585] = {
					"Dizzy Dina", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[34564] = {
					"Anub'arak", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[85748] = {
					"Iron Mauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[123286] = {
					"Southsea Gambler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59518] = {
					"Bloated Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[132050] = {
					"Huntmaster Theodore", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[153141] = {
					"Endless Hunger Totem", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[139035] = {
					"Razorfin Aqualyte", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146686] = {
					"Cowled Plaguebringer", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[43778] = {
					"Foe Reaper 5000", -- [1]
					"Deadmines", -- [2]
				},
				[120556] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[98203] = {
					"Ivanyr", -- [1]
					"The Arcway", -- [2]
				},
				[140392] = {
					"Direbore of the Thousand Tunnels", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132051] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				[416] = {
					"Jaktog", -- [1]
					"Crucible of Storms", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[158157] = {
					"Overlord Mathias Shaw", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[162764] = {
					"Twisted Appendage", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[77559] = {
					"Solar Magnifier", -- [1]
					"Skyreach", -- [2]
				},
				[139218] = {
					"Life-Tender Olvarius", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[152836] = {
					"Azerite Borer", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[148432] = {
					"Thunderaan's Fury Totem", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[161229] = {
					"Aqir Venomweaver", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[134286] = {
					"Archmage Tamuura", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[158158] = {
					"Forge-Guard Hurrul", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[138195] = {
					"Servant of Thros", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[134612] = {
					"Grasping Tentacles", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139219] = {
					"Nasira Morningfrost", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140341] = {
					"Cloudscraper", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135761] = {
					"Thundering Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[144850] = {
					"Darkscale Siren", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[131356] = {
					"Jungle Stalker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[34775] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[114671] = {
					"Fragmented Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[59519] = {
					"Stout Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140860] = {
					"Cliffracer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[68140] = {
					"Hungering Soul Fragment", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[155814] = {
					"Eldritch Understudy", -- [1]
					"The Eternal Palace", -- [2]
				},
				[146899] = {
					"Ashen Deathguard", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[147411] = {
					"Blightguard Captain Thedric", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[96756] = {
					"Ymiron, the Fallen King", -- [1]
					"Maw of Souls", -- [2]
				},
				[157137] = {
					"Terror Tendril", -- [1]
					"Halls of Origination", -- [2]
				},
				[130028] = {
					"Ashvane Priest", -- [1]
					"Tol Dagor", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[151681] = {
					"Shorttail the Chucker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[147924] = {
					"Geoshard", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[132056] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[48338] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[161745] = {
					"Hepthys", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[152311] = {
					"Zanj'ir Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[155920] = {
					"Azsh'ari Galeblade", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[139223] = {
					"Verdant Dryad", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[128650] = {
					"Chopper Redhook", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[139224] = {
					"Dryad Grove-Tender", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[59520] = {
					"Fizzy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140248] = {
					"Moonchaser the Swift", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140760] = {
					"Earthliving Giant", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[157449] = {
					"Sinister Soulcarver", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[10981] = {
					"Loup", -- [1]
					"Eye of the Storm", -- [2]
				},
				[139225] = {
					"Evergrove Keeper", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[135642] = {
					"Duskcoat Tiger Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140249] = {
					"Slatehide", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[133389] = {
					"Galvazzt", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[102446] = {
					"Fel Lord Betrug", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[61056] = {
					"Primal Earth Elemental", -- [1]
					"Crucible of Storms", -- [2]
				},
				[80422] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[22956] = {
					"Sister of Pain", -- [1]
					"Black Temple", -- [2]
				},
				[135643] = {
					"Ren'kiri", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140250] = {
					"Pinegraze Stag", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[49539] = {
					"James Harrington", -- [1]
					"Deadmines", -- [2]
				},
				[140432] = {
					"Craghoof Leaper", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[43658] = {
					"Frenzied Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[37799] = {
					"Vile Spirit", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[146905] = {
					"Deranged Plaguefiend", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135644] = {
					"Dawnstalker", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[148441] = {
					"Gnomish Gyro-Engineer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[76796] = {
					"Heavy Spear", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[61387] = {
					"Quilen Guardian", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[146906] = {
					"Festering Hulk", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59521] = {
					"Bubbling Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[148442] = {
					"Gnomish Commando", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[23403] = {
					"Illidari Assassin", -- [1]
					"Black Temple", -- [2]
				},
				[145371] = {
					"Uu'nat", -- [1]
					"Crucible of Storms", -- [2]
				},
				[158168] = {
					"Dark Disciple", -- [1]
					"Halls of Origination", -- [2]
				},
				[131123] = {
					"Enchanted Tiki Mask", -- [1]
					"Atal'Dazar", -- [2]
				},
				[146907] = {
					"Risen Marksman", -- [1]
					"8.1 Darkshore Scenario", -- [2]
				},
				[149635] = {
					"Blooming Protector", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[135646] = {
					"Bloodstripe the Render", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[148443] = {
					"Defense-A-Bot", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[144860] = {
					"Sira Moonwarden", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[145372] = {
					"Wild Mooncaller", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[158169] = {
					"Devout Disciple", -- [1]
					"Halls of Origination", -- [2]
				},
				[126449] = {
					"Siltspitter", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155098] = {
					"Rexxar", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138992] = {
					"Muckfin Puddlejumper", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[135647] = {
					"Ituakee", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139480] = {
					"Stonebound Protector", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"Atal'Dazar", -- [2]
				},
				[85131] = {
					"Jared V. Hellstrike", -- [1]
					"Ashran", -- [2]
				},
				[136849] = {
					"Sandscalp Berserker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[139858] = {
					"Voru'kar Infector", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[135648] = {
					"Driftcoat", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[68096] = {
					"Ashtongue Primalist", -- [1]
					"Pursuing the Black Harvest", -- [2]
				},
				[133666] = {
					"Dizzy's Decoy", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136864] = {
					"Uguu the Feared", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[158171] = {
					"Faceless Destroyer", -- [1]
					"Halls of Origination", -- [2]
				},
				[150254] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[146910] = {
					"Fleshrot Plaguetalon", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155612] = {
					"Azsh'ari Channeler", -- [1]
					"The Eternal Palace", -- [2]
				},
				[135649] = {
					"Clawflurry", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139343] = {
					"Icetusk Drudge", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140768] = {
					"Guuru the Mountain-Breaker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135716] = {
					"Nightsaber Hunter", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139807] = {
					"Venture Surveyor", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[147026] = {
					"Forsaken Bilespitter", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[146911] = {
					"Fleshrot Blighthound", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[153119] = {
					"Lesser Void Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[147935] = {
					"Azergem Crawler", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[147537] = {
					"Treasury Protector", -- [1]
					"Zandalari Treasury", -- [2]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[126451] = {
					"Crushclaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138483] = {
					"Obsidian Monstrosity", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[45062] = {
					"Oathsworn Scorpid Keeper", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[147936] = {
					"Azergem Shardback", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[49541] = {
					"Vanessa VanCleef", -- [1]
					"Deadmines", -- [2]
				},
				[141282] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[22855] = {
					"Illidari Nightlord", -- [1]
					"Black Temple", -- [2]
				},
				[146401] = {
					"Darkscale Dig-Slave", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[26125] = {
					"Stoneleaper", -- [1]
					"Eye of the Storm", -- [2]
				},
				[98435] = {
					"Unstable Oozeling", -- [1]
					"The Arcway", -- [2]
				},
				[59461] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[140259] = {
					"Runehoof Greatstag", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[53140] = {
					"Son of Flame", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[63106] = {
					"Sik'thik Swarmer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[23580] = {
					"Amani'shi Warbringer", -- [1]
					"Zul'Aman", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[155616] = {
					"Zanj'ir Brute", -- [1]
					"The Eternal Palace", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[140260] = {
					"Runehoof Courser", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[148962] = {
					"Ravenous Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134215] = {
					"Duskrunner Lorinas", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[34607] = {
					"Nerubian Burrower", -- [1]
					"Caverns of Time - Anniversary", -- [2]
				},
				[134893] = {
					"Ironweb Spider", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[150547] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[48262] = {
					"Ogre Bodyguard", -- [1]
					"Deadmines", -- [2]
				},
				[156641] = {
					"Enthralled Weaponsmith", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[140773] = {
					"Deepsea Tidecrusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[32517] = {
					"Xirips", -- [1]
					"The Eternal Palace", -- [2]
				},
				[54701] = {
					"Time-Twisted Huntress", -- [1]
					"End Time", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[102395] = {
					"Infiltrator Assassin", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[156130] = {
					"Lesser Zoatroid", -- [1]
					"The Eternal Palace", -- [2]
				},
				[156642] = {
					"Enthralled Laborer", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[153059] = {
					"Aethanel", -- [1]
					"The Eternal Palace", -- [2]
				},
				[49670] = {
					"Glubtok", -- [1]
					"Deadmines", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[158690] = {
					"Cultist Tormenter", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[136208] = {
					"Stromgarde Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[155619] = {
					"Zanj'ir Honor Guard", -- [1]
					"The Eternal Palace", -- [2]
				},
				[156131] = {
					"Zanj'ir Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140263] = {
					"Runehoof Stag", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[153060] = {
					"Cyranus", -- [1]
					"The Eternal Palace", -- [2]
				},
				[138430] = {
					"Fogsail Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[39954] = {
					"Twilight Shadow Weaver", -- [1]
					"Grim Batol", -- [2]
				},
				[56589] = {
					"Striker Ga'dok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[100393] = {
					"Dread Felbat", -- [1]
					"The Arcway", -- [2]
				},
				[82733] = {
					"Night-Twisted Shadowsworn", -- [1]
					"Highmaul", -- [2]
				},
				[156132] = {
					"Azsh'ari Witch", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140264] = {
					"Runehoof Calf", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161251] = {
					"Cultist Sycophant", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[163841] = {
					"Amalgamation of Flesh", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[148582] = {
					"Stormbound Guardian", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[151029] = {
					"Thornspeaker Tavery", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[54544] = {
					"Echo of Tyrande", -- [1]
					"End Time", -- [2]
				},
				[149144] = {
					"Jaina's Tide Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[156133] = {
					"Dreadcoil Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				[140777] = {
					"Gemshard Colossus", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[76097] = {
					"Solar Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[159303] = {
					"Monstrous Behemoth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Isle of Conquest", -- [2]
				},
				[102397] = {
					"Wrathlord Bulwark", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[127479] = {
					"The Sand Queen", -- [1]
					"Tol Dagor", -- [2]
				},
				[157158] = {
					"Cultist Slavedriver", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[11988] = {
					"Golemagg the Incinerator", -- [1]
					"Molten Core", -- [2]
				},
				[140985] = {
					"Acidic Worm", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146409] = {
					"Lady Jaina Proudmoore", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[129015] = {
					"Southsea Third Mate", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139755] = {
					"First Mate McNally", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[153064] = {
					"Overzealous Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[147498] = {
					"Prelate Jakit", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[145898] = {
					"Anointed Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[138220] = {
					"Blighted Malice", -- [1]
					"Thros, The Blighted Lands", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[102398] = {
					"Blazing Infernal", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[139756] = {
					"Cutthroat Sheila", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[153065] = {
					"Voidbound Ravager", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[138972] = {
					"Zian-Ti Cloudbreaker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140847] = {
					"Earth Spirit", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139406] = {
					"Hassan the Bloody Scale", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[155810] = {
					"Frozen Sentry", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129016] = {
					"Southsea Musketeer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[140269] = {
					"Ulu'tale", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144876] = {
					"Apetagonizer 3000", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[140430] = {
					"Craghoof Bounder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[138431] = {
					"Tidemistress Najula", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[76906] = {
					"Operator Thogar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[45065] = {
					"Tol'vir Merchant", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[139758] = {
					"Annie Two-Pistols", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[156650] = {
					"Dark Manifestation", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[147495] = {
					"Rastari Enforcer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[136846] = {
					"Sandscalp Blood Drinker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[79467] = {
					"Adept of the Dawn", -- [1]
					"Skyreach", -- [2]
				},
				[39961] = {
					"Enslaved Water Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[142511] = {
					"Exarch Orelis", -- [1]
					"Gorgrond - Mag'har Scenario", -- [2]
				},
				[140325] = {
					"Stonehusk Scarab", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139759] = {
					"Mutineer Jalia", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140271] = {
					"Severhorn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136688] = {
					"Fanatical Driller", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[134280] = {
					"Vindicator Baatul", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[161408] = {
					"Malicious Growth", -- [1]
					"The Underrot", -- [2]
				},
				[140986] = {
					"Acidic Burrower", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[102400] = {
					"Eredar Shadow Mender", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[139760] = {
					"Head Navigator Franklin", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140272] = {
					"Forest-Strider", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[138446] = {
					"Fathom-Caller Zelissa", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[156820] = {
					"Dod", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[145903] = {
					"Darkforged Crusader", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[6500] = {
					"PiouPiou", -- [1]
					"Eye of the Storm", -- [2]
				},
				[155271] = {
					"Abyssal Spearhunter", -- [1]
					"The Eternal Palace", -- [2]
				},
				[155629] = {
					"Azsh'ari Stormbinder", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139761] = {
					"Deckmaster O'Rourke", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[156653] = {
					"Coagulated Horror", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[48521] = {
					"Defias Squallshaper", -- [1]
					"Deadmines", -- [2]
				},
				[140425] = {
					"Surefoot", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130298] = {
					"Water Elemental", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[151058] = {
					"Bubbling Blood", -- [1]
					"Crucible of Storms", -- [2]
				},
				[136885] = {
					"Bristlemane Bramble-Weaver", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[147440] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[136862] = {
					"Orgo", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144881] = {
					"Rescued Refugee", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[129802] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[77337] = {
					"Aknor Steelbringer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[159275] = {
					"Portal Keeper", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[108624] = {
					"Turtle", -- [1]
					"Kings' Rest", -- [2]
				},
				[100354] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[156143] = {
					"Voidcrazed Hulk", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[151028] = {
					"Thornstalker Nydora", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[142000] = {
					"Haunting Tendril", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Isle of Conquest", -- [2]
				},
				[130299] = {
					"Droplet", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[130334] = {
					"Gritplate Gazer", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140857] = {
					"Jadeflare", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[131574] = {
					"Shimmerfin", -- [1]
					"The Eternal Palace", -- [2]
				},
				[136181] = {
					"Volcano", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151027] = {
					"Thornguard Burton", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[47626] = {
					"Admiral Ripsnarl", -- [1]
					"Deadmines", -- [2]
				},
				[17252] = {
					"Krimnixx", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[142324] = {
					"Bluefin Dolphin", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130575] = {
					"Wandering Axebeak", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[145061] = {
					"Screeching Nightwing", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[156145] = {
					"Burrowing Appendage", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[54435] = {
					"Kattè", -- [1]
					"End Time", -- [2]
				},
				[48522] = {
					"Defias Pirate", -- [1]
					"Deadmines", -- [2]
				},
				[54700] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[126205] = {
					"Profit-O-Matic", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[48906] = {
					"Blaze of the Heavens", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[114712] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
			},
			["indicator_scale"] = 0.99999994039536,
			["aura_grow_direction"] = 1,
			["focus_color"] = {
				0.9921568627451, -- [1]
				1, -- [2]
				0.85882352941176, -- [3]
				0.43592411279678, -- [4]
			},
			["indicator_anchor"] = {
				["x"] = 0,
			},
			["npc_colors"] = {
				[146409] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[137591] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129601] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[146753] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"PRIEST", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"PRIEST", -- [3]
				},
				[162331] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[148120] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122971] = {
					true, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
			},
			["minor_height_scale"] = 0.99999994039536,
			["aura_padding"] = 0,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1555037041,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 46,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1550151941,
					["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 76,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190547,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["Icon"] = 1990989,
					["PlaterCore"] = 1,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 90,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Author"] = "Ahwa-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1598190546,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Execute Range [Plater]",
					["Icon"] = 135358,
					["PlaterCore"] = 1,
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1598190548,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 94,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = true,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 97,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190397,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Current Target Color [Plater]",
					["Icon"] = 878211,
					["PlaterCore"] = 1,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 26,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190553,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Change All Fonts",
					["Icon"] = 134331,
					["PlaterCore"] = 1,
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 58,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Ditador-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Change the color of the aura timer by it's time left",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                auraIcon.TimerText:SetAlpha (envTable.Alpha.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                auraIcon.TimerText:SetAlpha (envTable.Alpha.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                auraIcon.TimerText:SetAlpha (envTable.Alpha.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    envTable.Alpha = {\n        critical = 1,\n        warning = 0.8,\n        okay = 0.7,\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190612,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Paint Aura Timers",
					["Icon"] = "Interface\\Timer\\Challenges-Logo",
					["PlaterCore"] = 1,
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accept 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = -2\n    \n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 1, 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -2, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 2, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 2, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Time"] = 1598190555,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Icon Anchor",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 26,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Change the aura icon animation when they are shown above the nameplate",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --require a /reload after changing this code\n    \n    --this is a standard function replacement\n    --what the code is doing is overwriting an original function from Plater to create customizations\n    --this is allowed and safe to do\n    \n    function Plater.CreateShowAuraIconAnimation (iconFrame)\n        \n        --create the animation hub\n        local iconShowInAnimation = Plater:CreateAnimationHub (iconFrame)\n        \n        --create each individual animation\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 1, 0, 0, -10)\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 2, .05, 0, 13)\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 3, .05, 0, -3)\n        \n        Plater:CreateAnimation (iconShowInAnimation, \"alpha\", 2, .05, .5, 1)\n        \n        Plater:CreateAnimation (iconShowInAnimation, \"scale\", 2, .05, .8, .8, 1.2, 1.2)\n        Plater:CreateAnimation (iconShowInAnimation, \"scale\", 3, .05, 1.2, 1.2, .9, .9)\n        \n        --store the animation within the icon frame object\n        iconFrame.ShowAnimation = iconShowInAnimation\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190157,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Aura Icon Animation",
					["Icon"] = 237026,
					["PlaterCore"] = 1,
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 33,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Just hide the cast icon. There's a bypass table in the constructor script, you may add some spells there to ignore the effect of this script and show its icon.",
					["Hooks"] = {
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add the spell name or spellID in this table to still show its icon in the cast bar\n    envTable.ByPass = {\n        \n        Invincible = true, --example of spell name to ignore (mounting in the invincible mount shows the icon)\n        \n        \n    }\n    \n    \n    function envTable.HideIcon (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        \n        if (not envTable.ByPass [castBar.SpellName ] and not envTable.ByPass [castBar.SpellID]) then\n            \n            unitFrame.castBar.Icon:Hide()\n            unitFrame.castBar.BorderShield:Hide()\n            \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190547,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Hide Cast Icon",
					["Icon"] = "Interface\\GLUES\\LOGIN\\Glues-CheckBox-Check",
					["PlaterCore"] = 1,
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 67,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190318,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Change Prediction Color",
					["Icon"] = 1035048,
					["PlaterCore"] = 1,
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 165,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Rhkqt-Tarren Mill",
					["OptionsValues"] = {
					},
					["Desc"] = "Sets Health Text to Adaptive Membrane Absorb Value",
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    local text = envTable.healthFunc()\n    if text then\n        unitFrame.healthBar.lifePercent:SetText(text)\n    end\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local text = envTable.healthFunc()\n    if text then\n        unitFrame.healthBar.lifePercent:SetText(text)\n    end\nend\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --[[\n    ###################\n    ##                          ##\n    ##       SETTINGS       ##\n    ##                          ## \n    ###################\n]]\n    \n    -- END OF SETTINGS\n    local absorbValueOnly = {\n        [\"Methodjohn\"] =true,\n        [\"Synthesis Growth\"] =true,\n        [\"Horrific Hemorrhage\"] =true,\n    }\n    \n    local shortenNumber = function(number, significant)\n        if type(number) ~= \"number\" then\n            number = tonumber(number)\n        end\n        if not number then\n            return\n        end\n        \n        if type(significant) ~= \"number\" then\n            significant = tonumber(significant)\n        end\n        significant = significant or 3\n        \n        local affixes = {\n            \"k\",\n            \"m\",\n            \"b\",\n            \"t\",\n        }\n        affixes[0] = \"\"\n        \n        local log, floor, max, abs = math.log, math.floor, math.max, math.abs\n        \n        local powerTen = floor(log(abs(number)) / log(10)) --get the log base 10\n        powerTen = powerTen < 0 and 0 or powerTen --catch negative powers for numbers with an absolute value below 1\n        local affix = floor(powerTen / 3) --every third power of ten (so thousands) results in a new affix\n        local divNum = number / 1000^affix --get the \"new\" number by division with the floored amounts\n        local before = powerTen%3 + 1 --determine how many digits before the .\n        local after = max(0, significant - before) --and how many digits after\n        \n        return string.format(string.format(\"%%.%df%s\", after, affixes[affix]), divNum)\n    end\n    \n    envTable.healthFunc = function()\n        if absorbValueOnly[unitFrame.namePlateUnitName] then\n            local absorbs = UnitGetTotalAbsorbs(unitId)\n            if absorbs>0 then return shortenNumber(UnitGetTotalAbsorbs(unitId)) end            \n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190318,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "Adaptive Membrane Absorb Value",
					["Icon"] = 135987,
					["PlaterCore"] = 1,
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Key"] = "iconSizeOffset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.30567157268524, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Key"] = "textureWidth",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height Mod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Key"] = "texturePosition",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [17]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.unitName:GetText()\n    \n    local  FirstName  = { [144747] = true, -- pakus-aspect\n        [144767]  = true, -- gonks-aspect\n        [144963]  = true, -- kimbuls-aspect\n        [144941] = true,  -- akundas-aspect\n        [148894] = true, -- lost-soul\n        [148716] = true, -- risen-soul\n        [148893] = true, -- tormented-soul\n        [135989] = true, -- shieldbearer-of-zul\n        [127879] = true, -- shieldbearer-of-zul\n        [131527] = true, -- lord-waycrest\n        [131545] = true, -- lady-waycrest\n        [131863] = true, -- raal\n        [144324] = true, -- gorak-tul\n        [127484] = true, -- jes-howlis\n        [130655] = true, -- bobby-howlis\n        [155432] = true, -- enchanted-emissary\n        [155433] = true, -- void-touched-emissary\n        [135764] = true, --  explosive-totem\n        [135761] = true, -- thundering-totem\n        [135765] = true, -- torrent-totem\n        [135759] = true, --earthwall-totem\n        [134993] = true, -- mchimba\n        [137614] = true, -- demolishing 1\n        [140447] = true, -- demolishing 2\n        [137625] = true, --demolishing 3\n        [137626] = true, --demolishing 4\n        [139799] = true, -- ironhull apprentice\n        [139800] = true, -- galecaller apprentice\n        [135472] = true, -- zanzal the wise\n        [135475] = true, -- kula the butcher\n        [135470] = true, -- aka'ali the conqueror\n        [153755] = true, -- naeno megacrash\n        [150712] = true, -- trixie tazer\n        [131817] = true, -- Cragmaw the Infested\n        [134069] = true, --volzith the whisperer\n        [151657] = true, -- bomb tonk\n        [151658] = true, -- strider tonk\n        [151659] = true, -- rocket tonk\n        [144249] = true, -- omega buster\n        [136297] = true, -- forgotten denizen\n        [136295] = true, -- sunken denizen\n        [137405] = true} -- gripping\n    \n    \n    if (text) then\n        local  a ,b, c ,d ,e ,f=  strsplit(\" \",text,5)   \n        if not FirstName [unitFrame.namePlateNpcId] then \n            unitFrame.healthBar.unitName:SetText (f or e or d or c or b or a)  \n        else\n            unitFrame.healthBar.unitName:SetText (a) \n        end\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1598190429,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134331,
					["Enabled"] = true,
					["Revision"] = 182,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show Last Name only.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Last Name Only",
				}, -- [18]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 0.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1598190158,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133004,
					["Enabled"] = false,
					["Revision"] = 131,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar Border",
				}, -- [19]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = .5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -2, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1598190571,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133004,
					["Enabled"] = false,
					["Revision"] = 138,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Icon Border",
				}, -- [20]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateCastBar (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateCastBar (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border settings\n    envTable.BorderThickness = 0.5\n    envTable.BorderColor = \"black\"\n    \n    --Icon anchor settings\n    --show cast icon\n    envTable.ShowIcon = true\n    --icon size\n    envTable.BigIcon = true\n    envTable.InsideBar = true -- only work with small icon\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --or \"right\"\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\TargetingFrame\\Nameplates]]\n    envTable.ShieldSize = {10, 12}\n    \n    --private\n    --update the border\n    function envTable.UpdateCastBar (unitFrame)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        local offset = {x = 0, y = 0, side = 9}\n        \n        if unitFrame.ActorType then\n            offset = Plater.db.profile.plate_config[unitFrame.ActorType].spellname_text_anchor\n        end\n        \n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()  \n        castBar.CastBarBorder:Show()\n        \n        if (envTable.ShowIcon) then\n            local frame = castBar\n            local xoff = 0\n            \n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                \n                if (envTable.BigIcon) then\n                    frame = healthBar\n                else\n                    if (envTable.InsideBar) then\n                        castBar:SetPoint (\"topleft\",  healthBar, \"bottomleft\", castBar:GetHeight(), 0)\n                        castBar:SetPoint (\"topright\", healthBar, \"bottomright\", 0, 0)    \n                    else\n                        xoff = -0.5\n                    end\n                end\n                \n                icon:SetPoint (\"topright\",  frame, \"topleft\", xoff, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", xoff, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                \n                if (envTable.BigIcon) then\n                    frame = healthBar\n                else\n                    if (envTable.InsideBar) then\n                        castBar:SetPoint (\"topleft\",  healthBar, \"bottomleft\",0, 0)\n                        castBar:SetPoint (\"topright\", healthBar, \"bottomright\", -castBar:GetHeight(), 0) \n                    else\n                        xoff = 0.5\n                    end\n                end\n                \n                icon:SetPoint (\"topleft\",  frame, \"topright\", xoff, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", xoff, 0)\n            end\n            \n            icon:SetWidth (icon:GetHeight())     \n            castBar.IconBorder:UpdateSizes()\n            castBar.IconBorder:SetBorderSizes (size, size, size, size)\n            castBar.IconBorder:SetVertexColor (r, g, b, a)\n            icon:Show()\n            castBar.IconOverlayFrame:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt and not castBar.IsInterrupted) then\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetTexCoord (0.935, 0.98, 0.245, 0.359)\n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"RIGHT\", castBar.Text, \"LEFT\", -1, -0.5)\n            shield:Show()\n            \n            Plater.SetAnchor (castBar.Text, {x = offset.x+3, y = offset.y, side = offset.side})\n            \n        else\n            Plater.SetAnchor (castBar.Text, offset)\n            \n            shield:Hide()\n        end\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")   \n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) and (envTable.ShowIcon) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \nend",
					},
					["Time"] = 1598190610,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/DbHvO1awZ/2",
					["Icon"] = 1723997,
					["Enabled"] = true,
					["Revision"] = 1009,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar & Icon form",
				}, -- [21]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local plateFrame = unitFrame.PlateFrame\n    plateFrame.namePlateUnitName = string.sub(plateFrame.namePlateUnitName, 0, 17)\n    Plater.UpdateUnitName (plateFrame) \nend",
					},
					["Time"] = 1598190548,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["scenario"] = true,
							["pvp"] = true,
							["raid"] = true,
							["arena"] = true,
							["none"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134331,
					["Enabled"] = false,
					["Revision"] = 215,
					["semver"] = "",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Character Limit on Name",
				}, -- [22]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" - \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Time"] = 1598190164,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 237031,
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Health / Max Health (%)",
				}, -- [23]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.IsTarget then\n        Plater.SetBorderColor (self, 255, 255, 255, 1.0)\n        unitFrame.healthBar.border:Show()\n    else\n        --unitFrame.healthBar.border:Hide()\n        Plater.SetBorderColor (self, 0, 0, 0, 1.0)\n    end\n    \nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.IsTarget then\n        Plater.SetBorderColor (self, 255, 255, 255, 1.0)\n        unitFrame.healthBar.border:Show()\n    else\n        --unitFrame.healthBar.border:Hide()\n        Plater.SetBorderColor (self, 0, 0, 0, 1.0)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.UpdateBorder (unitFrame, false)\n    \n    Plater.SetBorderColor (self, 0, 0, 0, 1.0)\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then    \n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            else\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n        healthBar.border:SetFrameStrata(\"HIGH\")\n        \n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nend",
					},
					["Time"] = 1598190319,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/YYsKsU4KL/3",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Enabled"] = true,
					["Revision"] = 672,
					["semver"] = "1.0.2",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Target Cast Icon Anchor + Border -Apfel",
				}, -- [24]
			},
			["last_news_time"] = 1583244397,
			["aura_width2"] = 19,
			["aura_stack_size"] = 9,
			["aura_width"] = 19,
			["aura_height2"] = 14,
			["health_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.75452543795109, -- [4]
			},
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1586435139,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Revision"] = 159,
					["Author"] = "Izimode-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Name"] = "Unit - Important [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1581355344,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Revision"] = 401,
					["Author"] = "Tercioo-Sylvanas",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Add the buff name in the trigger box.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Buff Alert [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1581355344,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Revision"] = 234,
					["Author"] = "Tercioo-Sylvanas",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Add the debuff name in the trigger box.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Debuff Alert [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1583332050,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Revision"] = 380,
					["Author"] = "Tercioo-Sylvanas",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Small Alert [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1583332036,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 167,
					["Author"] = "Izimode-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1671133285,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1583332048,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Revision"] = 582,
					["Author"] = "Tercioo-Sylvanas",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
						317165, -- [38]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Big Alert [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"blue\"\n    \n    --custom frames\n    --envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    --envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    --envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    --envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    --envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1586015698,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"blue\"\n    \n    --custom frames\n    --envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    --envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    --envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Revision"] = 356,
					["Author"] = "Bombad�o-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    --envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["NpcNames"] = {
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    --envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1583332049,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Revision"] = 177,
					["Author"] = "Izimode-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Frontal Cone [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1583331418,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Revision"] = 191,
					["Author"] = "Celian-Sylvanas",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Fixate [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1583332051,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Revision"] = 399,
					["Author"] = "Bombad�o-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
						275671, -- [9]
						315932, -- [10]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Very Important [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1581355341,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Revision"] = 197,
					["Author"] = "Tecno-Azralon",
					["__TrashAt"] = 1671133285,
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Name"] = "Fixate On You [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [12]
			},
			["range_check_enabled"] = false,
			["aura_border_colors"] = {
				["is_buff"] = {
					nil, -- [1]
					0, -- [2]
					0, -- [3]
				},
			},
			["castbar_target_anchor"] = {
				["x"] = 2,
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 1,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 13,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 1,
				["Unit Power"] = 1,
				["Cast - Glowing [P]"] = 6,
				["Unit - Important"] = 5,
				["Cast - Quick Flash"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Cast - Big Alert"] = 14,
				["Unit - Show Energy"] = 11,
				["Cast - Important Target [P]"] = 2,
				["Cast - Shield Interrupt"] = 2,
				["Color Change"] = 1,
				["Spiteful Affix"] = 3,
				["Add - Explode on Die [P]"] = 1,
				["Add - Non Elite Trash [P]"] = 4,
				["Countdown"] = 11,
				["Aura Border Color"] = 1,
				["Cast - Stop Casting"] = 3,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Auto Set Skull"] = 11,
				["Cast - Very Important"] = 14,
				["Explosion Affix M+"] = 14,
				["Fixate On You"] = 11,
			},
			["target_highlight_color"] = {
				0.93725490196078, -- [1]
				1, -- [2]
				0.9843137254902, -- [3]
			},
			["extra_icon_anchor"] = {
				["y"] = -2,
				["x"] = -4.2600021362305,
			},
			["use_playerclass_color"] = false,
			["range_check_alpha"] = 0.50244373083115,
			["click_space"] = {
				123, -- [1]
				25, -- [2]
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["castbar_target_font"] = "Expressway",
			["semver"] = "2.0.1",
			["aura_frame2_anchor"] = {
				["y"] = 0.099990844726563,
				["x"] = -0.5,
				["side"] = 1,
			},
			["aura_alpha"] = 1,
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["indicator_faction"] = false,
			["extra_icon_height"] = 20,
			["aura_x_offset"] = 0.5,
			["first_run3"] = true,
			["transparency_behavior"] = 4,
			["debuff_show_cc_border"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.76000000536442, -- [4]
			},
			["aura_stack_color"] = {
				nil, -- [1]
				0.94509803921569, -- [2]
				0.93725490196078, -- [3]
			},
			["health_statusbar_bgtexture"] = "ElvUI Norm",
			["indicator_raidmark_anchor"] = {
				["y"] = -4,
				["x"] = -17.819999694824,
				["side"] = 1,
			},
			["extra_icon_width"] = 21,
			["tank"] = {
				["colors"] = {
					["anothertank"] = {
						0.73333333333333, -- [1]
						0.19607843137255, -- [2]
					},
					["aggro"] = {
						0.18823529411765, -- [1]
						0.76470588235294, -- [2]
						0.054901960784314, -- [3]
					},
					["nocombat"] = {
						0.46666666666667, -- [1]
						0.003921568627451, -- [2]
					},
					["noaggro"] = {
						0.78039215686275, -- [1]
						0.27843137254902, -- [2]
						0.28627450980392, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.81960784313725, -- [2]
						0.26666666666667, -- [3]
					},
				},
			},
			["health_statusbar_texture"] = "ElvUI Norm",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Targetting Alpha"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Execute Range"] = 1,
				["Jaina Encounter"] = 6,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Combo Points"] = 6,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Attacking Specific Unit"] = 2,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color"] = {
				nil, -- [1]
				0.88627450980392, -- [2]
				0.25490196078431, -- [3]
				1, -- [4]
			},
			["update_throttle"] = 0.050000000745058,
			["minor_width_scale"] = 0.99999994039536,
			["castbar_target_text_size"] = 7,
			["aura_frame1_anchor"] = {
				["y"] = 0.099990844726563,
				["x"] = 0.5,
				["side"] = 7,
			},
			["indicator_extra_raidmark"] = false,
			["aura_show_debuffs_personal"] = false,
			["aura_timer_text_font"] = "Accidental Presidency",
			["aura_show_important"] = false,
			["aura_height"] = 14,
			["cast_statusbar_bgtexture"] = "ElvUI Norm",
			["aura2_x_offset"] = -0.5,
			["target_indicator"] = "NONE",
			["auto_toggle_stacking_enabled"] = true,
			["target_shady_alpha"] = 0.44999998807907,
			["tap_denied_color"] = {
				0.37254901960784, -- [1]
				0.37254901960784, -- [2]
				0.37254901960784, -- [3]
			},
			["bossmod_icons_anchor"] = {
				["side"] = 6,
			},
			["indicator_elite"] = false,
			["saved_cvars"] = {
				["nameplateShowSelf"] = "0",
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "0.9",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "1",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateResourceOnTarget"] = "0",
				["nameplateShowEnemyMinions"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["cast_statusbar_bgcolor"] = {
				0.062745098039216, -- [1]
				0.062745098039216, -- [2]
				0.062745098039216, -- [3]
				0.76000000536442, -- [4]
			},
			["bossmod_aura_width"] = 16.039859771729,
			["login_counter"] = 10999,
			["extra_icon_caster_name"] = false,
			["aura_cooldown_show_swipe"] = false,
			["healthbar_framelevel"] = 0,
			["resources"] = {
				["y_offset_target"] = 20,
				["y_offset_target_withauras"] = 32,
			},
			["pet_height_scale"] = 0.99999994039536,
			["color_override_colors"] = {
				[3] = {
					0.78039215686275, -- [1]
					0.27843137254902, -- [2]
					0.29019607843137, -- [3]
				},
				[4] = {
					0.85098039215686, -- [1]
					0.76470588235294, -- [2]
					0.36078431372549, -- [3]
				},
				[5] = {
					0.28627450980392, -- [1]
					0.67843137254902, -- [2]
					0.30196078431373, -- [3]
				},
			},
			["cast_statusbar_use_fade_effects"] = false,
			["bossmod_aura_height"] = 15,
			["aura_tracker"] = {
				["buff_banned"] = {
					["206150"] = true,
					["298473"] = true,
					["299450"] = true,
					["61574"] = true,
					["269278"] = true,
					["61573"] = true,
				},
				["debuff_banned"] = {
					["299353"] = true,
					["288293"] = true,
					["299350"] = true,
					["281242"] = true,
					["288333"] = true,
				},
				["buff_tracked"] = {
					["226512"] = true,
					["209859"] = true,
					["265160"] = true,
					["262092"] = true,
					["273432"] = true,
				},
				["debuff_tracked"] = {
					["285290"] = true,
					["312595"] = true,
				},
			},
			["aura_stack_font"] = "Expressway",
			["patch_version"] = 20,
			["target_highlight_alpha"] = 0,
			["hook_data_trash"] = {
				{
					["Enabled"] = false,
					["Revision"] = 231,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1598190333,
					["PlaterCore"] = 1,
					["OptionsValues"] = {
					},
					["Name"] = "Attacking Specific Unit [Plater]",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["__TrashAt"] = 1671133285,
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["__TrashAt"] = 1671133285,
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1555037147,
					["Icon"] = 135426,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["__TrashAt"] = 1671133285,
					["Time"] = 1598190157,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 296,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [3]
			},
			["aura_timer_text_size"] = 11,
			["extra_icon_show_timer"] = false,
			["aura_cooldown_reverse"] = false,
			["number_region_first_run"] = true,
			["aura_height_personal"] = 19,
			["target_highlight_height"] = 2,
			["aura_width_personal"] = 23,
			["version"] = 2,
			["aura_stack_anchor"] = {
				["x"] = -0.5,
			},
			["buffs_on_aura2"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["cast_statusbar_fadeout_time"] = 0.0099999997764826,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["pet_width_scale"] = 0.99999994039536,
			["dps"] = {
				["colors"] = {
					["notontank"] = {
						0.28627450980392, -- [1]
						0.67843137254902, -- [2]
						0.30196078431373, -- [3]
					},
					["aggro"] = {
						0.78039215686275, -- [1]
						0.27843137254902, -- [2]
						0.28627450980392, -- [3]
					},
					["noaggro"] = {
						0.15294117647059, -- [1]
						0.62352941176471, -- [2]
						0.043137254901961, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.81960784313725, -- [2]
						0.26666666666667, -- [3]
					},
				},
			},
			["aura2_grow_direction"] = 3,
			["cast_statusbar_color_interrupted"] = {
				0, -- [1]
				1, -- [2]
				0.89411764705882, -- [3]
			},
			["cast_statusbar_texture"] = "ElvUI Norm",
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
			["indicator_rare"] = false,
			["auto_toggle_stacking"] = {
				["cities"] = true,
			},
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["cast_statusbar_spark_width"] = 5,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
		},
		["Default"] = {
			["target_highlight"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
						275826, -- [2]
						272888, -- [3]
						272659, -- [4]
						267901, -- [5]
						267830, -- [6]
						265393, -- [7]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						257785, -- [18]
						267237, -- [19]
						266951, -- [20]
						267273, -- [21]
						267433, -- [22]
						263066, -- [23]
						255577, -- [24]
						255371, -- [25]
						350687, -- [26]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						273577, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						258153, -- [28]
						258313, -- [29]
						257069, -- [30]
						274569, -- [31]
						278020, -- [32]
						261635, -- [33]
						272700, -- [34]
						280404, -- [35]
						268030, -- [36]
						265368, -- [37]
						263891, -- [38]
						264520, -- [39]
						265407, -- [40]
						278567, -- [41]
						278602, -- [42]
						258128, -- [43]
						257791, -- [44]
						258938, -- [45]
						265089, -- [46]
						272183, -- [47]
						256060, -- [48]
						257397, -- [49]
						257899, -- [50]
						269972, -- [51]
						270901, -- [52]
						270492, -- [53]
						268129, -- [54]
						268709, -- [55]
						263215, -- [56]
						268797, -- [57]
						262540, -- [58]
						262554, -- [59]
						253517, -- [60]
						255041, -- [61]
						252781, -- [62]
						250368, -- [63]
						258777, -- [64]
						350421, -- [65]
						352158, -- [66]
						349985, -- [67]
						329239, -- [68]
						328400, -- [69]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						384194, -- [7]
						392576, -- [8]
						198750, -- [9]
						387843, -- [10]
						387411, -- [11]
						211299, -- [12]
						198595, -- [13]
						198934, -- [14]
						198962, -- [15]
						156722, -- [16]
						275192, -- [17]
						265912, -- [18]
						274438, -- [19]
						268317, -- [20]
						268375, -- [21]
						276767, -- [22]
						264105, -- [23]
						265876, -- [24]
						270464, -- [25]
						266106, -- [26]
						272180, -- [27]
						278961, -- [28]
						278755, -- [29]
						265468, -- [30]
						256405, -- [31]
						256897, -- [32]
						264101, -- [33]
						280604, -- [34]
						268702, -- [35]
						281621, -- [36]
						262515, -- [37]
						255824, -- [38]
						253583, -- [39]
						250096, -- [40]
						350554, -- [41]
						348513, -- [42]
						351779, -- [43]
						328180, -- [44]
						319898, -- [45]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						372107, -- [6]
						381525, -- [7]
						386660, -- [8]
						385578, -- [9]
						384699, -- [10]
						153501, -- [11]
						153686, -- [12]
						154442, -- [13]
						192018, -- [14]
						219488, -- [15]
						372087, -- [16]
						391726, -- [17]
						391723, -- [18]
						377383, -- [19]
						388976, -- [20]
						370764, -- [21]
						387067, -- [22]
						391118, -- [23]
						391136, -- [24]
						382233, -- [25]
						209027, -- [26]
						212031, -- [27]
						207261, -- [28]
						207979, -- [29]
						198888, -- [30]
						199805, -- [31]
						199050, -- [32]
						191508, -- [33]
						152792, -- [34]
						153395, -- [35]
						255952, -- [36]
						257426, -- [37]
						274400, -- [38]
						272609, -- [39]
						269843, -- [40]
						269029, -- [41]
						272827, -- [42]
						269266, -- [43]
						263912, -- [44]
						264923, -- [45]
						258864, -- [46]
						256955, -- [47]
						265540, -- [48]
						260793, -- [49]
						270003, -- [50]
						270507, -- [51]
						257337, -- [52]
						268415, -- [53]
						275907, -- [54]
						268865, -- [55]
						260669, -- [56]
						260280, -- [57]
						253239, -- [58]
						265541, -- [59]
						250258, -- [60]
						352833, -- [61]
						330403, -- [62]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [31]
			},
			["saved_cvars_last_change"] = {
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2098",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:6: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
			},
			["aura2_y_offset"] = 5,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["npc_cache"] = {
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[191313] = {
					"Bubbling Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184019] = {
					"Burly Rock-Thrower", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[200948] = {
					"Nokhud Apprentice", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[184303] = {
					"Skittering Crawler", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Eastern Kingdoms", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[187154] = {
					"Unstable Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Eastern Kingdoms", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Eastern Kingdoms", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[136347] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[197904] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[189555] = {
					"Astral Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Attacking Specific Unit"] = 2,
				["Hide Neutral Units"] = 1,
				["Combo Points"] = 6,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Extra Border"] = 2,
			},
			["aura2_x_offset"] = 0,
			["saved_cvars"] = {
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowEnemies"] = "1",
				["nameplateShowFriends"] = "1",
			},
			["login_counter"] = 56,
			["plate_config"] = {
				["global_health_height"] = 12,
				["friendlyplayer"] = {
					["actorname_text_font"] = "DORISPP",
					["actorname_text_size"] = 11,
				},
				["global_health_width"] = 112,
			},
			["aura_y_offset"] = 5,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["version"] = -1,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["version"] = -1,
				}, -- [2]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["version"] = -1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["version"] = -1,
				}, -- [5]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["version"] = -1,
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["version"] = -1,
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["version"] = -1,
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [12]
			},
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["aura_x_offset"] = 0,
			["health_selection_overlay_alpha"] = 0.09826067835092545,
			["resources_settings"] = {
				["chr"] = {
					["Player-3676-0A1B44F4"] = "Chi",
					["Player-3676-0A0699C0"] = "Runes",
					["Player-3676-0A4E2C9A"] = "ComboPoints",
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["health_selection_overlay"] = "Atrocity",
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["url"] = "",
					["Icon"] = 135996,
					["Enabled"] = true,
					["Revision"] = 156,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 399,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["__TrashAt"] = 1671141243,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 232,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 376,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 157,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 574,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 324,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 190,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 391,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [11]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 194,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["__TrashAt"] = 1671141243,
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n        end)\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340966,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 21,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["__TrashAt"] = 1671299105,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 687,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["__TrashAt"] = 1671299105,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Name"] = "Health Bar Height Mod",
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Name"] = "Color List by SpellId",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = true,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["__TrashAt"] = 1671299105,
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            texture:Hide()\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        textureStretched:Hide()  \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        print(\"no envTable.NextPercent\")\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670623964,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 498,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1671299105,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671067287,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 501,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1671423804,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Glowing [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["NpcNames"] = {
					},
				}, -- [17]
			},
			["use_ui_parent"] = true,
			["patch_version"] = 21,
			["number_region_first_run"] = true,
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["__TrashAt"] = 1671141243,
					["Time"] = 1547993111,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["__TrashAt"] = 1671141243,
					["Time"] = 1548354524,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 189,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["__TrashAt"] = 1671141243,
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [3]
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Cast - Glowing [P]"] = 8,
				["Cast - Important Target [P]"] = 2,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Cast - Big Alert"] = 14,
				["Fixate On You"] = 11,
				["Cast - Quick Flash"] = 2,
				["Auto Set Skull"] = 11,
				["Spiteful Affix"] = 3,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Circular Swipe"] = 4,
				["Fixate"] = 11,
				["Cast - Stop Casting"] = 3,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Countdown"] = 11,
				["Cast - Very Important"] = 14,
				["Unit - Important"] = 5,
				["Unit - Show Energy"] = 11,
			},
			["first_run3"] = true,
			["ui_parent_scale_tune"] = 1.406249965948519,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.100000023841858,
				},
			},
		},
	},
}
